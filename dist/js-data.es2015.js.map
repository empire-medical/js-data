{"version":3,"file":"js-data.es2015.js","sources":["../src/utils.js","../src/Settable.js","../src/Component.js","../src/Query.js","../src/Relation.js","../src/Relation/HasMany.js","../src/Relation/HasOne.js","../src/Relation/BelongsTo.js","../src/decorators.js","../src/Record.js","../lib/mindex/_utils.js","../lib/mindex/index.js","../src/Collection.js","../src/Schema.js","../src/Mapper.js","../src/Container.js","../src/SimpleStore.js","../src/LinkedCollection.js","../src/DataStore.js","../src/index.js"],"sourcesContent":["/**\n * Utility methods used by JSData.\n *\n * @example\n * import { utils } from 'js-data';\n * console.log(utils.isString('foo')); // true\n *\n * @namespace utils\n * @type {Object}\n */\n\nconst DOMAIN = 'utils'\n\nconst INFINITY = 1 / 0\nconst MAX_INTEGER = 1.7976931348623157e308\nconst BOOL_TAG = '[object Boolean]'\nconst DATE_TAG = '[object Date]'\nconst FUNC_TAG = '[object Function]'\nconst NUMBER_TAG = '[object Number]'\nconst OBJECT_TAG = '[object Object]'\nconst REGEXP_TAG = '[object RegExp]'\nconst STRING_TAG = '[object String]'\nconst objToString = Object.prototype.toString\nconst PATH = /^(.+)\\.(.+)$/\n\nconst ERRORS = {\n  '400' () {\n    return `expected: ${arguments[0]}, found: ${\n      arguments[2] ? arguments[1] : typeof arguments[1]\n    }`\n  },\n  '404' () {\n    return `${arguments[0]} not found`\n  }\n}\n\nconst toInteger = function (value) {\n  if (!value) {\n    return 0\n  }\n  // Coerce to number\n  value = +value\n  if (value === INFINITY || value === -INFINITY) {\n    const sign = value < 0 ? -1 : 1\n    return sign * MAX_INTEGER\n  }\n  const remainder = value % 1\n  return value === value ? (remainder ? value - remainder : value) : 0 // eslint-disable-line\n}\n\nconst toStr = function (value) {\n  return objToString.call(value)\n}\n\nconst isPlainObject = function (value) {\n  return !!value && typeof value === 'object' && value.constructor === Object\n}\n\nconst mkdirP = function (object, path) {\n  if (!path) {\n    return object\n  }\n  const parts = path.split('.')\n  parts.forEach(function (key) {\n    if (isPrototypePolluted(key)) return\n    if (!object[key]) {\n      object[key] = {}\n    }\n    object = object[key]\n  })\n  return object\n}\n\nconst isPrototypePolluted = function (key) {\n  return ['__proto__', 'prototype', 'constructor'].includes(key)\n}\n\nconst utils = {\n  /**\n   * Reference to the Promise constructor used by JSData. Defaults to\n   * `window.Promise` or `global.Promise`.\n   *\n   * @example <caption>Make JSData use a different `Promise` constructor</caption>\n   * import Promise from 'bluebird';\n   * import { utils } from 'js-data';\n   * utils.Promise = Promise;\n   *\n   * @name utils.Promise\n   * @since 3.0.0\n   * @type {Function}\n   */\n  Promise: Promise,\n\n  /**\n   * Shallow copy properties that meet the following criteria from `src` to\n   * `dest`:\n   *\n   * - own enumerable\n   * - not a function\n   * - does not start with \"_\"\n   *\n   * @method utils._\n   * @param {object} dest Destination object.\n   * @param {object} src Source object.\n   * @private\n   * @since 3.0.0\n   */\n  _ (dest, src) {\n    utils.forOwn(src, function (value, key) {\n      if (\n        key &&\n        dest[key] === undefined &&\n        !utils.isFunction(value) &&\n        key.indexOf('_') !== 0\n      ) {\n        dest[key] = value\n      }\n    })\n  },\n\n  /**\n   * Recursively iterates over relations found in `opts.with`.\n   *\n   * @method utils._forRelation\n   * @param {object} opts Configuration options.\n   * @param {Relation} def Relation definition.\n   * @param {Function} fn Callback function.\n   * @param {*} [thisArg] Execution context for the callback function.\n   * @private\n   * @since 3.0.0\n   */\n  _forRelation (opts, def, fn, thisArg) {\n    const relationName = def.relation\n    let containedName = null\n    let index\n    opts || (opts = {})\n    opts.with || (opts.with = [])\n\n    if ((index = utils._getIndex(opts.with, relationName)) >= 0) {\n      containedName = relationName\n    } else if ((index = utils._getIndex(opts.with, def.localField)) >= 0) {\n      containedName = def.localField\n    }\n\n    if (opts.withAll) {\n      fn.call(thisArg, def, {})\n      return\n    } else if (!containedName) {\n      return\n    }\n    const optsCopy = {}\n    utils.fillIn(optsCopy, def.getRelation())\n    utils.fillIn(optsCopy, opts)\n    optsCopy.with = opts.with.slice()\n    optsCopy._activeWith = optsCopy.with.splice(index, 1)[0]\n    optsCopy.with.forEach(function (relation, i) {\n      if (\n        relation &&\n        relation.indexOf(containedName) === 0 &&\n        relation.length >= containedName.length &&\n        relation[containedName.length] === '.'\n      ) {\n        optsCopy.with[i] = relation.substr(containedName.length + 1)\n      } else {\n        optsCopy.with[i] = ''\n      }\n    })\n    fn.call(thisArg, def, optsCopy)\n  },\n\n  /**\n   * Find the index of a relation in the given list\n   *\n   * @method utils._getIndex\n   * @param {string[]} list List to search.\n   * @param {string} relation Relation to find.\n   * @private\n   * @returns {number}\n   */\n  _getIndex (list, relation) {\n    let index = -1\n    list.forEach(function (_relation, i) {\n      if (_relation === relation) {\n        index = i\n        return false\n      } else if (utils.isObject(_relation)) {\n        if (_relation.relation === relation) {\n          index = i\n          return false\n        }\n      }\n    })\n    return index\n  },\n\n  /**\n   * Define hidden (non-enumerable), writable properties on `target` from the\n   * provided `props`.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * function Cat () {}\n   * utils.addHiddenPropsToTarget(Cat.prototype, {\n   *   say () {\n   *     console.log('meow');\n   *   }\n   * });\n   * const cat = new Cat();\n   * cat.say(); // \"meow\"\n   *\n   * @method utils.addHiddenPropsToTarget\n   * @param {object} target That to which `props` should be added.\n   * @param {object} props Properties to be added to `target`.\n   * @since 3.0.0\n   */\n  addHiddenPropsToTarget (target, props) {\n    const map = {}\n    Object.keys(props).forEach(function (propName) {\n      const descriptor = Object.getOwnPropertyDescriptor(props, propName)\n\n      descriptor.enumerable = false\n      map[propName] = descriptor\n    })\n    Object.defineProperties(target, map)\n  },\n\n  /**\n   * Return whether the two objects are deeply different.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * utils.areDifferent({}, {}); // false\n   * utils.areDifferent({ a: 1 }, { a: 1 }); // false\n   * utils.areDifferent({ foo: 'bar' }, {}); // true\n   *\n   * @method utils.areDifferent\n   * @param {object} a Base object.\n   * @param {object} b Comparison object.\n   * @param {object} [opts] Configuration options.\n   * @param {Function} [opts.equalsFn={@link utils.deepEqual}] Equality function.\n   * @param {array} [opts.ignore=[]] Array of strings or RegExp of fields to ignore.\n   * @returns {boolean} Whether the two objects are deeply different.\n   * @see utils.diffObjects\n   * @since 3.0.0\n   */\n  areDifferent (newObject, oldObject, opts) {\n    opts || (opts = {})\n    const diff = utils.diffObjects(newObject, oldObject, opts)\n    const diffCount =\n      Object.keys(diff.added).length +\n      Object.keys(diff.removed).length +\n      Object.keys(diff.changed).length\n    return diffCount > 0\n  },\n\n  /**\n   * Verified that the given constructor is being invoked via `new`, as opposed\n   * to just being called like a normal function.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * function Cat () {\n   *   utils.classCallCheck(this, Cat);\n   * }\n   * const cat = new Cat(); // this is ok\n   * Cat(); // this throws an error\n   *\n   * @method utils.classCallCheck\n   * @param {*} instance Instance that is being constructed.\n   * @param {Constructor} ctor Constructor function used to construct the\n   * instance.\n   * @since 3.0.0\n   * @throws {Error} Throws an error if the constructor is being improperly\n   * invoked.\n   */\n  classCallCheck (instance, ctor) {\n    if (!(instance instanceof ctor)) {\n      throw utils.err(`${ctor.name}`)(500, 'Cannot call a class as a function')\n    }\n  },\n\n  /**\n   * Deep copy a value.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = { foo: { bar: 'baz' } };\n   * const b = utils.copy(a);\n   * a === b; // false\n   * utils.areDifferent(a, b); // false\n   *\n   * @param {*} from Value to deep copy.\n   * @param {*} [to] Destination object for the copy operation.\n   * @param {*} [stackFrom] For internal use.\n   * @param {*} [stackTo] For internal use.\n   * @param {string[]|RegExp[]} [blacklist] List of strings or RegExp of\n   * properties to skip.\n   * @param {boolean} [plain] Whether to make a plain copy (don't try to use\n   * original prototype).\n   * @returns {*} Deep copy of `from`.\n   * @since 3.0.0\n   */\n  copy (from, to, stackFrom, stackTo, blacklist, plain) {\n    if (!to) {\n      to = from\n      if (from) {\n        if (utils.isArray(from)) {\n          to = utils.copy(from, [], stackFrom, stackTo, blacklist, plain)\n        } else if (utils.isDate(from)) {\n          to = new Date(from.getTime())\n        } else if (utils.isRegExp(from)) {\n          to = new RegExp(from.source, from.toString().match(/[^/]*$/)[0])\n          to.lastIndex = from.lastIndex\n        } else if (utils.isObject(from)) {\n          if (plain) {\n            to = utils.copy(from, {}, stackFrom, stackTo, blacklist, plain)\n          } else {\n            to = utils.copy(\n              from,\n              Object.create(Object.getPrototypeOf(from)),\n              stackFrom,\n              stackTo,\n              blacklist,\n              plain\n            )\n          }\n        }\n      }\n    } else {\n      if (from === to) {\n        throw utils.err(`${DOMAIN}.copy`)(\n          500,\n          'Cannot copy! Source and destination are identical.'\n        )\n      }\n\n      stackFrom = stackFrom || []\n      stackTo = stackTo || []\n\n      if (utils.isObject(from)) {\n        const index = stackFrom.indexOf(from)\n        if (index !== -1) {\n          return stackTo[index]\n        }\n\n        stackFrom.push(from)\n        stackTo.push(to)\n      }\n\n      let result\n      if (utils.isArray(from)) {\n        let i\n        to.length = 0\n        for (i = 0; i < from.length; i++) {\n          result = utils.copy(\n            from[i],\n            null,\n            stackFrom,\n            stackTo,\n            blacklist,\n            plain\n          )\n          if (utils.isObject(from[i])) {\n            stackFrom.push(from[i])\n            stackTo.push(result)\n          }\n          to.push(result)\n        }\n      } else {\n        if (utils.isArray(to)) {\n          to.length = 0\n        } else {\n          utils.forOwn(to, function (value, key) {\n            delete to[key]\n          })\n        }\n        for (var key in from) {\n          if (Object.hasOwnProperty.call(from, key)) {\n            if (utils.isBlacklisted(key, blacklist)) {\n              continue\n            }\n            result = utils.copy(\n              from[key],\n              null,\n              stackFrom,\n              stackTo,\n              blacklist,\n              plain\n            )\n            if (utils.isObject(from[key])) {\n              stackFrom.push(from[key])\n              stackTo.push(result)\n            }\n            to[key] = result\n          }\n        }\n      }\n    }\n    return to\n  },\n\n  /**\n   * Recursively shallow fill in own enumerable properties from `source` to\n   * `dest`.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = { foo: { bar: 'baz' }, beep: 'boop' };\n   * const b = { beep: 'bip' };\n   * utils.deepFillIn(b, a);\n   * console.log(b); // {\"foo\":{\"bar\":\"baz\"},\"beep\":\"bip\"}\n   *\n   * @method utils.deepFillIn\n   * @param {object} dest The destination object.\n   * @param {object} source The source object.\n   * @see utils.fillIn\n   * @see utils.deepMixIn\n   * @since 3.0.0\n   */\n  deepFillIn (dest, source) {\n    if (source) {\n      utils.forOwn(source, function (value, key) {\n        if (isPrototypePolluted(key)) return\n        const existing = dest[key]\n        if (isPlainObject(value) && isPlainObject(existing)) {\n          utils.deepFillIn(existing, value)\n        } else if (!Object.hasOwnProperty.call(dest, key) || dest[key] === undefined) {\n          dest[key] = value\n        }\n      })\n    }\n    return dest\n  },\n\n  /**\n   * Recursively shallow copy enumerable properties from `source` to `dest`.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = { foo: { bar: 'baz' }, beep: 'boop' };\n   * const b = { beep: 'bip' };\n   * utils.deepFillIn(b, a);\n   * console.log(b); // {\"foo\":{\"bar\":\"baz\"},\"beep\":\"boop\"}\n   *\n   * @method utils.deepMixIn\n   * @param {object} dest The destination object.\n   * @param {object} source The source object.\n   * @see utils.fillIn\n   * @see utils.deepFillIn\n   * @since 3.0.0\n   */\n  deepMixIn (dest, source) {\n    if (source) {\n      for (var key in source) {\n        if (isPrototypePolluted(key)) continue\n        const value = source[key]\n        const existing = dest[key]\n        if (isPlainObject(value) && isPlainObject(existing)) {\n          utils.deepMixIn(existing, value)\n        } else {\n          dest[key] = value\n        }\n      }\n    }\n    return dest\n  },\n\n  /**\n   * Return a diff of the base object to the comparison object.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const oldObject = { foo: 'bar', a: 1234 };\n   * const newObject = { beep: 'boop', a: 5678 };\n   * const diff = utils.diffObjects(oldObject, newObject);\n   * console.log(diff.added); // {\"beep\":\"boop\"}\n   * console.log(diff.changed); // {\"a\":5678}\n   * console.log(diff.removed); // {\"foo\":undefined}\n   *\n   * @method utils.diffObjects\n   * @param {object} newObject Comparison object.\n   * @param {object} oldObject Base object.\n   * @param {object} [opts] Configuration options.\n   * @param {Function} [opts.equalsFn={@link utils.deepEqual}] Equality function.\n   * @param {array} [opts.ignore=[]] Array of strings or RegExp of fields to ignore.\n   * @returns {Object} The diff from the base object to the comparison object.\n   * @see utils.areDifferent\n   * @since 3.0.0\n   */\n  diffObjects (newObject, oldObject, opts) {\n    opts || (opts = {})\n    let equalsFn = opts.equalsFn\n    const blacklist = opts.ignore\n    const diff = {\n      added: {},\n      changed: {},\n      removed: {}\n    }\n    if (!utils.isFunction(equalsFn)) {\n      equalsFn = utils.deepEqual\n    }\n\n    const newKeys = Object.keys(newObject).filter(function (key) {\n      return !utils.isBlacklisted(key, blacklist)\n    })\n    const oldKeys = Object.keys(oldObject).filter(function (key) {\n      return !utils.isBlacklisted(key, blacklist)\n    })\n\n    // Check for properties that were added or changed\n    newKeys.forEach(function (key) {\n      const oldValue = oldObject[key]\n      const newValue = newObject[key]\n      if (equalsFn(oldValue, newValue)) {\n        return\n      }\n      if (oldValue === undefined) {\n        diff.added[key] = newValue\n      } else {\n        diff.changed[key] = newValue\n      }\n    })\n\n    // Check for properties that were removed\n    oldKeys.forEach(function (key) {\n      const oldValue = oldObject[key]\n      const newValue = newObject[key]\n      if (newValue === undefined && oldValue !== undefined) {\n        diff.removed[key] = undefined\n      }\n    })\n\n    return diff\n  },\n\n  /**\n   * Return whether the two values are equal according to the `==` operator.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * console.log(utils.equal(1,1)); // true\n   * console.log(utils.equal(1,'1')); // true\n   * console.log(utils.equal(93, 66)); // false\n   *\n   * @method utils.equal\n   * @param {*} a First value in the comparison.\n   * @param {*} b Second value in the comparison.\n   * @returns {boolean} Whether the two values are equal according to `==`.\n   * @since 3.0.0\n   */\n  equal (a, b) {\n    return a == b // eslint-disable-line\n  },\n\n  /**\n   * Produce a factory function for making Error objects with the provided\n   * metadata. Used throughout the various js-data components.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const errorFactory = utils.err('domain', 'target');\n   * const error400 = errorFactory(400, 'expected type', 'actual type');\n   * console.log(error400); // [Error: [domain:target] expected: expected type, found: string\nhttp://www.js-data.io/v3.0/docs/errors#400]\n   * @method utils.err\n   * @param {string} domain Namespace.\n   * @param {string} target Target.\n   * @returns {Function} Factory function.\n   * @since 3.0.0\n   */\n  err (domain, target) {\n    return function (code) {\n      const prefix = `[${domain}:${target}] `\n      let message = ERRORS[code].apply(\n        null,\n        Array.prototype.slice.call(arguments, 1)\n      )\n      message = `${prefix}${message}\nhttp://www.js-data.io/v3.0/docs/errors#${code}`\n      return new Error(message)\n    }\n  },\n\n  /**\n   * Add eventing capabilities into the target object.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const user = { name: 'John' };\n   * utils.eventify(user);\n   * user.on('foo', () => console.log(arguments));\n   * user.emit('foo', 1, 'bar'); // should log to console values (1, \"bar\")\n   *\n   * @method utils.eventify\n   * @param {object} target Target object.\n   * @param {Function} [getter] Custom getter for retrieving the object's event\n   * listeners.\n   * @param {Function} [setter] Custom setter for setting the object's event\n   * listeners.\n   * @since 3.0.0\n   */\n  eventify (target, getter, setter) {\n    target = target || this\n    let _events = {}\n    if (!getter && !setter) {\n      getter = function () {\n        return _events\n      }\n      setter = function (value) {\n        _events = value\n      }\n    }\n    Object.defineProperties(target, {\n      emit: {\n        value (...args) {\n          const events = getter.call(this) || {}\n          const type = args.shift()\n          let listeners = events[type] || []\n          let i\n          for (i = 0; i < listeners.length; i++) {\n            listeners[i].f.apply(listeners[i].c, args)\n          }\n          listeners = events.all || []\n          args.unshift(type)\n          for (i = 0; i < listeners.length; i++) {\n            listeners[i].f.apply(listeners[i].c, args)\n          }\n        }\n      },\n      off: {\n        value (type, func) {\n          const events = getter.call(this)\n          const listeners = events[type]\n          if (!listeners) {\n            setter.call(this, {})\n          } else if (func) {\n            for (let i = 0; i < listeners.length; i++) {\n              if (listeners[i].f === func) {\n                listeners.splice(i, 1)\n                break\n              }\n            }\n          } else {\n            listeners.splice(0, listeners.length)\n          }\n        }\n      },\n      on: {\n        value (type, func, thisArg) {\n          if (!getter.call(this)) {\n            setter.call(this, {})\n          }\n          const events = getter.call(this)\n          events[type] = events[type] || []\n          events[type].push({\n            c: thisArg,\n            f: func\n          })\n        }\n      }\n    })\n  },\n\n  /**\n   * Used for sublcassing. Invoke this method in the context of a superclass to\n   * to produce a subclass based on `props` and `classProps`.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * function Animal () {}\n   * Animal.extend = utils.extend;\n   * const Cat = Animal.extend({\n   *   say () {\n   *     console.log('meow');\n   *   }\n   * });\n   * const cat = new Cat();\n   * cat instanceof Animal; // true\n   * cat instanceof Cat; // true\n   * cat.say(); // \"meow\"\n   *\n   * @method utils.extend\n   * @param {object} props Instance properties for the subclass.\n   * @param {object} [props.constructor] Provide a custom constructor function\n   * to use as the subclass.\n   * @param {object} props Static properties for the subclass.\n   * @returns {Constructor} A new subclass.\n   * @since 3.0.0\n   */\n  extend (props, classProps) {\n    const superClass = this\n    let subClass\n\n    props || (props = {})\n    classProps || (classProps = {})\n\n    if (Object.hasOwnProperty.call(props, 'constructor')) {\n      subClass = props.constructor\n      delete props.constructor\n    } else {\n      subClass = function (...args) {\n        utils.classCallCheck(this, subClass)\n        superClass.apply(this, args)\n      }\n    }\n\n    // Setup inheritance of instance members\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        configurable: true,\n        enumerable: false,\n        value: subClass,\n        writable: true\n      }\n    })\n\n    const obj = Object\n    // Setup inheritance of static members\n    if (obj.setPrototypeOf) {\n      obj.setPrototypeOf(subClass, superClass)\n    } else if (classProps.strictEs6Class) {\n      subClass.__proto__ = superClass // eslint-disable-line\n    } else {\n      utils.forOwn(superClass, function (value, key) {\n        subClass[key] = value\n      })\n    }\n    if (!Object.hasOwnProperty.call(subClass, '__super__')) {\n      Object.defineProperty(subClass, '__super__', {\n        configurable: true,\n        value: superClass\n      })\n    }\n\n    utils.addHiddenPropsToTarget(subClass.prototype, props)\n    utils.fillIn(subClass, classProps)\n\n    return subClass\n  },\n\n  /**\n   * Shallow copy own enumerable properties from `src` to `dest` that are on\n   * `src` but are missing from `dest.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = { foo: 'bar', beep: 'boop' };\n   * const b = { beep: 'bip' };\n   * utils.fillIn(b, a);\n   * console.log(b); // {\"foo\":\"bar\",\"beep\":\"bip\"}\n   *\n   * @method utils.fillIn\n   * @param {object} dest The destination object.\n   * @param {object} source The source object.\n   * @see utils.deepFillIn\n   * @see utils.deepMixIn\n   * @since 3.0.0\n   */\n  fillIn (dest, src) {\n    utils.forOwn(src, function (value, key) {\n      if (!Object.hasOwnProperty.call(dest, key) || dest[key] === undefined) {\n        dest[key] = value\n      }\n    })\n  },\n\n  /**\n   * Find the last index of an item in an array according to the given checker function.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   *\n   * const john = { name: 'John', age: 20 };\n   * const sara = { name: 'Sara', age: 25 };\n   * const dan = { name: 'Dan', age: 20 };\n   * const users = [john, sara, dan];\n   *\n   * console.log(utils.findIndex(users, (user) => user.age === 25)); // 1\n   * console.log(utils.findIndex(users, (user) => user.age > 19)); // 2\n   * console.log(utils.findIndex(users, (user) => user.name === 'John')); // 0\n   * console.log(utils.findIndex(users, (user) => user.name === 'Jimmy')); // -1\n   *\n   * @method utils.findIndex\n   * @param {array} array The array to search.\n   * @param {Function} fn Checker function.\n   * @returns {number} Index if found or -1 if not found.\n   * @since 3.0.0\n   */\n  findIndex (array, fn) {\n    let index = -1\n    if (!array) {\n      return index\n    }\n    array.forEach(function (record, i) {\n      if (fn(record)) {\n        index = i\n        return false\n      }\n    })\n    return index\n  },\n\n  /**\n   * Recursively iterate over a {@link Mapper}'s relations according to\n   * `opts.with`.\n   *\n   * @method utils.forEachRelation\n   * @param {Mapper} mapper Mapper.\n   * @param {object} opts Configuration options.\n   * @param {Function} fn Callback function.\n   * @param {*} thisArg Execution context for the callback function.\n   * @since 3.0.0\n   */\n  forEachRelation (mapper, opts, fn, thisArg) {\n    const relationList = mapper.relationList || []\n    if (!relationList.length) {\n      return\n    }\n    relationList.forEach(function (def) {\n      utils._forRelation(opts, def, fn, thisArg)\n    })\n  },\n\n  /**\n   * Iterate over an object's own enumerable properties.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = { b: 1, c: 4 };\n   * let sum = 0;\n   * utils.forOwn(a, function (value, key) {\n   *   sum += value;\n   * });\n   * console.log(sum); // 5\n   *\n   * @method utils.forOwn\n   * @param {object} object The object whose properties are to be enumerated.\n   * @param {Function} fn Iteration function.\n   * @param {object} [thisArg] Content to which to bind `fn`.\n   * @since 3.0.0\n   */\n  forOwn (obj, fn, thisArg) {\n    const keys = Object.keys(obj)\n    const len = keys.length\n    let i\n    for (i = 0; i < len; i++) {\n      if (fn.call(thisArg, obj[keys[i]], keys[i], obj) === false) {\n        break\n      }\n    }\n  },\n\n  /**\n   * Proxy for `JSON.parse`.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   *\n   * const a = utils.fromJson('{\"name\" : \"John\"}');\n   * console.log(a); // { name: 'John' }\n   *\n   * @method utils.fromJson\n   * @param {string} json JSON to parse.\n   * @returns {Object} Parsed object.\n   * @see utils.toJson\n   * @since 3.0.0\n   */\n  fromJson (json) {\n    return utils.isString(json) ? JSON.parse(json) : json\n  },\n\n  /**\n   * Retrieve the specified property from the given object. Supports retrieving\n   * nested properties.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = { foo: { bar: 'baz' }, beep: 'boop' };\n   * console.log(utils.get(a, 'beep')); // \"boop\"\n   * console.log(utils.get(a, 'foo.bar')); // \"baz\"\n   *\n   * @method utils.get\n   * @param {object} object Object from which to retrieve a property's value.\n   * @param {string} prop Property to retrieve.\n   * @returns {*} Value of the specified property.\n   * @see utils.set\n   * @since 3.0.0\n   */\n  get: function (object, prop) {\n    if (!prop) {\n      return\n    }\n    const parts = prop.split('.')\n    const last = parts.pop()\n\n    while ((prop = parts.shift())) {\n      // eslint-disable-line\n      object = object[prop]\n      if (object == null) {\n        // eslint-disable-line\n        return\n      }\n    }\n\n    return object[last]\n  },\n\n  /**\n   * Return the superclass for the given instance or subclass. If an instance is\n   * provided, then finds the parent class of the instance's constructor.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * // using ES2015 classes\n   * class Foo {}\n   * class Bar extends Foo {}\n   * const barInstance = new Bar();\n   * let baseType = utils.getSuper(barInstance);\n   * console.log(Foo === baseType); // true\n   *\n   * // using Function constructor with utils.extend\n   * function Foo () {}\n   * Foo.extend = utils.extend;\n   * const Bar = Foo.extend();\n   * const barInstance = new Bar();\n   * let baseType = utils.getSuper(barInstance);\n   * console.log(Foo === baseType); // true\n   *\n   * @method utils.getSuper\n   * @param {Object|Function} instance Instance or constructor.\n   * @param {boolean} [isCtor=false] Whether `instance` is a constructor.\n   * @returns {Constructor} The superclass (grandparent constructor).\n   * @since 3.0.0\n   */\n  getSuper (instance, isCtor) {\n    const ctor = isCtor ? instance : instance.constructor\n    if (Object.hasOwnProperty.call(ctor, '__super__')) {\n      return ctor.__super__\n    }\n    return Object.getPrototypeOf(ctor) || ctor.__proto__ // eslint-disable-line\n  },\n\n  /**\n   * Return the intersection of two arrays.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const arrA = ['green', 'red', 'blue', 'red'];\n   * const arrB = ['green', 'yellow', 'red'];\n   * const intersected = utils.intersection(arrA, arrB);\n   *\n   * console.log(intersected); // ['green', 'red'])\n   *\n   * @method utils.intersection\n   * @param {array} array1 First array.\n   * @param {array} array2 Second array.\n   * @returns {Array} Array of elements common to both arrays.\n   * @since 3.0.0\n   */\n  intersection (array1, array2) {\n    if (!array1 || !array2) {\n      return []\n    }\n    array1 = Array.isArray(array1) ? array1 : [array1]\n    array2 = Array.isArray(array2) ? array2 : [array2]\n    const result = []\n    let item\n    let i\n    const len = array1.length\n    for (i = 0; i < len; i++) {\n      item = array1[i]\n      if (result.indexOf(item) !== -1) {\n        continue\n      }\n      if (array2.indexOf(item) !== -1) {\n        result.push(item)\n      }\n    }\n    return result\n  },\n\n  /**\n   * Proxy for `Array.isArray`.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = [1,2,3,4,5];\n   * const b = { foo: \"bar\" };\n   * console.log(utils.isArray(a)); // true\n   * console.log(utils.isArray(b)); // false\n   *\n   * @method utils.isArray\n   * @param {*} value The value to test.\n   * @returns {boolean} Whether the provided value is an array.\n   * @since 3.0.0\n   */\n  isArray: Array.isArray,\n\n  /**\n   * Return whether `prop` is matched by any string or regular expression in\n   * `blacklist`.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const blacklist = [/^\\$hashKey/g, /^_/g, 'id'];\n   * console.log(utils.isBlacklisted(\"$hashKey\", blacklist)); // true\n   * console.log(utils.isBlacklisted(\"id\", blacklist)); // true\n   * console.log(utils.isBlacklisted(\"_myProp\", blacklist)); // true\n   * console.log(utils.isBlacklisted(\"my_id\", blacklist)); // false\n   *\n   * @method utils.isBlacklisted\n   * @param {string} prop The name of a property to check.\n   * @param {array} blacklist Array of strings and regular expressions.\n   * @returns {boolean} Whether `prop` was matched.\n   * @since 3.0.0\n   */\n  isBlacklisted (prop, blacklist) {\n    if (!blacklist || !blacklist.length) {\n      return false\n    }\n    let matches\n    for (var i = 0; i < blacklist.length; i++) {\n      if (\n        (toStr(blacklist[i]) === REGEXP_TAG && blacklist[i].test(prop)) ||\n        blacklist[i] === prop\n      ) {\n        matches = prop\n        return !!matches\n      }\n    }\n    return !!matches\n  },\n\n  /**\n   * Return whether the provided value is a boolean.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = true;\n   * const b = { foo: \"bar\" };\n   * console.log(utils.isBoolean(a)); // true\n   * console.log(utils.isBoolean(b)); // false\n   *\n   * @method utils.isBoolean\n   * @param {*} value The value to test.\n   * @returns {boolean} Whether the provided value is a boolean.\n   * @since 3.0.0\n   */\n  isBoolean (value) {\n    return toStr(value) === BOOL_TAG\n  },\n\n  /**\n   * Return whether the provided value is a date.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = new Date();\n   * const b = { foo: \"bar\" };\n   * console.log(utils.isDate(a)); // true\n   * console.log(utils.isDate(b)); // false\n   *\n   * @method utils.isDate\n   * @param {*} value The value to test.\n   * @returns {Date} Whether the provided value is a date.\n   * @since 3.0.0\n   */\n  isDate (value) {\n    return value && typeof value === 'object' && toStr(value) === DATE_TAG\n  },\n\n  /**\n   * Return whether the provided value is a function.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = function () { console.log('foo bar'); };\n   * const b = { foo: \"bar\" };\n   * console.log(utils.isFunction(a)); // true\n   * console.log(utils.isFunction(b)); // false\n   *\n   * @method utils.isFunction\n   * @param {*} value The value to test.\n   * @returns {boolean} Whether the provided value is a function.\n   * @since 3.0.0\n   */\n  isFunction (value) {\n    return typeof value === 'function' || (value && toStr(value) === FUNC_TAG)\n  },\n\n  /**\n   * Return whether the provided value is an integer.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = 1;\n   * const b = 1.25;\n   * const c = '1';\n   * console.log(utils.isInteger(a)); // true\n   * console.log(utils.isInteger(b)); // false\n   * console.log(utils.isInteger(c)); // false\n   *\n   * @method utils.isInteger\n   * @param {*} value The value to test.\n   * @returns {boolean} Whether the provided value is an integer.\n   * @since 3.0.0\n   */\n  isInteger (value) {\n    return toStr(value) === NUMBER_TAG && value == toInteger(value) // eslint-disable-line\n  },\n\n  /**\n   * Return whether the provided value is `null`.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = null;\n   * const b = { foo: \"bar\" };\n   * console.log(utils.isNull(a)); // true\n   * console.log(utils.isNull(b)); // false\n   *\n   * @method utils.isNull\n   * @param {*} value The value to test.\n   * @returns {boolean} Whether the provided value is `null`.\n   * @since 3.0.0\n   */\n  isNull (value) {\n    return value === null\n  },\n\n  /**\n   * Return whether the provided value is a number.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = 1;\n   * const b = -1.25;\n   * const c = '1';\n   * console.log(utils.isNumber(a)); // true\n   * console.log(utils.isNumber(b)); // true\n   * console.log(utils.isNumber(c)); // false\n   *\n   * @method utils.isNumber\n   * @param {*} value The value to test.\n   * @returns {boolean} Whether the provided value is a number.\n   * @since 3.0.0\n   */\n  isNumber (value) {\n    const type = typeof value\n    return (\n      type === 'number' ||\n      (value && type === 'object' && toStr(value) === NUMBER_TAG)\n    )\n  },\n\n  /**\n   * Return whether the provided value is an object.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = { foo: \"bar\" };\n   * const b = 'foo bar';\n   * console.log(utils.isObject(a)); // true\n   * console.log(utils.isObject(b)); // false\n   *\n   * @method utils.isObject\n   * @param {*} value The value to test.\n   * @returns {boolean} Whether the provided value is an object.\n   * @since 3.0.0\n   */\n  isObject (value) {\n    return toStr(value) === OBJECT_TAG\n  },\n\n  /**\n   * Return whether the provided value is a regular expression.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = /^\\$.+$/ig;\n   * const b = new RegExp('^\\$.+$', 'ig');\n   * const c = { foo: \"bar\" };\n   * console.log(utils.isRegExp(a)); // true\n   * console.log(utils.isRegExp(b)); // true\n   * console.log(utils.isRegExp(c)); // false\n   *\n   * @method utils.isRegExp\n   * @param {*} value The value to test.\n   * @returns {boolean} Whether the provided value is a regular expression.\n   * @since 3.0.0\n   */\n  isRegExp (value) {\n    return toStr(value) === REGEXP_TAG\n  },\n\n  /**\n   * Return whether the provided value is a string or a number.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * console.log(utils.isSorN('')); // true\n   * console.log(utils.isSorN(-1.65)); // true\n   * console.log(utils.isSorN('my string')); // true\n   * console.log(utils.isSorN({})); // false\n   * console.log(utils.isSorN([1,2,4])); // false\n   *\n   * @method utils.isSorN\n   * @param {*} value The value to test.\n   * @returns {boolean} Whether the provided value is a string or a number.\n   * @since 3.0.0\n   */\n  isSorN (value) {\n    return utils.isString(value) || utils.isNumber(value)\n  },\n\n  /**\n   * Return whether the provided value is a string.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * console.log(utils.isString('')); // true\n   * console.log(utils.isString('my string')); // true\n   * console.log(utils.isString(100)); // false\n   * console.log(utils.isString([1,2,4])); // false\n   *\n   * @method utils.isString\n   * @param {*} value The value to test.\n   * @returns {boolean} Whether the provided value is a string.\n   * @since 3.0.0\n   */\n  isString (value) {\n    return (\n      typeof value === 'string' ||\n      (value && typeof value === 'object' && toStr(value) === STRING_TAG)\n    )\n  },\n\n  /**\n   * Return whether the provided value is a `undefined`.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = undefined;\n   * const b = { foo: \"bar\"};\n   * console.log(utils.isUndefined(a)); // true\n   * console.log(utils.isUndefined(b.baz)); // true\n   * console.log(utils.isUndefined(b)); // false\n   * console.log(utils.isUndefined(b.foo)); // false\n   *\n   * @method utils.isUndefined\n   * @param {*} value The value to test.\n   * @returns {boolean} Whether the provided value is a `undefined`.\n   * @since 3.0.0\n   */\n  isUndefined (value) {\n    return value === undefined\n  },\n\n  /**\n   * Mix in logging capabilities to the target.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = { foo: \"bar\"};\n   *\n   * // Add standard logging to an object\n   * utils.logify(a);\n   * a.log('info', 'test log info'); // output 'test log info' to console.\n   *\n   * // Toggle debug output of an object\n   * a.dbg('test debug output'); // does not output because debug is off.\n   * a.debug = true;\n   * a.dbg('test debug output'); // output 'test debug output' to console.\n   *\n   * @method utils.logify\n   * @param {*} target The target.\n   * @since 3.0.0\n   */\n  logify (target) {\n    utils.addHiddenPropsToTarget(target, {\n      dbg (...args) {\n        if (utils.isFunction(this.log)) {\n          this.log('debug', ...args)\n        }\n      },\n      log (level, ...args) {\n        if (level && !args.length) {\n          args.push(level)\n          level = 'debug'\n        }\n        if (level === 'debug' && !this.debug) {\n          return\n        }\n        const prefix = `${level.toUpperCase()}: (${this.name ||\n          this.constructor.name})`\n        if (utils.isFunction(console[level])) {\n          console[level](prefix, ...args)\n        } else {\n          console.log(prefix, ...args)\n        }\n      }\n    })\n  },\n\n  /**\n   * Adds the given record to the provided array only if it's not already in the\n   * array.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const colors = ['red', 'green', 'yellow'];\n   *\n   * console.log(colors.length); // 3\n   * utils.noDupeAdd(colors, 'red');\n   * console.log(colors.length); // 3, red already exists\n   *\n   * utils.noDupeAdd(colors, 'blue');\n   * console.log(colors.length); // 4, blue was added\n   *\n   * @method utils.noDupeAdd\n   * @param {array} array The array.\n   * @param {*} record The value to add.\n   * @param {Function} fn Callback function passed to {@link utils.findIndex}.\n   * @since 3.0.0\n   */\n  noDupeAdd (array, record, fn) {\n    if (!array) {\n      return\n    }\n    const index = this.findIndex(array, fn)\n    if (index < 0) {\n      array.push(record)\n    }\n  },\n\n  /**\n   * Return a shallow copy of the provided object, minus the properties\n   * specified in `keys`.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = { name: 'John', $hashKey: 1214910 };\n   *\n   * let b = utils.omit(a, ['$hashKey']);\n   * console.log(b); // { name: 'John' }\n   *\n   * @method utils.omit\n   * @param {object} props The object to copy.\n   * @param {string[]} keys Array of strings, representing properties to skip.\n   * @returns {Object} Shallow copy of `props`, minus `keys`.\n   * @since 3.0.0\n   */\n  omit (props, keys) {\n    const _props = {}\n    utils.forOwn(props, function (value, key) {\n      if (keys.indexOf(key) === -1) {\n        _props[key] = value\n      }\n    })\n    return _props\n  },\n\n  /**\n   * Return a shallow copy of the provided object, but only include the\n   * properties specified in `keys`.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = { name: 'John', $hashKey: 1214910 };\n   *\n   * let b = utils.pick(a, ['$hashKey']);\n   * console.log(b); // { $hashKey: 1214910 }\n   *\n   * @method utils.pick\n   * @param {object} props The object to copy.\n   * @param {string[]} keys Array of strings, representing properties to keep.\n   * @returns {Object} Shallow copy of `props`, but only including `keys`.\n   * @since 3.0.0\n   */\n  pick (props, keys) {\n    return keys.reduce((map, key) => {\n      map[key] = props[key]\n      return map\n    }, {})\n  },\n\n  /**\n   * Return a plain copy of the given value.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   * const a = { name: 'John' };\n   * let b = utils.plainCopy(a);\n   * console.log(a === b); // false\n   *\n   * @method utils.plainCopy\n   * @param {*} value The value to copy.\n   * @returns {*} Plain copy of `value`.\n   * @see utils.copy\n   * @since 3.0.0\n   */\n  plainCopy (value) {\n    return utils.copy(value, undefined, undefined, undefined, undefined, true)\n  },\n\n  /**\n   * Shortcut for `utils.Promise.reject(value)`.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   *\n   * utils.reject(\"Testing static reject\").then(function (data) {\n   *   // not called\n   * }).catch(function (reason) {\n   *   console.log(reason); // \"Testing static reject\"\n   * });\n   *\n   * @method utils.reject\n   * @param {*} [value] Value with which to reject the Promise.\n   * @returns {Promise} Promise reject with `value`.\n   * @see utils.Promise\n   * @since 3.0.0\n   */\n  reject (value) {\n    return utils.Promise.reject(value)\n  },\n\n  /**\n   * Remove the last item found in array according to the given checker function.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   *\n   * const colors = ['red', 'green', 'yellow', 'red'];\n   * utils.remove(colors, (color) => color === 'red');\n   * console.log(colors); // ['red', 'green', 'yellow']\n   *\n   * @method utils.remove\n   * @param {array} array The array to search.\n   * @param {Function} fn Checker function.\n   */\n  remove (array, fn) {\n    if (!array || !array.length) {\n      return\n    }\n    const index = this.findIndex(array, fn)\n    if (index >= 0) {\n      array.splice(index, 1) // todo should this be recursive?\n    }\n  },\n\n  /**\n   * Shortcut for `utils.Promise.resolve(value)`.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   *\n   * utils.resolve(\"Testing static resolve\").then(function (data) {\n   *   console.log(data); // \"Testing static resolve\"\n   * }).catch(function (reason) {\n   *   // not called\n   * });\n   *\n   * @param {*} [value] Value with which to resolve the Promise.\n   * @returns {Promise} Promise resolved with `value`.\n   * @see utils.Promise\n   * @since 3.0.0\n   */\n  resolve (value) {\n    return utils.Promise.resolve(value)\n  },\n\n  /**\n   * Set the value at the provided key or path.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   *\n   * const john = {\n   *   name: 'John',\n   *   age: 25,\n   *   parent: {\n   *     name: 'John's Mom',\n   *     age: 50\n   *   }\n   * };\n   * // set value by key\n   * utils.set(john, 'id', 98);\n   * console.log(john.id); // 98\n   *\n   * // set value by path\n   * utils.set(john, 'parent.id', 20);\n   * console.log(john.parent.id); // 20\n   *\n   * // set value by path/value map\n   * utils.set(john, {\n   *   'id': 1098,\n   *   'parent': { id: 1020 },\n   *   'parent.age': '55'\n   * });\n   * console.log(john.id); // 1098\n   * console.log(john.parent.id); // 1020\n   * console.log(john.parent.age); // 55\n   *\n   * @method utils.set\n   * @param {object} object The object on which to set a property.\n   * @param {(string|Object)} path The key or path to the property. Can also\n   * pass in an object of path/value pairs, which will all be set on the target\n   * object.\n   * @param {*} [value] The value to set.\n   */\n  set: function (object, path, value) {\n    if (utils.isObject(path)) {\n      utils.forOwn(path, function (value, _path) {\n        utils.set(object, _path, value)\n      })\n    } else {\n      const parts = PATH.exec(path)\n      if (parts) {\n        mkdirP(object, parts[1])[parts[2]] = value\n      } else {\n        object[path] = value\n      }\n    }\n  },\n\n  /**\n   * Check whether the two provided objects are deeply equal.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   *\n   * const objA = {\n   *   name: 'John',\n   *   id: 27,\n   *   nested: {\n   *     item: 'item 1',\n   *     colors: ['red', 'green', 'blue']\n   *   }\n   * };\n   *\n   * const objB = {\n   *   name: 'John',\n   *   id: 27,\n   *   nested: {\n   *     item: 'item 1',\n   *     colors: ['red', 'green', 'blue']\n   *   }\n   * };\n   *\n   * console.log(utils.deepEqual(a,b)); // true\n   * objB.nested.colors.add('yellow'); // make a change to a nested object's array\n   * console.log(utils.deepEqual(a,b)); // false\n   *\n   * @method utils.deepEqual\n   * @param {object} a First object in the comparison.\n   * @param {object} b Second object in the comparison.\n   * @returns {boolean} Whether the two provided objects are deeply equal.\n   * @see utils.equal\n   * @since 3.0.0\n   */\n  deepEqual (a, b) {\n    if (a === b) {\n      return true\n    }\n    let _equal = true\n    if (utils.isArray(a) && utils.isArray(b)) {\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = a.length; i--;) {\n        if (!utils.deepEqual(a[i], b[i])) {\n          // Exit loop early\n          return false\n        }\n      }\n    } else if (utils.isObject(a) && utils.isObject(b)) {\n      utils.forOwn(a, function (value, key) {\n        if (!(_equal = utils.deepEqual(value, b[key]))) {\n          // Exit loop early\n          return false\n        }\n      })\n      if (_equal) {\n        utils.forOwn(b, function (value, key) {\n          if (!(_equal = utils.deepEqual(value, a[key]))) {\n            // Exit loop early\n            return false\n          }\n        })\n      }\n    } else {\n      return false\n    }\n    return _equal\n  },\n\n  /**\n   * Proxy for `JSON.stringify`.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   *\n   * const a = { name: 'John' };\n   * let jsonVal = utils.toJson(a);\n   * console.log(jsonVal); // '{\"name\" : \"John\"}'\n   *\n   * @method utils.toJson\n   * @param {*} value Value to serialize to JSON.\n   * @returns {string} JSON string.\n   * @see utils.fromJson\n   * @since 3.0.0\n   */\n  toJson: JSON.stringify,\n\n  /**\n   * Unset the value at the provided key or path.\n   *\n   * @example\n   * import { utils } from 'js-data';\n   *\n   * const john = {\n   *   name: 'John',\n   *   age: 25,\n   *   parent: {\n   *     name: 'John's Mom',\n   *     age: 50\n   *   }\n   * };\n   *\n   * utils.unset(john, age);\n   * utils.unset(john, parent.age);\n   *\n   * console.log(john.age); // null\n   * console.log(john.parent.age); // null\n   *\n   * @method utils.unset\n   * @param {object} object The object from which to delete the property.\n   * @param {string} path The key or path to the property.\n   * @see utils.set\n   * @since 3.0.0\n   */\n  unset (object, path) {\n    const parts = path.split('.')\n    const last = parts.pop()\n\n    while ((path = parts.shift())) {\n      // eslint-disable-line\n      object = object[path]\n      if (object == null) {\n        // eslint-disable-line\n        return\n      }\n    }\n\n    object[last] = undefined\n  }\n}\n\nexport const safeSetProp = function (record, field, value) {\n  if (record && record._set) {\n    record._set(`props.${field}`, value)\n  } else {\n    utils.set(record, field, value)\n  }\n}\n\nexport const safeSetLink = function (record, field, value) {\n  if (record && record._set) {\n    record._set(`links.${field}`, value)\n  } else {\n    utils.set(record, field, value)\n  }\n}\n\nutils.safeSetProp = safeSetProp\nutils.safeSetLink = safeSetLink\n\nexport default utils\n","import utils from './utils'\n\n/**\n * A base class which gives instances private properties.\n *\n * Typically you won't instantiate this class directly, but you may find it\n * useful as an abstract class for your own components.\n *\n * See {@link Settable.extend} for an example of using {@link Settable} as a\n * base class.\n *\n *```javascript\n * import {Settable} from 'js-data'\n * ```\n *\n * @class Settable\n * @returns {Settable} A new {@link Settable} instance.\n * @since 3.0.0\n */\nexport default function Settable () {\n  const _props = {}\n  Object.defineProperties(this, {\n    /**\n     * Get a private property of this instance.\n     *\n     * __Don't use the method unless you know what you're doing.__\n     *\n     * @method Settable#_get\n     * @param {string} key The property to retrieve.\n     * @returns {*} The value of the property.\n     * @since 3.0.0\n     */\n    _get: { value (key) { return utils.get(_props, key) } },\n\n    /**\n     * Set a private property of this instance.\n     *\n     * __Don't use the method unless you know what you're doing.__\n     *\n     * @method __Don't use the method unless you know what you're doing.__#_set\n     * @param {(string|Object)} key The key or path to the property. Can also\n     * pass in an object of key/value pairs, which will all be set on the instance.\n     * @param {*} [value] The value to set.\n     * @since 3.0.0\n     */\n    _set: { value (key, value) { return utils.set(_props, key, value) } },\n\n    /**\n     * Unset a private property of this instance.\n     *\n     * __Don't use the method unless you know what you're doing.__\n     *\n     * @method __Don't use the method unless you know what you're doing.__#_unset\n     * @param {string} key The property to unset.\n     * @since 3.0.0\n     */\n    _unset: { value (key) { return utils.unset(_props, key) } }\n  })\n}\n\n/**\n * Create a subclass of this Settable:\n *\n * @example <caption>Settable.extend</caption>\n * const JSData = require('js-data');\n * const { Settable } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * // Extend the class using ES2015 class syntax.\n * class CustomSettableClass extends Settable {\n *   foo () { return 'bar'; }\n *   static beep () { return 'boop'; }\n * }\n * const customSettable = new CustomSettableClass();\n * console.log(customSettable.foo());\n * console.log(CustomSettableClass.beep());\n *\n * // Extend the class using alternate method.\n * const OtherSettableClass = Settable.extend({\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const otherSettable = new OtherSettableClass();\n * console.log(otherSettable.foo());\n * console.log(OtherSettableClass.beep());\n *\n * // Extend the class, providing a custom constructor.\n * function AnotherSettableClass () {\n *   Settable.call(this);\n *   this.created_at = new Date().getTime();\n * }\n * Settable.extend({\n *   constructor: AnotherSettableClass,\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * })\n * const anotherSettable = new AnotherSettableClass();\n * console.log(anotherSettable.created_at);\n * console.log(anotherSettable.foo());\n * console.log(AnotherSettableClass.beep());\n *\n * @method Settable.extend\n * @param {object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {object} [props.constructor] Provide a custom constructor function\n * to be used as the subclass itself.\n * @param {object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this Settable class.\n * @since 3.0.0\n */\nSettable.extend = utils.extend\n","import utils from './utils'\nimport Settable from './Settable'\n\n/**\n * The base class from which all JSData components inherit some basic\n * functionality.\n *\n * Typically you won't instantiate this class directly, but you may find it\n * useful as an abstract class for your own components.\n *\n * See {@link Component.extend} for an example of using {@link Component} as a\n * base class.\n *\n *```javascript\n * import {Component} from 'js-data'\n * ```\n *\n * @class Component\n * @param {object} [opts] Configuration options.\n * @param {boolean} [opts.debug=false] See {@link Component#debug}.\n * @returns {Component} A new {@link Component} instance.\n * @since 3.0.0\n */\nfunction Component (opts) {\n  Settable.call(this)\n  opts || (opts = {})\n\n  /**\n   * Whether to enable debug-level logs for this component. Anything that\n   * extends `Component` inherits this option and the corresponding logging\n   * functionality.\n   *\n   * @example <caption>Component#debug</caption>\n   * const JSData = require('js-data');\n   * const { Component } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const component = new Component();\n   * component.log('debug', 'some message'); // nothing gets logged\n   * // Display debug logs:\n   * component.debug = true;\n   * component.log('debug', 'other message'); // this DOES get logged\n   *\n   * @default false\n   * @name Component#debug\n   * @since 3.0.0\n   * @type {boolean}\n   */\n  this.debug = Object.hasOwnProperty.call(opts, 'debug') ? !!opts.debug : false\n\n  /**\n   * Event listeners attached to this Component. __Do not modify.__ Use\n   * {@link Component#on} and {@link Component#off} instead.\n   *\n   * @name Component#_listeners\n   * @private\n   * @instance\n   * @since 3.0.0\n   * @type {Object}\n   */\n  Object.defineProperty(this, '_listeners', { value: {}, writable: true })\n}\n\nexport default Settable.extend({\n  constructor: Component\n})\n\n/**\n * Create a subclass of this Component:\n *\n * @example <caption>Component.extend</caption>\n * const JSData = require('js-data');\n * const { Component } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * // Extend the class using ES2015 class syntax.\n * class CustomComponentClass extends Component {\n *   foo () { return 'bar'; }\n *   static beep () { return 'boop'; }\n * }\n * const customComponent = new CustomComponentClass();\n * console.log(customComponent.foo());\n * console.log(CustomComponentClass.beep());\n *\n * // Extend the class using alternate method.\n * const OtherComponentClass = Component.extend({\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const otherComponent = new OtherComponentClass();\n * console.log(otherComponent.foo());\n * console.log(OtherComponentClass.beep());\n *\n * // Extend the class, providing a custom constructor.\n * function AnotherComponentClass () {\n *   Component.call(this);\n *   this.created_at = new Date().getTime();\n * }\n * Component.extend({\n *   constructor: AnotherComponentClass,\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * })\n * const anotherComponent = new AnotherComponentClass();\n * console.log(anotherComponent.created_at);\n * console.log(anotherComponent.foo());\n * console.log(AnotherComponentClass.beep());\n *\n * @method Component.extend\n * @param {object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {object} [props.constructor] Provide a custom constructor function\n * to be used as the subclass itself.\n * @param {object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this Component class.\n * @since 3.0.0\n */\nComponent.extend = utils.extend\n\n/**\n * Log the provided values at the \"debug\" level. Debug-level logs are only\n * logged if {@link Component#debug} is `true`.\n *\n * `.dbg(...)` is shorthand for `.log('debug', ...)`.\n *\n * @method Component#dbg\n * @param {...*} [args] Values to log.\n * @since 3.0.0\n */\n/**\n * Log the provided values. By default sends values to `console[level]`.\n * Debug-level logs are only logged if {@link Component#debug} is `true`.\n *\n * Will attempt to use appropriate `console` methods if they are available.\n *\n * @method Component#log\n * @param {string} level Log level.\n * @param {...*} [args] Values to log.\n * @since 3.0.0\n */\nutils.logify(Component.prototype)\n\n/**\n * Register a new event listener on this Component.\n *\n * @example\n * // Listen for all \"afterCreate\" events in a DataStore\n * store.on('afterCreate', (mapperName, props, opts, result) => {\n *   console.log(mapperName); // \"post\"\n *   console.log(props.id); // undefined\n *   console.log(result.id); // 1234\n * });\n * store.create('post', { title: 'Modeling your data' }).then((post) => {\n *   console.log(post.id); // 1234\n * });\n *\n * @example\n * // Listen for the \"add\" event on a collection\n * collection.on('add', (records) => {\n *   console.log(records); // [...]\n * });\n *\n * @example\n * // Listen for \"change\" events on a record\n * post.on('change', (record, changes) => {\n *   console.log(changes); // { changed: { title: 'Modeling your data' } }\n * });\n * post.title = 'Modeling your data';\n *\n * @method Component#on\n * @param {string} event Name of event to subsribe to.\n * @param {Function} listener Listener function to handle the event.\n * @param {*} [ctx] Optional content in which to invoke the listener.\n * @since 3.0.0\n */\n/**\n * Remove an event listener from this Component. If no listener is provided,\n * then all listeners for the specified event will be removed. If no event is\n * specified then all listeners for all events will be removed.\n *\n * @example\n * // Remove a particular listener for a particular event\n * collection.off('add', handler);\n *\n * @example\n * // Remove all listeners for a particular event\n * record.off('change');\n *\n * @example\n * // Remove all listeners to all events\n * store.off();\n *\n * @method Component#off\n * @param {string} [event] Name of event to unsubsribe to.\n * @param {Function} [listener] Listener to remove.\n * @since 3.0.0\n */\n/**\n * Trigger an event on this Component.\n *\n * @example <caption>Component#emit</caption>\n * // import { Collection, DataStore } from 'js-data';\n * const JSData = require('js-data');\n * const { Collection, DataStore } = JSData;\n *\n * const collection = new Collection();\n * collection.on('foo', function (msg) {\n *   console.log(msg);\n * });\n * collection.emit('foo', 'bar');\n *\n * const store = new DataStore();\n * store.on('beep', function (msg) {\n *   console.log(msg);\n * });\n * store.emit('beep', 'boop');\n *\n * @method Component#emit\n * @param {string} event Name of event to emit.\n * @param {...*} [args] Arguments to pass to any listeners.\n * @since 3.0.0\n */\nutils.eventify(\n  Component.prototype,\n  function () {\n    return this._listeners\n  },\n  function (value) {\n    this._listeners = value\n  }\n)\n","import utils from './utils'\nimport Component from './Component'\n\nconst DOMAIN = 'Query'\nconst INDEX_ERR = 'Index inaccessible after first operation'\n\n// Reserved words used by JSData's Query Syntax\nconst reserved = {\n  limit: '',\n  offset: '',\n  orderBy: '',\n  skip: '',\n  sort: '',\n  where: ''\n}\n\n// Used by our JavaScript implementation of the LIKE operator\nconst escapeRegExp = /([.*+?^=!:${}()|[\\]/\\\\])/g\nconst percentRegExp = /%/g\nconst underscoreRegExp = /_/g\nconst escape = function (pattern) {\n  return pattern.replace(escapeRegExp, '\\\\$1')\n}\n\n/**\n * A class used by the {@link Collection} class to build queries to be executed\n * against the collection's data. An instance of `Query` is returned by\n * {@link Collection#query}. Query instances are typically short-lived, and you\n * shouldn't have to create them yourself. Just use {@link Collection#query}.\n *\n * ```javascript\n * import { Query } from 'js-data';\n * ```\n *\n * @example <caption>Query intro</caption>\n * const JSData = require('js-data');\n * const { DataStore } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * const store = new DataStore();\n * store.defineMapper('post');\n * const posts = [\n *   { author: 'John', age: 30, status: 'published', id: 1 },\n *   { author: 'Sally', age: 31, status: 'draft', id: 2 },\n *   { author: 'Mike', age: 32, status: 'draft', id: 3 },\n *   { author: 'Adam', age: 33, status: 'deleted', id: 4 },\n *   { author: 'Adam', age: 33, status: 'draft', id: 5 }\n * ]\n * store.add('post', posts);\n * const drafts = store.query('post').filter({ status: 'draft' }).limit(2).run();\n * console.log(drafts);\n *\n * @class Query\n * @extends Component\n * @param {Collection} collection The collection on which this query operates.\n * @since 3.0.0\n */\nfunction Query (collection) {\n  utils.classCallCheck(this, Query)\n\n  /**\n   * The {@link Collection} on which this query operates.\n   *\n   * @name Query#collection\n   * @since 3.0.0\n   * @type {Collection}\n   */\n  this.collection = collection\n\n  /**\n   * The current data result of this query.\n   *\n   * @name Query#data\n   * @since 3.0.0\n   * @type {Array}\n   */\n  this.data = null\n}\n\nexport default Component.extend({\n  constructor: Query,\n\n  _applyWhereFromObject (where) {\n    const fields = []\n    const ops = []\n    const predicates = []\n    utils.forOwn(where, (clause, field) => {\n      if (!utils.isObject(clause)) {\n        clause = {\n          '==': clause\n        }\n      }\n      utils.forOwn(clause, (expr, op) => {\n        fields.push(field)\n        ops.push(op)\n        predicates.push(expr)\n      })\n    })\n    return {\n      fields,\n      ops,\n      predicates\n    }\n  },\n\n  _applyWhereFromArray (where) {\n    const groups = []\n    where.forEach((_where, i) => {\n      if (utils.isString(_where)) {\n        return\n      }\n      const prev = where[i - 1]\n      const parser = utils.isArray(_where) ? this._applyWhereFromArray : this._applyWhereFromObject\n      const group = parser.call(this, _where)\n      if (prev === 'or') {\n        group.isOr = true\n      }\n      groups.push(group)\n    })\n    groups.isArray = true\n    return groups\n  },\n\n  _testObjectGroup (keep, first, group, item) {\n    let i\n    const fields = group.fields\n    const ops = group.ops\n    const predicates = group.predicates\n    const len = ops.length\n    for (i = 0; i < len; i++) {\n      let op = ops[i]\n      const isOr = op.charAt(0) === '|'\n      op = isOr ? op.substr(1) : op\n      const expr = this.evaluate(utils.get(item, fields[i]), op, predicates[i])\n      if (expr !== undefined) {\n        keep = first ? expr : (isOr ? keep || expr : keep && expr)\n      }\n      first = false\n    }\n    return { keep, first }\n  },\n\n  _testArrayGroup (keep, first, groups, item) {\n    let i\n    const len = groups.length\n    for (i = 0; i < len; i++) {\n      const group = groups[i]\n      const parser = group.isArray ? this._testArrayGroup : this._testObjectGroup\n      const result = parser.call(this, true, true, group, item)\n      if (groups[i - 1]) {\n        if (group.isOr) {\n          keep = keep || result.keep\n        } else {\n          keep = keep && result.keep\n        }\n      } else {\n        keep = result.keep\n      }\n      first = result.first\n    }\n    return { keep, first }\n  },\n\n  /**\n   * Find all entities between two boundaries.\n   *\n   * @example <caption>Get the users ages 18 to 30.</caption>\n   * const JSData = require('js-data');\n   * const { DataStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new DataStore();\n   * store.defineMapper('user');\n   * const users = [\n   *   { name: 'Peter', age: 25, id: 1 },\n   *   { name: 'Jim', age: 19, id: 2 },\n   *   { name: 'Mike', age: 17, id: 3 },\n   *   { name: 'Alan', age: 29, id: 4 },\n   *   { name: 'Katie', age: 33, id: 5 }\n   * ];\n   * store.add('user', users)\n   * const filteredUsers = store\n   *   .query('user')\n   *   .between(18, 30, { index: 'age' })\n   *   .run();\n   * console.log(filteredUsers);\n   *\n   * @example <caption>Same as above.</caption>\n   * const JSData = require('js-data');\n   * const { DataStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new DataStore();\n   * store.defineMapper('user');\n   * const users = [\n   *   { name: 'Peter', age: 25, id: 1 },\n   *   { name: 'Jim', age: 19, id: 2 },\n   *   { name: 'Mike', age: 17, id: 3 },\n   *   { name: 'Alan', age: 29, id: 4 },\n   *   { name: 'Katie', age: 33, id: 5 }\n   * ];\n   * store.add('user', users)\n   * const filteredUsers = store\n   *   .query('user')\n   *   .between([18], [30], { index: 'age' })\n   *   .run();\n   * console.log(filteredUsers);\n   *\n   * @method Query#between\n   * @param {array} leftKeys Keys defining the left boundary.\n   * @param {array} rightKeys Keys defining the right boundary.\n   * @param {object} [opts] Configuration options.\n   * @param {string} [opts.index] Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @param {boolean} [opts.leftInclusive=true] Whether to include entities\n   * on the left boundary.\n   * @param {boolean} [opts.rightInclusive=false] Whether to include entities\n   * on the left boundary.\n   * @param {boolean} [opts.limit] Limit the result to a certain number.\n   * @param {boolean} [opts.offset] The number of resulting entities to skip.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  between (leftKeys, rightKeys, opts) {\n    opts || (opts = {})\n    if (this.data) {\n      throw utils.err(`${DOMAIN}#between`)(500, 'Cannot access index')\n    }\n    this.data = this.collection.getIndex(opts.index).between(leftKeys, rightKeys, opts)\n    return this\n  },\n\n  /**\n   * The comparison function used by the {@link Query} class.\n   *\n   * @method Query#compare\n   * @param {array} orderBy An orderBy clause used for sorting and sub-sorting.\n   * @param {number} index The index of the current orderBy clause being used.\n   * @param {*} a The first item in the comparison.\n   * @param {*} b The second item in the comparison.\n   * @returns {number} -1 if `b` should preceed `a`. 0 if `a` and `b` are equal.\n   * 1 if `a` should preceed `b`.\n   * @since 3.0.0\n   */\n  compare (orderBy, index, a, b) {\n    const def = orderBy[index]\n    let cA = utils.get(a, def[0])\n    let cB = utils.get(b, def[0])\n    if (cA && utils.isString(cA)) {\n      cA = cA.toUpperCase()\n    }\n    if (cB && utils.isString(cB)) {\n      cB = cB.toUpperCase()\n    }\n    if (a === undefined) {\n      a = null\n    }\n    if (b === undefined) {\n      b = null\n    }\n    if (def[1].toUpperCase() === 'DESC') {\n      const temp = cB\n      cB = cA\n      cA = temp\n    }\n    if (cA < cB) {\n      return -1\n    } else if (cA > cB) {\n      return 1\n    } else {\n      if (index < orderBy.length - 1) {\n        return this.compare(orderBy, index + 1, a, b)\n      } else {\n        return 0\n      }\n    }\n  },\n\n  /**\n   * Predicate evaluation function used by the {@link Query} class.\n   *\n   * @method Query#evaluate\n   * @param {*} value The value to evaluate.\n   * @param {string} op The operator to use in this evaluation.\n   * @param {*} predicate The predicate to use in this evaluation.\n   * @returns {boolean} Whether the value passed the evaluation or not.\n   * @since 3.0.0\n   */\n  evaluate (value, op, predicate) {\n    const ops = this.constructor.ops\n    if (ops[op]) {\n      return ops[op](value, predicate)\n    }\n    if (op.indexOf('like') === 0) {\n      return this.like(predicate, op.substr(4)).exec(value) !== null\n    } else if (op.indexOf('notLike') === 0) {\n      return this.like(predicate, op.substr(7)).exec(value) === null\n    }\n  },\n\n  /**\n   * Find the record or records that match the provided query or are accepted by\n   * the provided filter function.\n   *\n   * @example <caption>Get the draft posts by authors younger than 30</caption>\n   * const JSData = require('js-data');\n   * const { DataStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new DataStore();\n   * store.defineMapper('post')\n   * const posts = [\n   *   { author: 'John', age: 30, status: 'published', id: 1 },\n   *   { author: 'Sally', age: 31, status: 'published', id: 2 },\n   *   { author: 'Mike', age: 32, status: 'draft', id: 3 },\n   *   { author: 'Adam', age: 33, status: 'deleted', id: 4 },\n   *   { author: 'Adam', age: 33, status: 'published', id: 5 }\n   *   { author: 'Peter', age: 25, status: 'deleted', id: 6 },\n   *   { author: 'Sally', age: 21, status: 'draft', id: 7 },\n   *   { author: 'Jim', age: 27, status: 'draft', id: 8 },\n   *   { author: 'Jim', age: 27, status: 'published', id: 9 },\n   *   { author: 'Jason', age: 55, status: 'published', id: 10 }\n   * ];\n   * store.add('post', posts);\n   * const results = store\n   *   .query('post')\n   *   .filter({\n   *     where: {\n   *       status: {\n   *         '==': 'draft'\n   *       },\n   *       age: {\n   *         '<': 30\n   *       }\n   *     }\n   *   })\n   *   .run();\n   * console.log(results);\n   *\n   * @example <caption>Use a custom filter function</caption>\n   * const posts = query\n   *   .filter(function (post) {\n   *     return post.isReady();\n   *   })\n   *   .run();\n   *\n   * @method Query#filter\n   * @param {(Object|Function)} [queryOrFn={}] Selection query or filter\n   * function.\n   * @param {Function} [thisArg] Context to which to bind `queryOrFn` if\n   * `queryOrFn` is a function.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  filter (query, thisArg) {\n    /**\n     * Selection query as defined by JSData's [Query Syntax][querysyntax].\n     *\n     * [querysyntax]: http://www.js-data.io/v3.0/docs/query-syntax\n     *\n     * @example <caption>Empty \"findAll\" query</caption>\n     * const JSData = require('js-data');\n     * const { DataStore } = JSData;\n     * console.log('Using JSData v' + JSData.version.full);\n     *\n     * const store = new DataStore();\n     * store.defineMapper('post')\n     * store.findAll('post').then((posts) => {\n     *   console.log(posts); // [...]\n     * });\n     *\n     * @example <caption>Empty \"filter\" query</caption>\n     * const JSData = require('js-data');\n     * const { DataStore } = JSData;\n     * console.log('Using JSData v' + JSData.version.full);\n     *\n     * const store = new DataStore();\n     * store.defineMapper('post');\n     * const posts = store.filter('post');\n     * console.log(posts); // [...]\n     *\n     * @example <caption>Complex \"filter\" query</caption>\n     * const JSData = require('js-data');\n     * const { DataStore } = JSData;\n     * console.log('Using JSData v' + JSData.version.full);\n     *\n     * const store = new DataStore();\n     * const PAGE_SIZE = 2;\n     * let currentPage = 3;\n     *\n     * store.defineMapper('post');\n     * const posts = [\n     *   { author: 'John', age: 30, status: 'published', id: 1 },\n     *   { author: 'Sally', age: 31, status: 'published', id: 2 },\n     *   { author: 'Mike', age: 32, status: 'draft', id: 3 },\n     *   { author: 'Adam', age: 33, status: 'deleted', id: 4 },\n     *   { author: 'Adam', age: 33, status: 'published', id: 5 }\n     *   { author: 'Peter', age: 25, status: 'deleted', id: 6 },\n     *   { author: 'Sally', age: 21, status: 'draft', id: 7 },\n     *   { author: 'Jim', age: 27, status: 'draft', id: 8 },\n     *   { author: 'Jim', age: 27, status: 'published', id: 9 },\n     *   { author: 'Jason', age: 55, status: 'published', id: 10 }\n     * ];\n     * store.add('post', posts);\n     * // Retrieve a filtered page of blog posts\n     * // Would typically replace filter with findAll\n     * const results = store.filter('post', {\n     *   where: {\n     *     status: {\n     *       // WHERE status = 'published'\n     *       '==': 'published'\n     *     },\n     *     author: {\n     *       // AND author IN ('bob', 'alice')\n     *       'in': ['bob', 'alice'],\n     *       // OR author IN ('karen')\n     *       '|in': ['karen']\n     *     }\n     *   },\n     *   orderBy: [\n     *     // ORDER BY date_published DESC,\n     *     ['date_published', 'DESC'],\n     *     // ORDER BY title ASC\n     *     ['title', 'ASC']\n     *   ],\n     *   // LIMIT 2\n     *   limit: PAGE_SIZE,\n     *   // SKIP 4\n     *   offset: PAGE_SIZE * (currentPage - 1)\n     * });\n     * console.log(results);\n     *\n     * @namespace query\n     * @property {number} [limit] See {@link query.limit}.\n     * @property {number} [offset] See {@link query.offset}.\n     * @property {string|Array[]} [orderBy] See {@link query.orderBy}.\n     * @property {number} [skip] Alias for {@link query.offset}.\n     * @property {string|Array[]} [sort] Alias for {@link query.orderBy}.\n     * @property {Object} [where] See {@link query.where}.\n     * @since 3.0.0\n     * @tutorial [\"http://www.js-data.io/v3.0/docs/query-syntax\",\"JSData's Query Syntax\"]\n     */\n    query || (query = {})\n    this.getData()\n    if (utils.isObject(query)) {\n      let where = {}\n\n      /**\n       * Filtering criteria. Records that do not meet this criteria will be exluded\n       * from the result.\n       *\n       * @example <caption>Return posts where author is at least 32 years old</caption>\n       * const JSData = require('js-data');\n       * const { DataStore } = JSData;\n       * console.log('Using JSData v' + JSData.version.full);\n       *\n       * const store = new DataStore();\n       * store.defineMapper('post')\n       * const posts = [\n       *   { author: 'John', age: 30, id: 5 },\n       *   { author: 'Sally', age: 31, id: 6 },\n       *   { author: 'Mike', age: 32, id: 7 },\n       *   { author: 'Adam', age: 33, id: 8 },\n       *   { author: 'Adam', age: 33, id: 9 }\n       * ];\n       * store.add('post', posts);\n       * const results = store.filter('post', {\n       *   where: {\n       *     age: {\n       *       '>=': 30\n       *     }\n       *   }\n       * });\n       * console.log(results);\n       *\n       * @name query.where\n       * @type {Object}\n       * @see http://www.js-data.io/v3.0/docs/query-syntax\n       * @since 3.0.0\n       */\n      if (utils.isObject(query.where) || utils.isArray(query.where)) {\n        where = query.where\n      }\n      utils.forOwn(query, function (value, key) {\n        if (!(key in reserved) && !(key in where)) {\n          where[key] = {\n            '==': value\n          }\n        }\n      })\n      let groups\n\n      // Apply filter for each field\n      if (utils.isObject(where) && Object.keys(where).length !== 0) {\n        groups = this._applyWhereFromArray([where])\n      } else if (utils.isArray(where)) {\n        groups = this._applyWhereFromArray(where)\n      }\n\n      if (groups) {\n        this.data = this.data.filter((item, i) => this._testArrayGroup(true, true, groups, item).keep)\n      }\n\n      // Sort\n      let orderBy = query.orderBy || query.sort\n\n      if (utils.isString(orderBy)) {\n        orderBy = [\n          [orderBy, 'ASC']\n        ]\n      }\n      if (!utils.isArray(orderBy)) {\n        orderBy = null\n      }\n\n      /**\n       * Determines how records should be ordered in the result.\n       *\n       * @example <caption>Order posts by `author` then by `id` descending </caption>\n       * const JSData = require('js-data');\n       * const { DataStore } = JSData;\n       * console.log('Using JSData v' + JSData.version.full);\n       *\n       * const store = new DataStore();\n       * store.defineMapper('post')\n       * const posts = [\n       *   { author: 'John', age: 30, id: 5 },\n       *   { author: 'Sally', age: 31, id: 6 },\n       *   { author: 'Mike', age: 32, id: 7 },\n       *   { author: 'Adam', age: 33, id: 8 },\n       *   { author: 'Adam', age: 33, id: 9 }\n       * ];\n       * store.add('post', posts);\n       * const results = store.filter('post', {\n       *     orderBy:[['author','ASC'],['id','DESC']]\n       * });\n       * console.log(results);\n       *\n       * @name query.orderBy\n       * @type {string|Array[]}\n       * @see http://www.js-data.io/v3.0/docs/query-syntax\n       * @since 3.0.0\n       */\n      if (orderBy) {\n        const index = 0\n        orderBy.forEach(function (def, i) {\n          if (utils.isString(def)) {\n            orderBy[i] = [def, 'ASC']\n          }\n        })\n        this.data.sort((a, b) => this.compare(orderBy, index, a, b))\n      }\n\n      /**\n       * Number of records to skip.\n       *\n       * @example <caption>Retrieve the first \"page\" of blog posts using findAll</caption>\n       * const JSData = require('js-data');\n       * const { DataStore } = JSData;\n       * console.log('Using JSData v' + JSData.version.full);\n       *\n       * const store = new DataStore();\n       * store.defineMapper('post');\n       * const PAGE_SIZE = 10;\n       * let currentPage = 1;\n       * store.findAll('post', {\n       *   offset: PAGE_SIZE * (currentPage 1)\n       *   limit: PAGE_SIZE\n       * });\n       *\n       * @example <caption>Retrieve the last \"page\" of blog posts using filter</caption>\n       * const JSData = require('js-data');\n       * const { DataStore } = JSData;\n       * console.log('Using JSData v' + JSData.version.full);\n       *\n       * const store = new DataStore();\n       *\n       * const PAGE_SIZE = 5;\n       * let currentPage = 2;\n       * store.defineMapper('post');\n       * const posts = [\n       *   { author: 'John', age: 30, id: 1 },\n       *   { author: 'Sally', age: 31, id: 2 },\n       *   { author: 'Mike', age: 32, id: 3 },\n       *   { author: 'Adam', age: 33, id: 4 },\n       *   { author: 'Adam', age: 33, id: 5 },\n       *   { author: 'Peter', age: 25, id: 6 },\n       *   { author: 'Sally', age: 21, id: 7 },\n       *   { author: 'Jim', age: 27, id: 8 },\n       *   { author: 'Jim', age: 27, id: 9 },\n       *   { author: 'Jason', age: 55, id: 10 }\n       * ];\n       * store.add('post', posts);\n       * const results = store.filter('post', {\n       *   offset: PAGE_SIZE * (currentPage 1)\n       *   limit: PAGE_SIZE\n       * });\n       * console.log(results)\n       *\n       * @name query.offset\n       * @type {number}\n       * @see http://www.js-data.io/v3.0/docs/query-syntax\n       * @since 3.0.0\n       */\n      if (utils.isNumber(query.skip)) {\n        this.skip(query.skip)\n      } else if (utils.isNumber(query.offset)) {\n        this.skip(query.offset)\n      }\n\n      /**\n       * Maximum number of records to retrieve.\n       *\n       * @example <caption>Retrieve the first \"page\" of blog posts using findAll</caption>\n       * const JSData = require('js-data');\n       * const { DataStore } = JSData;\n       * console.log('Using JSData v' + JSData.version.full);\n       *\n       * const store = new DataStore();\n       * store.defineMapper('post');\n       *\n       * const PAGE_SIZE = 10\n       * let currentPage = 1\n       * store.findAll('post', {\n       *   offset: PAGE_SIZE * (currentPage 1)\n       *   limit: PAGE_SIZE\n       * });\n       *\n       * @example <caption>Retrieve the last \"page\" of blog posts using filter</caption>\n       * const JSData = require('js-data');\n       * const { DataStore } = JSData;\n       * console.log('Using JSData v' + JSData.version.full);\n       *\n       * const store = new DataStore();\n       *\n       * const PAGE_SIZE = 5\n       * let currentPage = 2\n       * store.defineMapper('post')\n       * const posts = [\n       *   { author: 'John', age: 30, id: 1 },\n       *   { author: 'Sally', age: 31, id: 2 },\n       *   { author: 'Mike', age: 32, id: 3 },\n       *   { author: 'Adam', age: 33, id: 4 },\n       *   { author: 'Adam', age: 33, id: 5 },\n       *   { author: 'Peter', age: 25, id: 6 },\n       *   { author: 'Sally', age: 21, id: 7 },\n       *   { author: 'Jim', age: 27, id: 8 },\n       *   { author: 'Jim', age: 27, id: 9 },\n       *   { author: 'Jason', age: 55, id: 10 }\n       * ];\n       * store.add('post', posts);\n       * const results = store.filter('post', {\n       *   offset: PAGE_SIZE * (currentPage 1)\n       *   limit: PAGE_SIZE\n       * });\n       * console.log(results)\n       *\n       * @name query.limit\n       * @type {number}\n       * @see http://www.js-data.io/v3.0/docs/query-syntax\n       * @since 3.0.0\n       */\n      if (utils.isNumber(query.limit)) {\n        this.limit(query.limit)\n      }\n    } else if (utils.isFunction(query)) {\n      this.data = this.data.filter(query, thisArg)\n    }\n    return this\n  },\n\n  /**\n   * Iterate over all entities.\n   *\n   * @method Query#forEach\n   * @param {Function} forEachFn Iteration function.\n   * @param {*} [thisArg] Context to which to bind `forEachFn`.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  forEach (forEachFn, thisArg) {\n    this.getData().forEach(forEachFn, thisArg)\n    return this\n  },\n\n  /**\n   * Find the entity or entities that match the provided key.\n   *\n   * @example <caption>Get the entity whose primary key is 25.</caption>\n   * const entities = query.get(25).run();\n   *\n   * @example <caption>Same as above.</caption>\n   * const entities = query.get([25]).run();\n   *\n   * @example <caption>Get all users who are active and have the \"admin\" role.</caption>\n   * const activeAdmins = query.get(['active', 'admin'], {\n   *   index: 'activityAndRoles'\n   * }).run();\n   *\n   * @example <caption>Get all entities that match a certain weather condition.</caption>\n   * const niceDays = query.get(['sunny', 'humid', 'calm'], {\n   *   index: 'weatherConditions'\n   * }).run();\n   *\n   * @method Query#get\n   * @param {array} keyList Key(s) defining the entity to retrieve. If\n   * `keyList` is not an array (i.e. for a single-value key), it will be\n   * wrapped in an array.\n   * @param {object} [opts] Configuration options.\n   * @param {string} [opts.string] Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  get (keyList, opts) {\n    keyList || (keyList = [])\n    opts || (opts = {})\n    if (this.data) {\n      throw utils.err(`${DOMAIN}#get`)(500, INDEX_ERR)\n    }\n    if (keyList && !utils.isArray(keyList)) {\n      keyList = [keyList]\n    }\n    if (!keyList.length) {\n      this.getData()\n      return this\n    }\n    this.data = this.collection.getIndex(opts.index).get(keyList)\n    return this\n  },\n\n  /**\n   * Find the entity or entities that match the provided keyLists.\n   *\n   * @example <caption>Get the posts where \"status\" is \"draft\" or \"inReview\".</caption>\n   * const posts = query.getAll('draft', 'inReview', { index: 'status' }).run();\n   *\n   * @example <caption>Same as above.</caption>\n   * const posts = query.getAll(['draft'], ['inReview'], { index: 'status' }).run();\n   *\n   * @method Query#getAll\n   * @param {...Array} [keyList] Provide one or more keyLists, and all\n   * entities matching each keyList will be retrieved. If no keyLists are\n   * provided, all entities will be returned.\n   * @param {object} [opts] Configuration options.\n   * @param {string} [opts.index] Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  getAll (...args) {\n    let opts = {}\n    if (this.data) {\n      throw utils.err(`${DOMAIN}#getAll`)(500, INDEX_ERR)\n    }\n    if (!args.length || (args.length === 1 && utils.isObject(args[0]))) {\n      this.getData()\n      return this\n    } else if (args.length && utils.isObject(args[args.length - 1])) {\n      opts = args[args.length - 1]\n      args.pop()\n    }\n    const collection = this.collection\n    const index = collection.getIndex(opts.index)\n    this.data = []\n    args.forEach((keyList) => {\n      this.data = this.data.concat(index.get(keyList))\n    })\n    return this\n  },\n\n  /**\n   * Return the current data result of this query.\n   *\n   * @method Query#getData\n   * @returns {Array} The data in this query.\n   * @since 3.0.0\n   */\n  getData () {\n    if (!this.data) {\n      this.data = this.collection.index.getAll()\n    }\n    return this.data\n  },\n\n  /**\n   * Implementation used by the `like` operator. Takes a pattern and flags and\n   * returns a `RegExp` instance that can test strings.\n   *\n   * @method Query#like\n   * @param {string} pattern Testing pattern.\n   * @param {string} flags Flags for the regular expression.\n   * @returns {RegExp} Regular expression for testing strings.\n   * @since 3.0.0\n   */\n  like (pattern, flags) {\n    return new RegExp(`^${(escape(pattern).replace(percentRegExp, '.*').replace(underscoreRegExp, '.'))}$`, flags)\n  },\n\n  /**\n   * Limit the result.\n   *\n   * @example <caption>Get only the first 2 posts.</caption>\n   * const store = new JSData.DataStore();\n   * store.defineMapper('post');\n   * const posts = [\n   *   { author: 'John', age: 30, status: 'published', id: 1 },\n   *   { author: 'Sally', age: 31, status: 'draft', id: 2 },\n   *   { author: 'Mike', age: 32, status: 'draft', id: 3 },\n   *   { author: 'Adam', age: 33, status: 'deleted', id: 4 },\n   *   { author: 'Adam', age: 33, status: 'draft', id: 5 }\n   * ];\n   * store.add('post', posts);\n   * const results = store.query('post').limit(2).run();\n   * console.log(results);\n   *\n   * @method Query#limit\n   * @param {number} num The maximum number of entities to keep in the result.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  limit (num) {\n    if (!utils.isNumber(num)) {\n      throw utils.err(`${DOMAIN}#limit`, 'num')(400, 'number', num)\n    }\n    const data = this.getData()\n    this.data = data.slice(0, Math.min(data.length, num))\n    return this\n  },\n\n  /**\n   * Apply a mapping function to the result data.\n   *\n   * @example\n   * const JSData = require('js-data');\n   * const { DataStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new DataStore();\n   * store.defineMapper('user');\n   * const users = [\n   *   { name: 'Peter', age: 25, id: 1 },\n   *   { name: 'Jim', age: 19, id: 2 },\n   *   { name: 'Mike', age: 17, id: 3 },\n   *   { name: 'Alan', age: 29, id: 4 },\n   *   { name: 'Katie', age: 33, id: 5 }\n   * ];\n   * store.add('user', users);\n   * const ages = store\n   *   .query('user')\n   *   .map(function (user) {\n   *     return user.age;\n   *   })\n   *   .run();\n   * console.log(ages);\n   *\n   * @method Query#map\n   * @param {Function} mapFn Mapping function.\n   * @param {*} [thisArg] Context to which to bind `mapFn`.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  map (mapFn, thisArg) {\n    this.data = this.getData().map(mapFn, thisArg)\n    return this\n  },\n\n  /**\n   * Return the result of calling the specified function on each item in this\n   * collection's main index.\n   *\n   * @example\n   * const stringAges = UserCollection.query().mapCall('toString').run();\n   *\n   * @method Query#mapCall\n   * @param {string} funcName Name of function to call\n   * @parama {...*} [args] Remaining arguments to be passed to the function.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  mapCall (funcName, ...args) {\n    this.data = this.getData().map(function (item) {\n      return item[funcName](...args)\n    })\n    return this\n  },\n\n  /**\n   * Complete the execution of the query and return the resulting data.\n   *\n   * @method Query#run\n   * @returns {Array} The result of executing this query.\n   * @since 3.0.0\n   */\n  run () {\n    const data = this.data\n    this.data = null\n    return data\n  },\n\n  /**\n   * Skip a number of results.\n   *\n   * @example <caption>Get all but the first 2 posts.</caption>\n   * const JSData = require('js-data');\n   * const { DataStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new DataStore();\n   * store.defineMapper('post');\n   * const posts = [\n   *   { author: 'John', age: 30, status: 'published', id: 1 },\n   *   { author: 'Sally', age: 31, status: 'draft', id: 2 },\n   *   { author: 'Mike', age: 32, status: 'draft', id: 3 },\n   *   { author: 'Adam', age: 33, status: 'deleted', id: 4 },\n   *   { author: 'Adam', age: 33, status: 'draft', id: 5 }\n   * ];\n   * store.add('post', posts);\n   * const results = store.query('post').skip(2).run();\n   * console.log(results);\n   *\n   * @method Query#skip\n   * @param {number} num The number of entities to skip.\n   * @returns {Query} A reference to itself for chaining.\n   * @since 3.0.0\n   */\n  skip (num) {\n    if (!utils.isNumber(num)) {\n      throw utils.err(`${DOMAIN}#skip`, 'num')(400, 'number', num)\n    }\n    const data = this.getData()\n    if (num < data.length) {\n      this.data = data.slice(num)\n    } else {\n      this.data = []\n    }\n    return this\n  }\n}, {\n  /**\n   * The filtering operators supported by {@link Query#filter}, and which are\n   * implemented by adapters (for the most part).\n   *\n   * @example <caption>Variant 1</caption>\n   * const JSData = require('js-data');\n   * const { DataStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new DataStore();\n   * store.defineMapper('post');\n   * const posts = [\n   *   { author: 'John', age: 30, status: 'published', id: 1 },\n   *   { author: 'Sally', age: 31, status: 'published', id: 2 },\n   *   { author: 'Mike', age: 32, status: 'published', id: 3 },\n   *   { author: 'Adam', age: 33, status: 'deleted', id: 4 },\n   *   { author: 'Adam', age: 33, status: 'published', id: 5 }\n   * ];\n   * store.add('post', posts);\n   * const publishedPosts = store.filter('post', {\n   *   status: 'published',\n   *   limit: 2\n   * });\n   * console.log(publishedPosts);\n   *\n   *\n   * @example <caption>Variant 2</caption>\n   * const JSData = require('js-data');\n   * const { DataStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new DataStore();\n   * store.defineMapper('post')\n   * const posts = [\n   *   { author: 'John', age: 30, status: 'published', id: 1 },\n   *   { author: 'Sally', age: 31, status: 'published', id: 2 },\n   *   { author: 'Mike', age: 32, status: 'published', id: 3 },\n   *   { author: 'Adam', age: 33, status: 'deleted', id: 4 },\n   *   { author: 'Adam', age: 33, status: 'published', id: 5 }\n   * ];\n   * store.add('post', posts);\n   * const publishedPosts = store.filter('post', {\n   *   where: {\n   *     status: {\n   *       '==': 'published'\n   *     }\n   *   },\n   *   limit: 2\n   * });\n   * console.log(publishedPosts);\n   *\n   * @example <caption>Variant 3</caption>\n   * const JSData = require('js-data');\n   * const { DataStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new DataStore();\n   * store.defineMapper('post');\n   * const posts = [\n   *   { author: 'John', age: 30, status: 'published', id: 1 },\n   *   { author: 'Sally', age: 31, status: 'published', id: 2 },\n   *   { author: 'Mike', age: 32, status: 'published', id: 3 },\n   *   { author: 'Adam', age: 33, status: 'deleted', id: 4 },\n   *   { author: 'Adam', age: 33, status: 'published', id: 5 }\n   * ];\n   * store.add('post', posts);\n   * const publishedPosts = store\n   *   .query('post')\n   *   .filter({ status: 'published' })\n   *   .limit(2)\n   *   .run();\n   * console.log(publishedPosts);\n   *\n   * @example <caption>Variant 4</caption>\n   * const JSData = require('js-data');\n   * const { DataStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new DataStore();\n   * store.defineMapper('post');\n   * const posts = [\n   *   { author: 'John', age: 30, status: 'published', id: 1 },\n   *   { author: 'Sally', age: 31, status: 'published', id: 2 },\n   *   { author: 'Mike', age: 32, status: 'published', id: 3 },\n   *   { author: 'Adam', age: 33, status: 'deleted', id: 4 },\n   *   { author: 'Adam', age: 33, status: 'published', id: 5 }\n   * ];\n   * store.add('post', posts);\n   * const publishedPosts = store\n   *   .query('post')\n   *   .filter({\n   *     where: {\n   *       status: {\n   *         '==': 'published'\n   *       }\n   *     }\n   *   })\n   *   .limit(2)\n   *   .run();\n   * console.log(publishedPosts);\n   *\n   * @example <caption>Multiple operators</caption>\n   * const JSData = require('js-data');\n   * const { DataStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new DataStore();\n   * store.defineMapper('post');\n   * const posts = [\n   *   { author: 'John', age: 30, status: 'published', id: 1 },\n   *   { author: 'Sally', age: 31, status: 'published', id: 2 },\n   *   { author: 'Mike', age: 32, status: 'published', id: 3 },\n   *   { author: 'Adam', age: 33, status: 'deleted', id: 4 },\n   *   { author: 'Adam', age: 33, status: 'published', id: 5 }\n   * ];\n   * store.add('post', posts);\n   *\n   * const myPublishedPosts = store.filter('post', {\n   *   where: {\n   *     status: {\n   *       '==': 'published'\n   *     },\n   *     user_id: {\n   *       '==': currentUser.id\n   *     }\n   *   }\n   * });\n   *\n   * console.log(myPublishedPosts);\n   *\n   * @name Query.ops\n   * @property {Function} == Equality operator.\n   * @property {Function} != Inequality operator.\n   * @property {Function} > Greater than operator.\n   * @property {Function} >= Greater than (inclusive) operator.\n   * @property {Function} < Less than operator.\n   * @property {Function} <= Less than (inclusive) operator.\n   * @property {Function} isectEmpty Operator that asserts that the intersection\n   * between two arrays is empty.\n   * @property {Function} isectNotEmpty Operator that asserts that the\n   * intersection between two arrays is __not__ empty.\n   * @property {Function} in Operator that asserts whether a value is in an\n   * array.\n   * @property {Function} notIn Operator that asserts whether a value is __not__\n   * in an array.\n   * @property {Function} contains Operator that asserts whether an array\n   * contains a value.\n   * @property {Function} notContains Operator that asserts whether an array\n   * does __not__ contain a value.\n   * @since 3.0.0\n   * @type {Object}\n   */\n  ops: {\n    '=': function (value, predicate) {\n      return value == predicate // eslint-disable-line\n    },\n    '==': function (value, predicate) {\n      return value == predicate // eslint-disable-line\n    },\n    '===': function (value, predicate) {\n      return value === predicate\n    },\n    '!=': function (value, predicate) {\n      return value != predicate // eslint-disable-line\n    },\n    '!==': function (value, predicate) {\n      return value !== predicate\n    },\n    '>': function (value, predicate) {\n      return value > predicate\n    },\n    '>=': function (value, predicate) {\n      return value >= predicate\n    },\n    '<': function (value, predicate) {\n      return value < predicate\n    },\n    '<=': function (value, predicate) {\n      return value <= predicate\n    },\n    isectEmpty: function (value, predicate) {\n      return !utils.intersection((value || []), (predicate || [])).length\n    },\n    isectNotEmpty: function (value, predicate) {\n      return utils.intersection((value || []), (predicate || [])).length\n    },\n    in: function (value, predicate) {\n      return predicate.indexOf(value) !== -1\n    },\n    notIn: function (value, predicate) {\n      return predicate.indexOf(value) === -1\n    },\n    contains: function (value, predicate) {\n      return (value || []).indexOf(predicate) !== -1\n    },\n    notContains: function (value, predicate) {\n      return (value || []).indexOf(predicate) === -1\n    }\n  }\n})\n\n/**\n * Create a subclass of this Query:\n * @example <caption>Query.extend</caption>\n * const JSData = require('js-data');\n * const { Query } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * // Extend the class using ES2015 class syntax.\n * class CustomQueryClass extends Query {\n *   foo () { return 'bar'; }\n *   static beep () { return 'boop'; }\n * }\n * const customQuery = new CustomQueryClass();\n * console.log(customQuery.foo());\n * console.log(CustomQueryClass.beep());\n *\n * // Extend the class using alternate method.\n * const OtherQueryClass = Query.extend({\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const otherQuery = new OtherQueryClass();\n * console.log(otherQuery.foo());\n * console.log(OtherQueryClass.beep());\n *\n * // Extend the class, providing a custom constructor.\n * function AnotherQueryClass (collection) {\n *   Query.call(this, collection);\n *   this.created_at = new Date().getTime();\n * }\n * Query.extend({\n *   constructor: AnotherQueryClass,\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const anotherQuery = new AnotherQueryClass();\n * console.log(anotherQuery.created_at);\n * console.log(anotherQuery.foo());\n * console.log(AnotherQueryClass.beep());\n *\n * @method Query.extend\n * @param {object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {object} [props.constructor] Provide a custom constructor function\n * to be used as the subclass itself.\n * @param {object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this Query class.\n * @since 3.0.0\n */\n","import utils from './utils'\n\nconst DOMAIN = 'Relation'\n\nexport function Relation (relatedMapper, options = {}) {\n  utils.classCallCheck(this, Relation)\n\n  options.type = this.constructor.TYPE_NAME\n  this.validateOptions(relatedMapper, options)\n\n  if (typeof relatedMapper === 'object') {\n    Object.defineProperty(this, 'relatedMapper', { value: relatedMapper })\n  }\n\n  Object.defineProperty(this, 'inverse', { writable: true })\n  utils.fillIn(this, options)\n}\n\nRelation.extend = utils.extend\n\nutils.addHiddenPropsToTarget(Relation.prototype, {\n  get canAutoAddLinks () {\n    return this.add === undefined || !!this.add\n  },\n\n  get relatedCollection () {\n    return this.mapper.datastore.getCollection(this.relation)\n  },\n\n  validateOptions (related, opts) {\n    const DOMAIN_ERR = `new ${DOMAIN}`\n\n    const localField = opts.localField\n    if (!localField) {\n      throw utils.err(DOMAIN_ERR, 'opts.localField')(400, 'string', localField)\n    }\n\n    const foreignKey = opts.foreignKey = opts.foreignKey || opts.localKey\n\n    if (!foreignKey && this.isRequiresValidForeignKey()) {\n      throw utils.err(DOMAIN_ERR, 'opts.foreignKey')(400, 'string', foreignKey)\n    }\n\n    if (utils.isString(related)) {\n      opts.relation = related\n      if (!utils.isFunction(opts.getRelation)) {\n        throw utils.err(DOMAIN_ERR, 'opts.getRelation')(400, 'function', opts.getRelation)\n      }\n    } else if (related) {\n      opts.relation = related.name\n    } else {\n      throw utils.err(DOMAIN_ERR, 'related')(400, 'Mapper or string', related)\n    }\n  },\n\n  assignTo (mapper) {\n    this.name = mapper.name\n    Object.defineProperty(this, 'mapper', { value: mapper })\n\n    mapper.relationList || Object.defineProperty(mapper, 'relationList', { value: [] })\n    mapper.relationFields || Object.defineProperty(mapper, 'relationFields', { value: [] })\n    mapper.relationList.push(this)\n    mapper.relationFields.push(this.localField)\n  },\n\n  canFindLinkFor () {\n    return !!(this.foreignKey || this.localKey)\n  },\n\n  getRelation () {\n    return this.relatedMapper\n  },\n\n  getForeignKey (record) {\n    return utils.get(record, this.mapper.idAttribute)\n  },\n\n  setForeignKey (record, relatedRecord) {\n    if (!record || !relatedRecord) {\n      return\n    }\n\n    this._setForeignKey(record, relatedRecord)\n  },\n\n  _setForeignKey (record, relatedRecords) {\n    const idAttribute = this.mapper.idAttribute\n\n    if (!utils.isArray(relatedRecords)) {\n      relatedRecords = [relatedRecords]\n    }\n\n    relatedRecords.forEach((relatedRecord) => {\n      utils.set(relatedRecord, this.foreignKey, utils.get(record, idAttribute))\n    })\n  },\n\n  getLocalField (record) {\n    return utils.get(record, this.localField)\n  },\n\n  setLocalField (record, relatedData) {\n    return utils.set(record, this.localField, relatedData)\n  },\n\n  getInverse (mapper) {\n    if (!this.inverse) {\n      this.findInverseRelation(mapper)\n    }\n\n    return this.inverse\n  },\n\n  findInverseRelation (mapper) {\n    this.getRelation().relationList.forEach((def) => {\n      if (def.getRelation() === mapper && this.isInversedTo(def) && this !== def) {\n        this.inverse = def\n        return true\n      }\n    })\n  },\n\n  isInversedTo (def) {\n    return !def.foreignKey || def.foreignKey === this.foreignKey\n  },\n\n  addLinkedRecords (records) {\n    const datastore = this.mapper.datastore\n\n    records.forEach((record) => {\n      let relatedData = this.getLocalField(record)\n\n      if (utils.isFunction(this.add)) {\n        relatedData = this.add(datastore, this, record)\n      } else if (relatedData) {\n        relatedData = this.linkRecord(record, relatedData)\n      }\n\n      const isEmptyLinks = !relatedData || (utils.isArray(relatedData) && !relatedData.length)\n\n      if (isEmptyLinks && this.canFindLinkFor(record)) {\n        relatedData = this.findExistingLinksFor(record)\n      }\n\n      if (relatedData) {\n        this.setLocalField(record, relatedData)\n      }\n    })\n  },\n\n  removeLinkedRecords (relatedMapper, records) {\n    const localField = this.localField\n    records.forEach((record) => {\n      utils.set(record, localField, undefined)\n    })\n  },\n\n  linkRecord (record, relatedRecord) {\n    const relatedId = utils.get(relatedRecord, this.mapper.idAttribute)\n\n    if (relatedId === undefined) {\n      const unsaved = this.relatedCollection.unsaved()\n      if (unsaved.indexOf(relatedRecord) === -1) {\n        if (this.canAutoAddLinks) {\n          relatedRecord = this.relatedCollection.add(relatedRecord)\n        }\n      }\n    } else {\n      if (relatedRecord !== this.relatedCollection.get(relatedId)) {\n        this.setForeignKey(record, relatedRecord)\n\n        if (this.canAutoAddLinks) {\n          relatedRecord = this.relatedCollection.add(relatedRecord)\n        }\n      }\n    }\n\n    return relatedRecord\n  },\n\n  // e.g. user hasMany post via \"foreignKey\", so find all posts of user\n  findExistingLinksByForeignKey (id) {\n    if (id === undefined || id === null) {\n      return\n    }\n    return this.relatedCollection.filter({\n      [this.foreignKey]: id\n    })\n  },\n\n  ensureLinkedDataHasProperType (props, opts) {\n    const relatedMapper = this.getRelation()\n    const relationData = this.getLocalField(props)\n\n    if (utils.isArray(relationData) && (!relationData.length || relatedMapper.is(relationData[0]))) {\n      return\n    }\n\n    if (relationData && !relatedMapper.is(relationData)) {\n      utils.set(props, this.localField, relatedMapper.createRecord(relationData, opts))\n    }\n  },\n\n  isRequiresParentId () {\n    return false\n  },\n\n  isRequiresValidForeignKey () {\n    return false\n  },\n\n  isRequiresChildId () {\n    return false\n  },\n\n  createChildRecord (props, relationData, opts) {\n    this.setForeignKey(props, relationData)\n\n    return this.createLinked(relationData, opts).then((result) => {\n      this.setLocalField(props, result)\n    })\n  },\n\n  createLinked (props, opts) {\n    const create = utils.isArray(props) ? 'createMany' : 'create'\n\n    return this.getRelation()[create](props, opts)\n  }\n})\n","import utils from '../utils'\nimport { Relation } from '../Relation'\n\nexport const hasManyType = 'hasMany'\n\nexport const HasManyRelation = Relation.extend({\n  validateOptions (related, opts) {\n    Relation.prototype.validateOptions.call(this, related, opts)\n\n    const { localKeys, foreignKeys, foreignKey } = opts\n\n    if (!foreignKey && !localKeys && !foreignKeys) {\n      throw utils.err('new Relation', 'opts.<foreignKey|localKeys|foreignKeys>')(400, 'string', foreignKey)\n    }\n  },\n\n  canFindLinkFor (record) {\n    const hasForeignKeys = this.foreignKey || this.foreignKeys\n    return !!(hasForeignKeys || (this.localKeys && utils.get(record, this.localKeys)))\n  },\n\n  linkRecord (record, relatedRecords) {\n    const relatedCollection = this.relatedCollection\n    const canAutoAddLinks = this.canAutoAddLinks\n    const foreignKey = this.foreignKey\n    const unsaved = this.relatedCollection.unsaved()\n\n    return relatedRecords.map((relatedRecord) => {\n      const relatedId = relatedCollection.recordId(relatedRecord)\n\n      if ((relatedId === undefined && unsaved.indexOf(relatedRecord) === -1) || relatedRecord !== relatedCollection.get(relatedId)) {\n        if (foreignKey) {\n          // TODO: slow, could be optimized? But user loses hook\n          this.setForeignKey(record, relatedRecord)\n        }\n        if (canAutoAddLinks) {\n          relatedRecord = relatedCollection.add(relatedRecord)\n        }\n      }\n\n      return relatedRecord\n    })\n  },\n\n  findExistingLinksFor (record) {\n    const id = utils.get(record, this.mapper.idAttribute)\n    const ids = this.localKeys ? utils.get(record, this.localKeys) : null\n    let records\n\n    if (id !== undefined && this.foreignKey) {\n      records = this.findExistingLinksByForeignKey(id)\n    } else if (this.localKeys && ids) {\n      records = this.findExistingLinksByLocalKeys(ids)\n    } else if (id !== undefined && this.foreignKeys) {\n      records = this.findExistingLinksByForeignKeys(id)\n    }\n\n    if (records && records.length) {\n      return records\n    }\n  },\n\n  // e.g. user hasMany group via \"foreignKeys\", so find all users of a group\n  findExistingLinksByLocalKeys (ids) {\n    return this.relatedCollection.filter({\n      where: {\n        [this.relatedCollection.mapper.idAttribute]: {\n          in: ids\n        }\n      }\n    })\n  },\n\n  // e.g. group hasMany user via \"localKeys\", so find all groups that own a user\n  findExistingLinksByForeignKeys (id) {\n    return this.relatedCollection.filter({\n      where: {\n        [this.foreignKeys]: {\n          contains: id\n        }\n      }\n    })\n  },\n\n  isRequiresParentId () {\n    return !!this.localKeys && this.localKeys.length > 0\n  },\n\n  isRequiresChildId () {\n    return !!this.foreignKey\n  },\n\n  createParentRecord (props, opts) {\n    const relationData = this.getLocalField(props)\n    const foreignIdField = this.getRelation().idAttribute\n\n    return this.createLinked(relationData, opts).then((records) => {\n      utils.set(props, this.localKeys, records.map((record) => utils.get(record, foreignIdField)))\n    })\n  },\n\n  createLinked (props, opts) {\n    return this.getRelation().createMany(props, opts)\n  }\n}, {\n  TYPE_NAME: hasManyType\n})\n\nexport function createDescriptor (mapper, def, name, store) {\n  const relation = def.relation\n  const localKeys = def.localKeys\n  const foreignKey = def.foreignKey\n  const foreignKeys = def.foreignKeys\n  const localField = def.localField\n  const path = `links.${localField}`\n  const updateOpts = { index: foreignKey }\n  const idAttribute = mapper.idAttribute\n  const getter = function () { return this._get(path) }\n\n  // TODO: Handle case when belongsTo relation isn't ever defined\n  if (store._collections[relation] && foreignKey && !store.getCollection(relation).indexes[foreignKey]) {\n    store.getCollection(relation).createIndex(foreignKey)\n  }\n\n  return { // descriptor\n    get () {\n      const current = getter.call(this)\n      if (!current) {\n        this._set(path, [])\n      }\n      return getter.call(this)\n    },\n    // e.g. post.comments = someComments\n    // or user.groups = someGroups\n    // or group.users = someUsers\n    set (records) {\n      if (records && !utils.isArray(records)) {\n        records = [records]\n      }\n      const id = utils.get(this, mapper.idAttribute)\n      const relatedIdAttribute = def.getRelation().idAttribute\n      const inverseDef = def.getInverse(mapper)\n      const inverseLocalField = inverseDef.localField\n      const current = this._get(path) || []\n      const toLink = []\n      const toLinkIds = {}\n\n      if (records) {\n        records.forEach((record) => {\n          // e.g. comment.id\n          const relatedId = utils.get(record, relatedIdAttribute)\n          const currentParent = utils.get(record, inverseLocalField)\n          if (currentParent && currentParent !== this) {\n            const currentChildrenOfParent = utils.get(currentParent, localField)\n            // e.g. somePost.comments.remove(comment)\n            if (relatedId === undefined) {\n              utils.remove(currentChildrenOfParent, (child) => child === record)\n            } else {\n              utils.remove(currentChildrenOfParent, (child) => child === record || relatedId === utils.get(child, relatedIdAttribute))\n            }\n          }\n          if (relatedId !== undefined) {\n            if (this._get('$')) {\n              // Prefer store record\n              record = store.get(relation, relatedId) || record\n            }\n            // e.g. toLinkIds[comment.id] = comment\n            toLinkIds[relatedId] = record\n          }\n          toLink.push(record)\n        })\n      }\n\n      // e.g. post.comments = someComments\n      if (foreignKey) {\n        current.forEach((record) => {\n          // e.g. comment.id\n          const relatedId = utils.get(record, relatedIdAttribute)\n          if ((relatedId === undefined && toLink.indexOf(record) === -1) || (relatedId !== undefined && !(relatedId in toLinkIds))) {\n            // Update (unset) inverse relation\n            if (records) {\n              // e.g. comment.post_id = undefined\n              utils.safeSetProp(record, foreignKey, undefined)\n              // e.g. CommentCollection.updateIndex(comment, { index: 'post_id' })\n              store.getCollection(relation).updateIndex(record, updateOpts)\n            }\n            // e.g. comment.post = undefined\n            utils.safeSetLink(record, inverseLocalField, undefined)\n          }\n        })\n        toLink.forEach((record) => {\n          // Update (set) inverse relation\n          // e.g. comment.post_id = post.id\n          utils.safeSetProp(record, foreignKey, id)\n          // e.g. CommentCollection.updateIndex(comment, { index: 'post_id' })\n          store.getCollection(relation).updateIndex(record, updateOpts)\n          // e.g. comment.post = post\n          utils.safeSetLink(record, inverseLocalField, this)\n        })\n      } else if (localKeys) {\n        // Update locals\n        // e.g. group.users = someUsers\n        // Update (set) inverse relation\n        const ids = toLink.map((child) => utils.get(child, relatedIdAttribute)).filter((id) => id !== undefined)\n        // e.g. group.user_ids = [1,2,3,...]\n        utils.set(this, localKeys, ids)\n        // Update (unset) inverse relation\n        if (inverseDef.foreignKeys) {\n          current.forEach((child) => {\n            const relatedId = utils.get(child, relatedIdAttribute)\n            if ((relatedId === undefined && toLink.indexOf(child) === -1) || (relatedId !== undefined && !(relatedId in toLinkIds))) {\n              // Update inverse relation\n              // utils.safeSetLink(child, inverseLocalField, undefined)\n              const parents = utils.get(child, inverseLocalField) || []\n              // e.g. someUser.groups.remove(group)\n              if (id === undefined) {\n                utils.remove(parents, (parent) => parent === this)\n              } else {\n                utils.remove(parents, (parent) => parent === this || id === utils.get(parent, idAttribute))\n              }\n            }\n          })\n          toLink.forEach((child) => {\n            // Update (set) inverse relation\n            const parents = utils.get(child, inverseLocalField)\n            // e.g. someUser.groups.push(group)\n            if (id === undefined) {\n              utils.noDupeAdd(parents, this, (parent) => parent === this)\n            } else {\n              utils.noDupeAdd(parents, this, (parent) => parent === this || id === utils.get(parent, idAttribute))\n            }\n          })\n        }\n      } else if (foreignKeys) {\n        // e.g. user.groups = someGroups\n        // Update (unset) inverse relation\n        current.forEach((parent) => {\n          const ids = utils.get(parent, foreignKeys) || []\n          // e.g. someGroup.user_ids.remove(user.id)\n          utils.remove(ids, (_key) => id === _key)\n          const children = utils.get(parent, inverseLocalField)\n          // e.g. someGroup.users.remove(user)\n          if (id === undefined) {\n            utils.remove(children, (child) => child === this)\n          } else {\n            utils.remove(children, (child) => child === this || id === utils.get(child, idAttribute))\n          }\n        })\n        // Update (set) inverse relation\n        toLink.forEach((parent) => {\n          const ids = utils.get(parent, foreignKeys) || []\n          utils.noDupeAdd(ids, id, (_key) => id === _key)\n          const children = utils.get(parent, inverseLocalField)\n          if (id === undefined) {\n            utils.noDupeAdd(children, this, (child) => child === this)\n          } else {\n            utils.noDupeAdd(children, this, (child) => child === this || id === utils.get(child, idAttribute))\n          }\n        })\n      }\n\n      this._set(path, toLink)\n      return toLink\n    }\n  }\n}\n","import utils from '../utils'\nimport { Relation } from '../Relation'\n\nexport const hasOneType = 'hasOne'\n\nexport const HasOneRelation = Relation.extend({\n  findExistingLinksFor (relatedMapper, record) {\n    const recordId = utils.get(record, relatedMapper.idAttribute)\n    const records = this.findExistingLinksByForeignKey(recordId)\n\n    if (records && records.length) {\n      return records[0]\n    }\n  },\n\n  isRequiresChildId () {\n    return true\n  },\n\n  isRequiresValidForeignKey () {\n    return true\n  }\n}, {\n  TYPE_NAME: hasOneType\n})\n\nexport function createDescriptor (mapper, def, name, store) {\n  const relation = def.relation\n  const foreignKey = def.foreignKey\n  const localField = def.localField\n  const path = `links.${localField}`\n  const updateOpts = { index: foreignKey }\n\n  // TODO: Handle case when belongsTo relation isn't ever defined\n  if (store._collections[relation] && foreignKey && !store.getCollection(relation).indexes[foreignKey]) {\n    store.getCollection(relation).createIndex(foreignKey)\n  }\n\n  // descriptor\n  return {\n    // e.g. user.profile = someProfile\n    set (record) {\n      const current = this._get(path)\n      if (record === current) {\n        return current\n      }\n      const inverseLocalField = def.getInverse(mapper).localField\n      // Update (unset) inverse relation\n      if (current) {\n        utils.safeSetProp(current, foreignKey, undefined)\n        store.getCollection(relation).updateIndex(current, updateOpts)\n        utils.safeSetLink(current, inverseLocalField, undefined)\n      }\n      if (record) {\n        const relatedId = utils.get(record, def.getRelation().idAttribute)\n        // Prefer store record\n        if (relatedId !== undefined) {\n          record = store.get(relation, relatedId) || record\n        }\n\n        // Set locals\n        utils.safeSetLink(this, localField, record)\n\n        // Update (set) inverse relation\n        utils.safeSetProp(record, foreignKey, utils.get(this, mapper.idAttribute))\n        store.getCollection(relation).updateIndex(record, updateOpts)\n        utils.safeSetLink(record, inverseLocalField, this)\n      } else {\n        // Unset locals\n        utils.safeSetLink(this, localField, undefined)\n      }\n      return record\n    }\n  }\n}\n","import utils from '../utils'\nimport { hasManyType } from './HasMany'\nimport { hasOneType } from './HasOne'\nimport { Relation } from '../Relation'\n\nexport const belongsToType = 'belongsTo'\n\nexport const BelongsToRelation = Relation.extend({\n  getForeignKey (record) {\n    return utils.get(record, this.foreignKey)\n  },\n\n  _setForeignKey (record, relatedRecord) {\n    utils.set(record, this.foreignKey, utils.get(relatedRecord, this.getRelation().idAttribute))\n  },\n\n  findExistingLinksFor (record) {\n    if (!record) {\n      return\n    }\n    const relatedId = utils.get(record, this.foreignKey)\n    if (relatedId !== undefined && relatedId !== null) {\n      return this.relatedCollection.get(relatedId)\n    }\n  },\n\n  isRequiresParentId () {\n    return true\n  },\n\n  isRequiresValidForeignKey () {\n    return true\n  },\n\n  createParentRecord (props, opts) {\n    const relationData = this.getLocalField(props)\n\n    return this.createLinked(relationData, opts).then((record) => {\n      this.setForeignKey(props, record)\n    })\n  },\n\n  createChildRecord () {\n    throw new Error('\"BelongsTo\" relation does not support child creation as it cannot have children.')\n  }\n}, {\n  TYPE_NAME: belongsToType\n})\n\nexport function createDescriptor (mapper, def, name, store) {\n  const idAttribute = mapper.idAttribute\n  // todo: fix this\n  const collection = store.getCollection(name)\n  const relation = def.relation\n  const foreignKey = def.foreignKey\n  const localField = def.localField\n  const path = `links.${localField}`\n  const updateOpts = { index: foreignKey }\n\n  if (!collection.indexes[foreignKey]) {\n    collection.createIndex(foreignKey)\n  }\n\n  const descriptor = {\n    // e.g. profile.user = someUser\n    // or comment.post = somePost\n    set (record) {\n      // e.g. const otherUser = profile.user\n      const currentParent = this._get(path)\n      // e.g. profile.user === someUser\n      if (record === currentParent) {\n        return currentParent\n      }\n      const id = utils.get(this, idAttribute)\n      const inverseDef = def.getInverse(mapper)\n\n      // e.g. profile.user !== someUser\n      // or comment.post !== somePost\n      if (currentParent && inverseDef) {\n        this.removeInverseRelation(currentParent, id, inverseDef, idAttribute)\n      }\n      if (record) {\n        // e.g. profile.user = someUser\n        const relatedIdAttribute = def.getRelation().idAttribute\n        const relatedId = utils.get(record, relatedIdAttribute)\n\n        // Prefer store record\n        if (relatedId !== undefined && this._get('$')) {\n          record = store.get(relation, relatedId) || record\n        }\n\n        // Set locals\n        // e.g. profile.user = someUser\n        // or comment.post = somePost\n        utils.safeSetLink(this, localField, record)\n        utils.safeSetProp(this, foreignKey, relatedId)\n        collection.updateIndex(this, updateOpts)\n\n        if (inverseDef) {\n          this.setupInverseRelation(record, id, inverseDef, idAttribute)\n        }\n      } else {\n        // Unset in-memory link only\n        // e.g. profile.user = undefined\n        // or comment.post = undefined\n        utils.safeSetLink(this, localField, undefined)\n      }\n      return record\n    }\n  }\n\n  let foreignKeyDescriptor = Object.getOwnPropertyDescriptor(mapper.recordClass.prototype, foreignKey)\n  if (!foreignKeyDescriptor) {\n    foreignKeyDescriptor = {\n      enumerable: true\n    }\n  }\n  const originalGet = foreignKeyDescriptor.get\n  foreignKeyDescriptor.get = function () {\n    if (originalGet) {\n      return originalGet.call(this)\n    }\n    return this._get(`props.${foreignKey}`)\n  }\n  const originalSet = foreignKeyDescriptor.set\n  foreignKeyDescriptor.set = function (value) {\n    if (originalSet) {\n      originalSet.call(this, value)\n    }\n    const currentParent = utils.get(this, localField)\n    const id = utils.get(this, idAttribute)\n    const inverseDef = def.getInverse(mapper)\n    const currentParentId = currentParent ? utils.get(currentParent, def.getRelation().idAttribute) : undefined\n\n    if (inverseDef && currentParent && currentParentId !== undefined && currentParentId !== value) {\n      if (inverseDef.type === hasOneType) {\n        utils.safeSetLink(currentParent, inverseDef.localField, undefined)\n      } else if (inverseDef.type === hasManyType) {\n        const children = utils.get(currentParent, inverseDef.localField)\n        if (id === undefined) {\n          utils.remove(children, (child) => child === this)\n        } else {\n          utils.remove(children, (child) => child === this || id === utils.get(child, idAttribute))\n        }\n      }\n    }\n\n    utils.safeSetProp(this, foreignKey, value)\n    collection.updateIndex(this, updateOpts)\n\n    if ((value === undefined || value === null)) {\n      if (currentParentId !== undefined) {\n        // Unset locals\n        utils.set(this, localField, undefined)\n      }\n    } else if (this._get('$')) {\n      const storeRecord = store.get(relation, value)\n      if (storeRecord) {\n        utils.set(this, localField, storeRecord)\n      }\n    }\n  }\n  Object.defineProperty(mapper.recordClass.prototype, foreignKey, foreignKeyDescriptor)\n\n  return descriptor\n}\n","import { BelongsToRelation } from './Relation/BelongsTo'\nimport { HasManyRelation } from './Relation/HasMany'\nimport { HasOneRelation } from './Relation/HasOne'\n\nexport { belongsToType, hasManyType, hasOneType } from './relations'\n/**\n * BelongsTo relation decorator. You probably won't use this directly.\n *\n * @name module:js-data.belongsTo\n * @method\n * @param {Mapper} related The relation the target belongs to.\n * @param {object} opts Configuration options.\n * @param {string} opts.foreignKey The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @returns {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const belongsTo = function (related, opts) {\n  return function (mapper) {\n    return new BelongsToRelation(related, opts).assignTo(mapper)\n  }\n}\n\n/**\n * HasMany relation decorator. You probably won't use this directly.\n *\n * @name module:js-data.hasMany\n * @method\n * @param {Mapper} related The relation of which the target has many.\n * @param {object} opts Configuration options.\n * @param {string} [opts.foreignKey] The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @returns {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const hasMany = function (related, opts) {\n  return function (mapper) {\n    return new HasManyRelation(related, opts).assignTo(mapper)\n  }\n}\n\n/**\n * HasOne relation decorator. You probably won't use this directly.\n *\n * @name module:js-data.hasOne\n * @method\n * @param {Mapper} related The relation of which the target has one.\n * @param {object} opts Configuration options.\n * @param {string} [opts.foreignKey] The field that holds the primary key of the\n * related record.\n * @param {string} opts.localField The field that holds a reference to the\n * related record object.\n * @returns {Function} Invocation function, which accepts the target as the only\n * parameter.\n */\nexport const hasOne = function (related, opts) {\n  return function (mapper) {\n    return new HasOneRelation(related, opts).assignTo(mapper)\n  }\n}\n","import utils, { safeSetLink } from './utils'\nimport Component from './Component'\nimport Settable from './Settable'\nimport {\n  hasManyType,\n  hasOneType\n} from './decorators'\n\nconst DOMAIN = 'Record'\n\nconst superMethod = function (mapper, name) {\n  const store = mapper.datastore\n  if (store && store[name]) {\n    return function (...args) {\n      return store[name](mapper.name, ...args)\n    }\n  }\n  return mapper[name].bind(mapper)\n}\n\n// Cache these strings\nconst creatingPath = 'creating'\nconst noValidatePath = 'noValidate'\nconst keepChangeHistoryPath = 'keepChangeHistory'\nconst previousPath = 'previous'\n\n/**\n * js-data's Record class. An instance of `Record` corresponds to an in-memory\n * representation of a single row or document in a database, Firebase,\n * localstorage, etc. Basically, a `Record` instance represents whatever kind of\n * entity in your persistence layer that has a primary key.\n *\n * ```javascript\n * import {Record} from 'js-data'\n * ```\n *\n * @example <caption>Record#constructor</caption>\n * const JSData = require('js-data');\n * const { Record } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * // Instantiate a plain record\n * let record = new Record();\n * console.log('record: ' + JSON.stringify(record));\n *\n * // You can supply properties on instantiation\n * record = new Record({ name: 'John' });\n * console.log('record: ' + JSON.stringify(record));\n *\n * @example <caption>Record#constructor2</caption>\n * const JSData = require('js-data');\n * const { Mapper } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * // Instantiate a record that's associated with a Mapper:\n * const UserMapper = new Mapper({ name: 'user' });\n * const User = UserMapper.recordClass;\n * const user = UserMapper.createRecord({ name: 'John' });\n * const user2 = new User({ name: 'Sally' });\n * console.log('user: ' + JSON.stringify(user));\n * console.log('user2: ' + JSON.stringify(user2));\n *\n * @example <caption>Record#constructor3</caption>\n * const JSData = require('js-data');\n * const { Container } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * const store = new Container();\n * store.defineMapper('user');\n *\n * // Instantiate a record that's associated with a store's Mapper\n * const user = store.createRecord('user', { name: 'John' });\n * console.log('user: ' + JSON.stringify(user));\n *\n * @example <caption>Record#constructor4</caption>\n * const JSData = require('js-data');\n * const { Container } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * const store = new Container();\n * store.defineMapper('user', {\n *   schema: {\n *     properties: {\n *       name: { type: 'string' }\n *     }\n *   }\n * });\n *\n * // Validate on instantiation\n * const user = store.createRecord('user', { name: 1234 });\n * console.log('user: ' + JSON.stringify(user));\n *\n * @example <caption>Record#constructor5</caption>\n * const JSData = require('js-data');\n * const { Container } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * const store = new Container();\n * store.defineMapper('user', {\n *   schema: {\n *     properties: {\n *       name: { type: 'string' }\n *     }\n *   }\n * });\n *\n * // Skip validation on instantiation\n * const user = store.createRecord('user', { name: 1234 }, { noValidate: true });\n * console.log('user: ' + JSON.stringify(user));\n * console.log('user.isValid(): ' + user.isValid());\n *\n * @class Record\n * @extends Component\n * @param {object} [props] The initial properties of the new Record instance.\n * @param {object} [opts] Configuration options.\n * @param {boolean} [opts.noValidate=false] Whether to skip validation on the\n * initial properties.\n * @param {boolean} [opts.validateOnSet=true] Whether to enable setter\n * validation on properties after the Record has been initialized.\n * @since 3.0.0\n */\nfunction Record (props, opts) {\n  utils.classCallCheck(this, Record)\n  Settable.call(this)\n  props || (props = {})\n  opts || (opts = {})\n  const _set = this._set\n  const mapper = this.constructor.mapper\n\n  _set(creatingPath, true)\n  _set(noValidatePath, !!opts.noValidate)\n  _set(keepChangeHistoryPath, opts.keepChangeHistory === undefined ? (mapper ? mapper.keepChangeHistory : true) : opts.keepChangeHistory)\n\n  // Set the idAttribute value first, if it exists.\n  const id = mapper ? utils.get(props, mapper.idAttribute) : undefined\n  if (id !== undefined) {\n    utils.set(this, mapper.idAttribute, id)\n  }\n\n  utils.fillIn(this, props)\n  _set(creatingPath, false)\n  if (opts.validateOnSet !== undefined) {\n    _set(noValidatePath, !opts.validateOnSet)\n  } else if (mapper && mapper.validateOnSet !== undefined) {\n    _set(noValidatePath, !mapper.validateOnSet)\n  } else {\n    _set(noValidatePath, false)\n  }\n  _set(previousPath, mapper ? mapper.toJSON(props) : utils.plainCopy(props))\n}\n\nexport default Component.extend({\n  constructor: Record,\n\n  /**\n   * Returns the {@link Mapper} paired with this record's class, if any.\n   *\n   * @method Record#_mapper\n   * @returns {Mapper} The {@link Mapper} paired with this record's class, if any.\n   * @since 3.0.0\n   */\n  _mapper () {\n    const mapper = this.constructor.mapper\n    if (!mapper) {\n      throw utils.err(`${DOMAIN}#_mapper`, '')(404, 'mapper')\n    }\n    return mapper\n  },\n\n  /**\n   * Lifecycle hook.\n   *\n   * @method Record#afterLoadRelations\n   * @param {string[]} relations The `relations` argument passed to {@link Record#loadRelations}.\n   * @param {object} opts The `opts` argument passed to {@link Record#loadRelations}.\n   * @since 3.0.0\n   */\n  afterLoadRelations () {},\n\n  /**\n   * Lifecycle hook.\n   *\n   * @method Record#beforeLoadRelations\n   * @param {string[]} relations The `relations` argument passed to {@link Record#loadRelations}.\n   * @param {object} opts The `opts` argument passed to {@link Record#loadRelations}.\n   * @since 3.0.0\n   */\n  beforeLoadRelations () {},\n\n  /**\n   * Return the change history of this record since it was instantiated or\n   * {@link Record#commit} was called.\n   *\n   * @method Record#changeHistory\n   * @since 3.0.0\n   */\n  changeHistory () {\n    return (this._get('history') || []).slice()\n  },\n\n  /**\n   * Return changes to this record since it was instantiated or\n   * {@link Record#commit} was called.\n   *\n   * @example <caption>Record#changes</caption>\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new Container();\n   * store.defineMapper('user');\n   * const user = store.createRecord('user');\n   * console.log('user changes: ' + JSON.stringify(user.changes()));\n   * user.name = 'John';\n   * console.log('user changes: ' + JSON.stringify(user.changes()));\n   *\n   * @method Record#changes\n   * @param [opts] Configuration options.\n   * @param {Function} [opts.equalsFn={@link utils.deepEqual}] Equality function.\n   * @param {array} [opts.ignore=[]] Array of strings or RegExp of fields to ignore.\n   * @returns {Object} Object describing the changes to this record since it was\n   * instantiated or its {@link Record#commit} method was last called.\n   * @since 3.0.0\n   */\n  changes (opts) {\n    opts || (opts = {})\n    return utils.diffObjects(typeof this.toJSON === 'function' ? this.toJSON(opts) : this, this._get('previous'), opts)\n  },\n\n  /**\n   * Make the record's current in-memory state it's only state, with any\n   * previous property values being set to current values.\n   *\n   * @example <caption>Record#commit</caption>\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new Container();\n   * store.defineMapper('user');\n   * const user = store.createRecord('user');\n   * console.log('user hasChanges: ' + user.hasChanges());\n   * user.name = 'John';\n   * console.log('user hasChanges: ' + user.hasChanges());\n   * user.commit();\n   * console.log('user hasChanges: ' + user.hasChanges());\n   *\n   * @method Record#commit\n   * @param {object} [opts] Configuration options. Passed to {@link Record#toJSON}.\n   * @since 3.0.0\n   */\n  commit (opts) {\n    this._set('changed') // unset\n    this._set('changing', false)\n    this._set('history', []) // clear history\n    this._set('previous', this.toJSON(opts))\n  },\n\n  /**\n   * Call {@link Mapper#destroy} using this record's primary key.\n   *\n   * @example\n   * import { Container } from 'js-data';\n   * import { RethinkDBAdapter } from 'js-data-rethinkdb';\n   *\n   * const store = new Container();\n   * store.registerAdapter('rethink', new RethinkDBAdapter(), { default: true });\n   * store.defineMapper('user');\n   * store.find('user', 1234).then((user) => {\n   *   console.log(user.id); // 1234\n   *\n   *   // Destroy this user from the database\n   *   return user.destroy();\n   * });\n   *\n   * @method Record#destroy\n   * @param {object} [opts] Configuration options passed to {@link Mapper#destroy}.\n   * @returns {Promise} The result of calling {@link Mapper#destroy} with the\n   * primary key of this record.\n   * @since 3.0.0\n   */\n  destroy (opts) {\n    opts || (opts = {})\n    const mapper = this._mapper()\n    return superMethod(mapper, 'destroy')(utils.get(this, mapper.idAttribute), opts)\n  },\n\n  /**\n   * Return the value at the given path for this instance.\n   *\n   * @example <caption>Record#get</caption>\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   * const store = new Container();\n   * store.defineMapper('user');\n   *\n   * const user = store.createRecord('user', { name: 'Bob' });\n   * console.log('user.get(\"name\"): ' + user.get('name'));\n   *\n   * @method Record#get\n   * @param {string} key Path of value to retrieve.\n   * @returns {*} Value at path.\n   * @since 3.0.0\n   */\n  'get' (key) {\n    return utils.get(this, key)\n  },\n\n  /**\n   * Return whether this record has changed since it was instantiated or\n   * {@link Record#commit} was called.\n   *\n   * @example <caption>Record#hasChanges</caption>\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   * const store = new Container();\n   * store.defineMapper('user');\n   * const user = store.createRecord('user');\n   * console.log('user hasChanges: ' + user.hasChanges());\n   * user.name = 'John';\n   * console.log('user hasChanges: ' + user.hasChanges());\n   * user.commit();\n   * console.log('user hasChanges: ' + user.hasChanges());\n   *\n   * @method Record#hasChanges\n   * @param [opts] Configuration options.\n   * @param {Function} [opts.equalsFn={@link utils.deepEqual}] Equality function.\n   * @param {array} [opts.ignore=[]] Array of strings or RegExp of fields to ignore.\n   * @returns {boolean} Return whether the record has changed since it was\n   * instantiated or since its {@link Record#commit} method was called.\n   * @since 3.0.0\n   */\n  hasChanges (opts) {\n    const quickHasChanges = !!(this._get('changed') || []).length\n    return quickHasChanges || utils.areDifferent(typeof this.toJSON === 'function' ? this.toJSON(opts) : this, this._get('previous'), opts)\n  },\n\n  /**\n   * Return whether the record is unsaved. Records that have primary keys are\n   * considered \"saved\". Records without primary keys are considered \"unsaved\".\n   *\n   * @example <caption>Record#isNew</caption>\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   * const store = new Container();\n   * store.defineMapper('user');\n   * const user = store.createRecord('user', {\n   *   id: 1234\n   * });\n   * const user2 = store.createRecord('user');\n   * console.log('user isNew: ' + user.isNew()); // false\n   * console.log('user2 isNew: ' + user2.isNew()); // true\n   *\n   * @method Record#isNew\n   * @returns {boolean} Whether the record is unsaved.\n   * @since 3.0.0\n   */\n  isNew (opts) {\n    return utils.get(this, this._mapper().idAttribute) === undefined\n  },\n\n  /**\n   * Return whether the record in its current state passes validation.\n   *\n   * @example <caption>Record#isValid</caption>\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   * const store = new Container();\n   * store.defineMapper('user', {\n   *   schema: {\n   *     properties: {\n   *       name: { type: 'string' }\n   *     }\n   *   }\n   * });\n   * const user = store.createRecord('user', {\n   *   name: 1234\n   * }, {\n   *   noValidate: true // this allows us to put the record into an invalid state\n   * });\n   * console.log('user isValid: ' + user.isValid());\n   * user.name = 'John';\n   * console.log('user isValid: ' + user.isValid());\n   *\n   * @method Record#isValid\n   * @param {object} [opts] Configuration options. Passed to {@link Mapper#validate}.\n   * @returns {boolean} Whether the record in its current state passes\n   * validation.\n   * @since 3.0.0\n   */\n  isValid (opts) {\n    return !this._mapper().validate(this, opts)\n  },\n\n  removeInverseRelation (currentParent, id, inverseDef, idAttribute) {\n    if (inverseDef.type === hasOneType) {\n      safeSetLink(currentParent, inverseDef.localField, undefined)\n    } else if (inverseDef.type === hasManyType) {\n      // e.g. remove comment from otherPost.comments\n      const children = utils.get(currentParent, inverseDef.localField)\n      if (id === undefined) {\n        utils.remove(children, (child) => child === this)\n      } else {\n        utils.remove(children, (child) => child === this || id === utils.get(child, idAttribute))\n      }\n    }\n  },\n\n  setupInverseRelation (record, id, inverseDef, idAttribute) {\n    // Update (set) inverse relation\n    if (inverseDef.type === hasOneType) {\n      // e.g. someUser.profile = profile\n      safeSetLink(record, inverseDef.localField, this)\n    } else if (inverseDef.type === hasManyType) {\n      // e.g. add comment to somePost.comments\n      const children = utils.get(record, inverseDef.localField)\n      if (id === undefined) {\n        utils.noDupeAdd(children, this, (child) => child === this)\n      } else {\n        utils.noDupeAdd(children, this, (child) => child === this || id === utils.get(child, idAttribute))\n      }\n    }\n  },\n\n  /**\n   * Lazy load relations of this record, to be attached to the record once their\n   * loaded.\n   *\n   * @example\n   * import { Container } from 'js-data';\n   * import { RethinkDBAdapter } from 'js-data-rethinkdb';\n   *\n   * const store = new Container();\n   * store.registerAdapter('rethink', new RethinkDBAdapter(), { default: true });\n   * store.defineMapper('user', {\n   *   relations: {\n   *     hasMany: {\n   *       post: {\n   *         localField: 'posts',\n   *         foreignKey: 'user_id'\n   *       }\n   *     }\n   *   }\n   * });\n   * store.defineMapper('post', {\n   *   relations: {\n   *     belongsTo: {\n   *       user: {\n   *         localField: 'user',\n   *         foreignKey: 'user_id'\n   *       }\n   *     }\n   *   }\n   * });\n   * store.find('user', 1234).then((user) => {\n   *   console.log(user.id); // 1234\n   *\n   *   // Load the user's post relations\n   *   return user.loadRelations(['post']);\n   * }).then((user) => {\n   *   console.log(user.posts); // [{...}, {...}, ...]\n   * });\n   *\n   * @method Record#loadRelations\n   * @param {string[]} [relations] List of relations to load. Can use localField\n   * names or Mapper names to pick relations.\n   * @param {object} [opts] Configuration options.\n   * @returns {Promise} Resolves with the record, with the loaded relations now\n   * attached.\n   * @since 3.0.0\n   */\n  loadRelations (relations, opts) {\n    let op\n    const mapper = this._mapper()\n\n    // Default values for arguments\n    relations || (relations = [])\n    if (utils.isString(relations)) {\n      relations = [relations]\n    }\n    opts || (opts = {})\n    opts.with = relations\n\n    // Fill in \"opts\" with the Model's configuration\n    utils._(opts, mapper)\n    opts.adapter = mapper.getAdapterName(opts)\n\n    // beforeLoadRelations lifecycle hook\n    op = opts.op = 'beforeLoadRelations'\n    return utils.resolve(this[op](relations, opts)).then(() => {\n      // Now delegate to the adapter\n      op = opts.op = 'loadRelations'\n      mapper.dbg(op, this, relations, opts)\n      const tasks = []\n      let task\n      utils.forEachRelation(mapper, opts, (def, optsCopy) => {\n        const relatedMapper = def.getRelation()\n        optsCopy.raw = false\n        if (utils.isFunction(def.load)) {\n          task = def.load(mapper, def, this, opts)\n        } else if (def.type === 'hasMany' || def.type === 'hasOne') {\n          if (def.foreignKey) {\n            task = superMethod(relatedMapper, 'findAll')({\n              [def.foreignKey]: utils.get(this, mapper.idAttribute)\n            }, optsCopy).then(function (relatedData) {\n              if (def.type === 'hasOne') {\n                return relatedData.length ? relatedData[0] : undefined\n              }\n              return relatedData\n            })\n          } else if (def.localKeys) {\n            task = superMethod(relatedMapper, 'findAll')({\n              where: {\n                [relatedMapper.idAttribute]: {\n                  in: utils.get(this, def.localKeys)\n                }\n              }\n            })\n          } else if (def.foreignKeys) {\n            task = superMethod(relatedMapper, 'findAll')({\n              where: {\n                [def.foreignKeys]: {\n                  contains: utils.get(this, mapper.idAttribute)\n                }\n              }\n            }, opts)\n          }\n        } else if (def.type === 'belongsTo') {\n          const key = utils.get(this, def.foreignKey)\n          if (utils.isSorN(key)) {\n            task = superMethod(relatedMapper, 'find')(key, optsCopy)\n          }\n        }\n        if (task) {\n          task = task.then((relatedData) => {\n            def.setLocalField(this, relatedData)\n          })\n          tasks.push(task)\n        }\n      })\n      return Promise.all(tasks)\n    }).then(() => {\n      // afterLoadRelations lifecycle hook\n      op = opts.op = 'afterLoadRelations'\n      return utils.resolve(this[op](relations, opts)).then(() => this)\n    })\n  },\n\n  /**\n   * Return the properties with which this record was instantiated.\n   *\n   * @example <caption>Record#previous</caption>\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   * const store = new Container();\n   * store.defineMapper('user');\n   * const user = store.createRecord('user', {\n   *   name: 'William'\n   * });\n   * console.log('user previous: ' + JSON.stringify(user.previous()));\n   * user.name = 'Bob';\n   * console.log('user previous: ' + JSON.stringify(user.previous()));\n   * user.commit();\n   * console.log('user previous: ' + JSON.stringify(user.previous()));\n   *\n   * @method Record#previous\n   * @param {string} [key] If specified, return just the initial value of the\n   * given key.\n   * @returns {Object} The initial properties of this record.\n   * @since 3.0.0\n   */\n  previous (key) {\n    if (key) {\n      return this._get(`previous.${key}`)\n    }\n    return this._get('previous')\n  },\n\n  /**\n   * Revert changes to this record back to the properties it had when it was\n   * instantiated.\n   *\n   * @example <caption>Record#revert</caption>\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   * const store = new Container();\n   * store.defineMapper('user');\n   * const user = store.createRecord('user', {\n   *   name: 'William'\n   * });\n   * console.log('user: ' + JSON.stringify(user));\n   * user.name = 'Bob';\n   * console.log('user: ' + JSON.stringify(user));\n   * user.revert();\n   * console.log('user: ' + JSON.stringify(user));\n   *\n   * @method Record#revert\n   * @param {object} [opts] Configuration options.\n   * @param {string[]} [opts.preserve] Array of strings or Regular Expressions\n   * denoting properties that should not be reverted.\n   * @since 3.0.0\n   */\n  revert (opts) {\n    const previous = this._get('previous')\n    opts || (opts = {})\n    opts.preserve || (opts.preserve = [])\n    utils.forOwn(this, (value, key) => {\n      if (key !== this._mapper().idAttribute && !Object.hasOwnProperty.call(previous, key) && Object.hasOwnProperty.call(this, key) && opts.preserve.indexOf(key) === -1) {\n        delete this[key]\n      }\n    })\n    utils.forOwn(previous, (value, key) => {\n      if (opts.preserve.indexOf(key) === -1) {\n        this[key] = value\n      }\n    })\n    this.commit()\n  },\n\n  /**\n   * Delegates to {@link Mapper#create} or {@link Mapper#update}.\n   *\n   * @example\n   * import { Container } from 'js-data';\n   * import { RethinkDBAdapter } from 'js-data-rethinkdb';\n   *\n   * const store = new Container();\n   * store.registerAdapter('rethink', new RethinkDBAdapter(), { default: true });\n   * store.defineMapper('session');\n   * const session = store.createRecord('session', { topic: 'Node.js' });\n   *\n   * // Create a new record in the database\n   * session.save().then(() => {\n   *   console.log(session.id); // 1234\n   *\n   *   session.skill_level = 'beginner';\n   *\n   *   // Update the record in the database\n   *   return session.save();\n   * });\n   *\n   * @method Record#save\n   * @param {object} [opts] Configuration options. See {@link Mapper#create} and\n   * {@link Mapper#update}.\n   * @param {boolean} [opts.changesOnly] Equality function. Default uses `===`.\n   * @param {Function} [opts.equalsFn] Passed to {@link Record#changes} when\n   * `opts.changesOnly` is `true`.\n   * @param {array} [opts.ignore] Passed to {@link Record#changes} when\n   * `opts.changesOnly` is `true`.\n   * @returns {Promise} The result of calling {@link Mapper#create} or\n   * {@link Mapper#update}.\n   * @since 3.0.0\n   */\n  save (opts) {\n    opts || (opts = {})\n    const mapper = this._mapper()\n    const id = utils.get(this, mapper.idAttribute)\n    let props = this\n\n    const postProcess = (result) => {\n      const record = opts.raw ? result.data : result\n      if (record) {\n        utils.deepMixIn(this, record)\n        this.commit()\n      }\n      return result\n    }\n\n    if (id === undefined) {\n      return superMethod(mapper, 'create')(props, opts).then(postProcess)\n    }\n    if (opts.changesOnly) {\n      const changes = this.changes(opts)\n      props = {}\n      utils.fillIn(props, changes.added)\n      utils.fillIn(props, changes.changed)\n    }\n    return superMethod(mapper, 'update')(id, props, opts).then(postProcess)\n  },\n\n  /**\n   * Set the value for a given key, or the values for the given keys if \"key\" is\n   * an object. Triggers change events on those properties that have `track: true`\n   * in {@link Mapper#schema}.\n   *\n   * @example <caption>Record#set</caption>\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   * const store = new Container();\n   * store.defineMapper('user');\n   *\n   * const user = store.createRecord('user');\n   * console.log('user: ' + JSON.stringify(user));\n   *\n   * user.set('name', 'Bob');\n   * console.log('user: ' + JSON.stringify(user));\n   *\n   * user.set({ age: 30, role: 'admin' });\n   * console.log('user: ' + JSON.stringify(user));\n   *\n   * @fires Record#change\n   * @method Record#set\n   * @param {(string|Object)} key Key to set or hash of key-value pairs to set.\n   * @param {*} [value] Value to set for the given key.\n   * @param {object} [opts] Configuration options.\n   * @param {boolean} [opts.silent=false] Whether to trigger change events.\n   * @since 3.0.0\n   */\n  'set' (key, value, opts) {\n    if (utils.isObject(key)) {\n      opts = value\n    }\n    opts || (opts = {})\n    if (opts.silent) {\n      this._set('silent', true)\n    }\n    utils.set(this, key, value)\n    if (!this._get('eventId')) {\n      this._set('silent') // unset\n    }\n  },\n\n  /**\n   * Return a plain object representation of this record. If the class from\n   * which this record was created has a Mapper, then {@link Mapper#toJSON} will\n   * be called with this record instead.\n   *\n   * @example <caption>Record#toJSON</caption>\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   * const store = new Container();\n   * store.defineMapper('user', {\n   *   schema: {\n   *     properties: {\n   *       name: { type: 'string' }\n   *     }\n   *   }\n   * });\n   *\n   * const user = store.createRecord('user', {\n   *   name: 'John',\n   *   $$hashKey: '1234'\n   * });\n   * console.log('user: ' + JSON.stringify(user.toJSON()));\n   *\n   * @method Record#toJSON\n   * @param {object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Array of relation names or relation fields\n   * to include in the representation. Only available as an option if the class\n   * from which this record was created has a Mapper and this record resides in\n   * an instance of {@link DataStore}.\n   * @returns {Object} Plain object representation of this record.\n   * @since 3.0.0\n   */\n  toJSON (opts) {\n    const mapper = this.constructor.mapper\n    if (mapper) {\n      return mapper.toJSON(this, opts)\n    } else {\n      const json = {}\n      utils.forOwn(this, (prop, key) => {\n        json[key] = utils.plainCopy(prop)\n      })\n      return json\n    }\n  },\n\n  /**\n   * Unset the value for a given key. Triggers change events on those properties\n   * that have `track: true` in {@link Mapper#schema}.\n   *\n   * @example <caption>Record#unset</caption>\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   * const store = new Container();\n   * store.defineMapper('user');\n   *\n   * const user = store.createRecord('user', {\n   *   name: 'John'\n   * });\n   * console.log('user: ' + JSON.stringify(user));\n   *\n   * user.unset('name');\n   * console.log('user: ' + JSON.stringify(user));\n   *\n   * @method Record#unset\n   * @param {string} key Key to unset.\n   * @param {object} [opts] Configuration options.\n   * @param {boolean} [opts.silent=false] Whether to trigger change events.\n   * @since 3.0.0\n   */\n  unset (key, opts) {\n    this.set(key, undefined, opts)\n  },\n\n  /**\n   * Validate this record based on its current properties.\n   *\n   * @example <caption>Record#validate</caption>\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   * const store = new Container();\n   * store.defineMapper('user', {\n   *   schema: {\n   *     properties: {\n   *       name: { type: 'string' }\n   *     }\n   *   }\n   * });\n   * const user = store.createRecord('user', {\n   *   name: 1234\n   * }, {\n   *   noValidate: true // this allows us to put the record into an invalid state\n   * });\n   * console.log('user validation: ' + JSON.stringify(user.validate()));\n   * user.name = 'John';\n   * console.log('user validation: ' + user.validate());\n   *\n   * @method Record#validate\n   * @param {object} [opts] Configuration options. Passed to {@link Mapper#validate}.\n   * @returns {*} Array of errors or `undefined` if no errors.\n   * @since 3.0.0\n   */\n  validate (opts) {\n    return this._mapper().validate(this, opts)\n  }\n}, {\n  creatingPath,\n  noValidatePath,\n  keepChangeHistoryPath,\n  previousPath\n})\n\n/**\n * Allow records to emit events.\n *\n * An record's registered listeners are stored in the record's private data.\n */\nutils.eventify(\n  Record.prototype,\n  function () {\n    return this._get('events')\n  },\n  function (value) {\n    this._set('events', value)\n  }\n)\n\n/**\n * Fired when a record changes. Only works for records that have tracked fields.\n * See {@link Record~changeListener} on how to listen for this event.\n *\n * @event Record#change\n * @see Record~changeListener\n */\n\n/**\n * Callback signature for the {@link Record#event:change} event.\n *\n * @example\n * function onChange (record, changes) {\n *   // do something\n * }\n * record.on('change', onChange);\n *\n * @callback Record~changeListener\n * @param {Record} The Record that changed.\n * @param {object} The changes.\n * @see Record#event:change\n * @since 3.0.0\n */\n\n/**\n * Create a subclass of this Record:\n * @example <caption>Record.extend</caption>\n * const JSData = require('js-data');\n * const { Record } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * // Extend the class using ES2015 class syntax.\n * class CustomRecordClass extends Record {\n *   foo () { return 'bar'; }\n *   static beep () { return 'boop'; }\n * }\n * const customRecord = new CustomRecordClass();\n * console.log(customRecord.foo());\n * console.log(CustomRecordClass.beep());\n *\n * // Extend the class using alternate method.\n * const OtherRecordClass = Record.extend({\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const otherRecord = new OtherRecordClass();\n * console.log(otherRecord.foo());\n * console.log(OtherRecordClass.beep());\n *\n * // Extend the class, providing a custom constructor.\n * function AnotherRecordClass () {\n *   Record.call(this);\n *   this.created_at = new Date().getTime();\n * }\n * Record.extend({\n *   constructor: AnotherRecordClass,\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const anotherRecord = new AnotherRecordClass();\n * console.log(anotherRecord.created_at);\n * console.log(anotherRecord.foo());\n * console.log(AnotherRecordClass.beep());\n *\n * @method Record.extend\n * @param {object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {object} [props.constructor] Provide a custom constructor function\n * to be used as the subclass itself.\n * @param {object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this Record class.\n * @since 3.0.0\n */\n","export function sort (a, b, hashCode) {\n  // Short-circuit comparison if a and b are strictly equal\n  // This is absolutely necessary for indexed objects that\n  // don't have the idAttribute field\n  if (a === b) {\n    return 0\n  }\n  if (hashCode) {\n    a = hashCode(a)\n    b = hashCode(b)\n  }\n  if ((a === null && b === null) || (a === undefined && b === undefined)) {\n    return -1\n  }\n\n  if (a === null || a === undefined) {\n    return -1\n  }\n\n  if (b === null || b === undefined) {\n    return 1\n  }\n\n  if (a < b) {\n    return -1\n  }\n\n  if (a > b) {\n    return 1\n  }\n\n  return 0\n}\n\nexport function insertAt (array, index, value) {\n  array.splice(index, 0, value)\n  return array\n}\n\nexport function removeAt (array, index) {\n  array.splice(index, 1)\n  return array\n}\n\nexport function binarySearch (array, value, field) {\n  let lo = 0\n  let hi = array.length\n  let compared\n  let mid\n\n  while (lo < hi) {\n    mid = ((lo + hi) / 2) | 0\n    compared = sort(value, array[mid], field)\n    if (compared === 0) {\n      return {\n        found: true,\n        index: mid\n      }\n    } else if (compared < 0) {\n      hi = mid\n    } else {\n      lo = mid + 1\n    }\n  }\n\n  return {\n    found: false,\n    index: hi\n  }\n}\n","// Copyright (c) 2015, InternalFX.\n\n// Permission to use, copy, modify, and/or distribute this software for any purpose with or\n// without fee is hereby granted, provided that the above copyright notice and this permission\n// notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO\n// THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT\n// SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR\n// ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\n// OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE\n// USE OR PERFORMANCE OF THIS SOFTWARE.\n\n// Modifications\n// Copyright 2015-2016 Jason Dobry\n//\n// Summary of modifications:\n// Reworked dependencies so as to re-use code already in js-data\n// Removed unused code\nimport utils from '../../src/utils'\nimport { binarySearch, insertAt, removeAt } from './_utils'\n\nexport default function Index (fieldList, opts) {\n  utils.classCallCheck(this, Index)\n  fieldList || (fieldList = [])\n\n  if (!utils.isArray(fieldList)) {\n    throw new Error('fieldList must be an array.')\n  }\n\n  opts || (opts = {})\n  this.fieldList = fieldList\n  this.fieldGetter = opts.fieldGetter\n  this.hashCode = opts.hashCode\n  this.isIndex = true\n  this.keys = []\n  this.values = []\n}\n\nutils.addHiddenPropsToTarget(Index.prototype, {\n  'set' (keyList, value) {\n    if (!utils.isArray(keyList)) {\n      keyList = [keyList]\n    }\n\n    const key = keyList.shift() || undefined\n    const pos = binarySearch(this.keys, key)\n\n    if (keyList.length === 0) {\n      if (pos.found) {\n        const dataLocation = binarySearch(this.values[pos.index], value, this.hashCode)\n        if (!dataLocation.found) {\n          insertAt(this.values[pos.index], dataLocation.index, value)\n        }\n      } else {\n        insertAt(this.keys, pos.index, key)\n        insertAt(this.values, pos.index, [value])\n      }\n    } else {\n      if (pos.found) {\n        this.values[pos.index].set(keyList, value)\n      } else {\n        insertAt(this.keys, pos.index, key)\n        const newIndex = new Index([], { hashCode: this.hashCode })\n        newIndex.set(keyList, value)\n        insertAt(this.values, pos.index, newIndex)\n      }\n    }\n  },\n\n  'get' (keyList) {\n    if (!utils.isArray(keyList)) {\n      keyList = [keyList]\n    }\n\n    const key = keyList.shift() || undefined\n    const pos = binarySearch(this.keys, key)\n\n    if (keyList.length === 0) {\n      if (pos.found) {\n        if (this.values[pos.index].isIndex) {\n          return this.values[pos.index].getAll()\n        } else {\n          return this.values[pos.index].slice()\n        }\n      } else {\n        return []\n      }\n    } else {\n      if (pos.found) {\n        return this.values[pos.index].get(keyList)\n      } else {\n        return []\n      }\n    }\n  },\n\n  getAll (opts) {\n    opts || (opts = {})\n    let results = []\n    const values = this.values\n    if (opts.order === 'desc') {\n      for (let i = values.length - 1; i >= 0; i--) {\n        const value = values[i]\n        if (value.isIndex) {\n          results = results.concat(value.getAll(opts))\n        } else {\n          results = results.concat(value)\n        }\n      }\n    } else {\n      for (let i = 0; i < values.length; i++) {\n        const value = values[i]\n        if (value.isIndex) {\n          results = results.concat(value.getAll(opts))\n        } else {\n          results = results.concat(value)\n        }\n      }\n    }\n    return results\n  },\n\n  visitAll (cb, thisArg) {\n    this.values.forEach(function (value) {\n      if (value.isIndex) {\n        value.visitAll(cb, thisArg)\n      } else {\n        value.forEach(cb, thisArg)\n      }\n    })\n  },\n\n  between (leftKeys, rightKeys, opts) {\n    opts || (opts = {})\n    if (!utils.isArray(leftKeys)) {\n      leftKeys = [leftKeys]\n    }\n    if (!utils.isArray(rightKeys)) {\n      rightKeys = [rightKeys]\n    }\n    utils.fillIn(opts, {\n      leftInclusive: true,\n      rightInclusive: false,\n      limit: undefined,\n      offset: 0\n    })\n\n    const results = this._between(leftKeys, rightKeys, opts)\n\n    if (opts.limit) {\n      return results.slice(opts.offset, opts.limit + opts.offset)\n    } else {\n      return results.slice(opts.offset)\n    }\n  },\n\n  _between (leftKeys, rightKeys, opts) {\n    let results = []\n\n    const leftKey = leftKeys.shift()\n    const rightKey = rightKeys.shift()\n\n    let pos\n\n    if (leftKey !== undefined) {\n      pos = binarySearch(this.keys, leftKey)\n    } else {\n      pos = {\n        found: false,\n        index: 0\n      }\n    }\n\n    if (leftKeys.length === 0) {\n      if (pos.found && opts.leftInclusive === false) {\n        pos.index += 1\n      }\n\n      for (let i = pos.index; i < this.keys.length; i += 1) {\n        if (rightKey !== undefined) {\n          if (opts.rightInclusive) {\n            if (this.keys[i] > rightKey) { break }\n          } else {\n            if (this.keys[i] >= rightKey) { break }\n          }\n        }\n\n        if (this.values[i].isIndex) {\n          results = results.concat(this.values[i].getAll())\n        } else {\n          results = results.concat(this.values[i])\n        }\n\n        if (opts.limit) {\n          if (results.length >= (opts.limit + opts.offset)) {\n            break\n          }\n        }\n      }\n    } else {\n      for (let i = pos.index; i < this.keys.length; i += 1) {\n        const currKey = this.keys[i]\n        if (currKey > rightKey) { break }\n\n        if (this.values[i].isIndex) {\n          if (currKey === leftKey) {\n            results = results.concat(this.values[i]._between(utils.copy(leftKeys), rightKeys.map(function () { return undefined }), opts))\n          } else if (currKey === rightKey) {\n            results = results.concat(this.values[i]._between(leftKeys.map(function () { return undefined }), utils.copy(rightKeys), opts))\n          } else {\n            results = results.concat(this.values[i].getAll())\n          }\n        } else {\n          results = results.concat(this.values[i])\n        }\n\n        if (opts.limit) {\n          if (results.length >= (opts.limit + opts.offset)) {\n            break\n          }\n        }\n      }\n    }\n\n    if (opts.limit) {\n      return results.slice(0, opts.limit + opts.offset)\n    } else {\n      return results\n    }\n  },\n\n  peek () {\n    if (this.values.length) {\n      if (this.values[0].isIndex) {\n        return this.values[0].peek()\n      } else {\n        return this.values[0]\n      }\n    }\n    return []\n  },\n\n  clear () {\n    this.keys = []\n    this.values = []\n  },\n\n  insertRecord (data) {\n    const keyList = this.fieldList.map(function (field) {\n      if (utils.isFunction(field)) {\n        return field(data) || undefined\n      } else {\n        return data[field] || undefined\n      }\n    })\n    this.set(keyList, data)\n  },\n\n  removeRecord (data) {\n    let removed\n    const isUnique = this.hashCode(data) !== undefined\n    this.values.forEach((value, i) => {\n      if (value.isIndex) {\n        if (value.removeRecord(data)) {\n          if (value.keys.length === 0) {\n            removeAt(this.keys, i)\n            removeAt(this.values, i)\n          }\n          removed = true\n          return false\n        }\n      } else {\n        let dataLocation = {}\n        if (this.keys[i] === undefined || !isUnique) {\n          for (let j = value.length - 1; j >= 0; j--) {\n            if (value[j] === data) {\n              dataLocation = {\n                found: true,\n                index: j\n              }\n              break\n            }\n          }\n        } else if (isUnique) {\n          dataLocation = binarySearch(value, data, this.hashCode)\n        }\n        if (dataLocation.found) {\n          removeAt(value, dataLocation.index)\n          if (value.length === 0) {\n            removeAt(this.keys, i)\n            removeAt(this.values, i)\n          }\n          removed = true\n          return false\n        }\n      }\n    })\n    return removed ? data : undefined\n  },\n\n  updateRecord (data) {\n    const removed = this.removeRecord(data)\n    if (removed !== undefined) {\n      this.insertRecord(data)\n    }\n  }\n})\n","import utils from './utils'\nimport Component from './Component'\nimport Query from './Query'\nimport Record from './Record'\nimport Index from '../lib/mindex/index'\n\nconst { noValidatePath } = Record\n\nconst DOMAIN = 'Collection'\n\nconst COLLECTION_DEFAULTS = {\n  /**\n   * Whether to call {@link Record#commit} on records that are added to the\n   * collection and already exist in the collection.\n   *\n   * @name Collection#commitOnMerge\n   * @type {boolean}\n   * @default true\n   */\n  commitOnMerge: true,\n\n  /**\n   * Whether record events should bubble up and be emitted by the collection.\n   *\n   * @name Collection#emitRecordEvents\n   * @type {boolean}\n   * @default true\n   */\n  emitRecordEvents: true,\n\n  /**\n   * Field to be used as the unique identifier for records in this collection.\n   * Defaults to `\"id\"` unless {@link Collection#mapper} is set, in which case\n   * this will default to {@link Mapper#idAttribute}.\n   *\n   * @name Collection#idAttribute\n   * @type {string}\n   * @default \"id\"\n   */\n  idAttribute: 'id',\n\n  /**\n   * What to do when inserting a record into this Collection that shares a\n   * primary key with a record already in this Collection.\n   *\n   * Possible values:\n   * merge\n   * replace\n   * skip\n   *\n   * Merge:\n   *\n   * Recursively shallow copy properties from the new record onto the existing\n   * record.\n   *\n   * Replace:\n   *\n   * Shallow copy top-level properties from the new record onto the existing\n   * record. Any top-level own properties of the existing record that are _not_\n   * on the new record will be removed.\n   *\n   * Skip:\n   *\n   * Ignore new record, keep existing record.\n   *\n   * @name Collection#onConflict\n   * @type {string}\n   * @default \"merge\"\n   */\n  onConflict: 'merge'\n}\n\n/**\n * An ordered set of {@link Record} instances.\n *\n * @example <caption>Collection#constructor</caption>\n * // import { Collection, Record } from 'js-data';\n * const JSData = require('js-data');\n * const {Collection, Record} = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * const user1 = new Record({ id: 1 });\n * const user2 = new Record({ id: 2 });\n * const UserCollection = new Collection([user1, user2]);\n * console.log(UserCollection.get(1) === user1);\n *\n * @class Collection\n * @extends Component\n * @param {array} [records] Initial set of records to insert into the\n * collection.\n * @param {object} [opts] Configuration options.\n * @param {string} [opts.commitOnMerge] See {@link Collection#commitOnMerge}.\n * @param {string} [opts.idAttribute] See {@link Collection#idAttribute}.\n * @param {string} [opts.onConflict=\"merge\"] See {@link Collection#onConflict}.\n * @param {string} [opts.mapper] See {@link Collection#mapper}.\n * @since 3.0.0\n */\nfunction Collection (records, opts) {\n  utils.classCallCheck(this, Collection)\n  Component.call(this, opts)\n\n  if (records && !utils.isArray(records)) {\n    opts = records\n    records = []\n  }\n  if (utils.isString(opts)) {\n    opts = { idAttribute: opts }\n  }\n\n  // Default values for arguments\n  records || (records = [])\n  opts || (opts = {})\n\n  Object.defineProperties(this, {\n    /**\n     * Default Mapper for this collection. Optional. If a Mapper is provided, then\n     * the collection will use the {@link Mapper#idAttribute} setting, and will\n     * wrap records in {@link Mapper#recordClass}.\n     *\n     * @example <caption>Collection#mapper</caption>\n     * const JSData = require('js-data');\n     * const {Collection, Mapper} = JSData;\n     * console.log('Using JSData v' + JSData.version.full);\n     *\n     * class MyMapperClass extends Mapper {\n     *   foo () { return 'bar'; }\n     * }\n     * const myMapper = new MyMapperClass({ name: 'myMapper' });\n     * const collection = new Collection(null, { mapper: myMapper });\n     *\n     * @name Collection#mapper\n     * @type {Mapper}\n     * @default null\n     * @since 3.0.0\n     */\n    mapper: {\n      value: undefined,\n      writable: true\n    },\n    // Query class used by this collection\n    queryClass: {\n      value: undefined,\n      writable: true\n    }\n  })\n\n  // Apply user-provided configuration\n  utils.fillIn(this, opts)\n  // Fill in any missing options with the defaults\n  utils.fillIn(this, utils.copy(COLLECTION_DEFAULTS))\n\n  if (!this.queryClass) {\n    this.queryClass = Query\n  }\n\n  const idAttribute = this.recordId()\n\n  Object.defineProperties(this, {\n    /**\n     * The main index, which uses @{link Collection#recordId} as the key.\n     *\n     * @name Collection#index\n     * @type {Index}\n     */\n    index: {\n      value: new Index([idAttribute], {\n        hashCode (obj) {\n          return utils.get(obj, idAttribute)\n        }\n      })\n    },\n\n    /**\n     * Object that holds the secondary indexes of this collection.\n     *\n     * @name Collection#indexes\n     * @type {Object.<string, Index>}\n     */\n    indexes: {\n      value: {}\n    }\n  })\n\n  // Insert initial data into the collection\n  if (utils.isObject(records) || (utils.isArray(records) && records.length)) {\n    this.add(records)\n  }\n}\n\nexport default Component.extend({\n  constructor: Collection,\n\n  /**\n   * Used to bind to events emitted by records in this Collection.\n   *\n   * @method Collection#_onRecordEvent\n   * @since 3.0.0\n   * @private\n   * @param {...*} [arg] Args passed to {@link Collection#emit}.\n   */\n  _onRecordEvent (...args) {\n    if (this.emitRecordEvents) {\n      this.emit(...args)\n    }\n  },\n\n  /**\n   * Insert the provided record or records.\n   *\n   * If a record is already in the collection then the provided record will\n   * either merge with or replace the existing record based on the value of the\n   * `onConflict` option.\n   *\n   * The collection's secondary indexes will be updated as each record is\n   * visited.\n   *\n   * @method Collection#add\n   * @since 3.0.0\n   * @param {(Object|Object[]|Record|Record[])} data The record or records to insert.\n   * @param {object} [opts] Configuration options.\n   * @param {boolean} [opts.commitOnMerge=true] See {@link Collection#commitOnMerge}.\n   * @param {boolean} [opts.noValidate] See {@link Record#noValidate}.\n   * @param {string} [opts.onConflict] See {@link Collection#onConflict}.\n   * @returns {(Object|Object[]|Record|Record[])} The added record or records.\n   */\n  add (records, opts) {\n    // Default values for arguments\n    opts || (opts = {})\n\n    // Fill in \"opts\" with the Collection's configuration\n    utils._(opts, this)\n    records = this.beforeAdd(records, opts) || records\n\n    // Track whether just one record or an array of records is being inserted\n    let singular = false\n    const idAttribute = this.recordId()\n    if (!utils.isArray(records)) {\n      if (utils.isObject(records)) {\n        records = [records]\n        singular = true\n      } else {\n        throw utils.err(`${DOMAIN}#add`, 'records')(\n          400,\n          'object or array',\n          records\n        )\n      }\n    }\n\n    // Map the provided records to existing records.\n    // New records will be inserted. If any records map to existing records,\n    // they will be merged into the existing records according to the onConflict\n    // option.\n    records = records.map(record => {\n      const id = this.recordId(record)\n      // Grab existing record if there is one\n      const existing = id === undefined ? id : this.get(id)\n      // If the currently visited record is just a reference to an existing\n      // record, then there is nothing to be done. Exit early.\n      if (record === existing) {\n        return existing\n      }\n\n      if (existing) {\n        // Here, the currently visited record corresponds to a record already\n        // in the collection, so we need to merge them\n        const onConflict = opts.onConflict || this.onConflict\n        if (\n          onConflict !== 'merge' &&\n          onConflict !== 'replace' &&\n          onConflict !== 'skip'\n        ) {\n          throw utils.err(`${DOMAIN}#add`, 'opts.onConflict')(\n            400,\n            'one of (merge, replace, skip)',\n            onConflict,\n            true\n          )\n        }\n        const existingNoValidate = existing._get(noValidatePath)\n        if (opts.noValidate) {\n          // Disable validation\n          existing._set(noValidatePath, true)\n        }\n        if (onConflict === 'merge') {\n          utils.deepMixIn(existing, record)\n        } else if (onConflict === 'replace') {\n          utils.forOwn(existing, (value, key) => {\n            if (key !== idAttribute && record[key] === undefined) {\n              existing[key] = undefined\n            }\n          })\n          existing.set(record)\n        } // else if(onConflict === 'skip'){ do nothing }\n\n        if (opts.noValidate) {\n          // Restore previous `noValidate` value\n          existing._set(noValidatePath, existingNoValidate)\n        }\n        record = existing\n        if (opts.commitOnMerge && utils.isFunction(record.commit)) {\n          record.commit()\n        }\n        // Update all indexes in the collection\n        this.updateIndexes(record)\n      } else {\n        // Here, the currently visted record does not correspond to any record\n        // in the collection, so (optionally) instantiate this record and insert\n        // it into the collection\n        record = this.mapper ? this.mapper.createRecord(record, opts) : record\n        this.index.insertRecord(record)\n        utils.forOwn(this.indexes, function (index, name) {\n          index.insertRecord(record)\n        })\n        if (record && utils.isFunction(record.on)) {\n          record.on('all', this._onRecordEvent, this)\n        }\n      }\n      return record\n    })\n    // Finally, return the inserted data\n    const result = singular ? records[0] : records\n    if (!opts.silent) {\n      this.emit('add', result)\n    }\n    return this.afterAdd(records, opts, result) || result\n  },\n\n  /**\n   * Lifecycle hook called by {@link Collection#add}. If this method returns a\n   * value then {@link Collection#add} will return that same value.\n   *\n   * @method Collection#method\n   * @since 3.0.0\n   * @param {(Object|Object[]|Record|Record[])} result The record or records\n   * that were added to this Collection by {@link Collection#add}.\n   * @param {object} opts The `opts` argument passed to {@link Collection#add}.\n   */\n  afterAdd () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#remove}. If this method returns\n   * a value then {@link Collection#remove} will return that same value.\n   *\n   * @method Collection#afterRemove\n   * @since 3.0.0\n   * @param {(string|number)} id The `id` argument passed to {@link Collection#remove}.\n   * @param {object} opts The `opts` argument passed to {@link Collection#remove}.\n   * @param {object} record The result that will be returned by {@link Collection#remove}.\n   */\n  afterRemove () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#removeAll}. If this method\n   * returns a value then {@link Collection#removeAll} will return that same\n   * value.\n   *\n   * @method Collection#afterRemoveAll\n   * @since 3.0.0\n   * @param {object} query The `query` argument passed to {@link Collection#removeAll}.\n   * @param {object} opts The `opts` argument passed to {@link Collection#removeAll}.\n   * @param {object} records The result that will be returned by {@link Collection#removeAll}.\n   */\n  afterRemoveAll () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#add}. If this method returns a\n   * value then the `records` argument in {@link Collection#add} will be\n   * re-assigned to the returned value.\n   *\n   * @method Collection#beforeAdd\n   * @since 3.0.0\n   * @param {(Object|Object[]|Record|Record[])} records The `records` argument passed to {@link Collection#add}.\n   * @param {object} opts The `opts` argument passed to {@link Collection#add}.\n   */\n  beforeAdd () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#remove}.\n   *\n   * @method Collection#beforeRemove\n   * @since 3.0.0\n   * @param {(string|number)} id The `id` argument passed to {@link Collection#remove}.\n   * @param {object} opts The `opts` argument passed to {@link Collection#remove}.\n   */\n  beforeRemove () {},\n\n  /**\n   * Lifecycle hook called by {@link Collection#removeAll}.\n   *\n   * @method Collection#beforeRemoveAll\n   * @since 3.0.0\n   * @param {object} query The `query` argument passed to {@link Collection#removeAll}.\n   * @param {object} opts The `opts` argument passed to {@link Collection#removeAll}.\n   */\n  beforeRemoveAll () {},\n\n  /**\n   * Find all records between two boundaries.\n   *\n   * Shortcut for `collection.query().between(18, 30, { index: 'age' }).run()`\n   *\n   * @example\n   * // Get all users ages 18 to 30\n   * const users = collection.between(18, 30, { index: 'age' });\n   *\n   * @example\n   * // Same as above\n   * const users = collection.between([18], [30], { index: 'age' });\n   *\n   * @method Collection#between\n   * @since 3.0.0\n   * @param {array} leftKeys Keys defining the left boundary.\n   * @param {array} rightKeys Keys defining the right boundary.\n   * @param {object} [opts] Configuration options.\n   * @param {string} [opts.index] Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @param {boolean} [opts.leftInclusive=true] Whether to include records\n   * on the left boundary.\n   * @param {boolean} [opts.rightInclusive=false] Whether to include records\n   * on the left boundary.\n   * @param {boolean} [opts.limit] Limit the result to a certain number.\n   * @param {boolean} [opts.offset] The number of resulting records to skip.\n   * @returns {Object[]|Record[]} The result.\n   */\n  between (leftKeys, rightKeys, opts) {\n    return this.query()\n      .between(leftKeys, rightKeys, opts)\n      .run()\n  },\n\n  /**\n   * Create a new secondary index on the contents of the collection.\n   *\n   * @example\n   * // Index users by age\n   * collection.createIndex('age');\n   *\n   * @example\n   * // Index users by status and role\n   * collection.createIndex('statusAndRole', ['status', 'role']);\n   *\n   * @method Collection#createIndex\n   * @since 3.0.0\n   * @param {string} name The name of the new secondary index.\n   * @param {string[]} [fieldList] Array of field names to use as the key or\n   * compound key of the new secondary index. If no fieldList is provided, then\n   * the name will also be the field that is used to index the collection.\n   */\n  createIndex (name, fieldList, opts) {\n    if (utils.isString(name) && fieldList === undefined) {\n      fieldList = [name]\n    }\n    opts || (opts = {})\n    opts.hashCode || (opts.hashCode = obj => this.recordId(obj))\n    const index = (this.indexes[name] = new Index(fieldList, opts))\n    this.index.visitAll(index.insertRecord, index)\n  },\n\n  /**\n   * Find the record or records that match the provided query or pass the\n   * provided filter function.\n   *\n   * Shortcut for `collection.query().filter(queryOrFn[, thisArg]).run()`\n   *\n   * @example <caption>Collection#filter</caption>\n   * const JSData = require('js-data');\n   * const { Collection } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const collection = new Collection([\n   *   { id: 1, status: 'draft', created_at_timestamp: new Date().getTime() }\n   * ]);\n   *\n   * // Get the draft posts created less than three months ago\n   * let posts = collection.filter({\n   *   where: {\n   *     status: {\n   *       '==': 'draft'\n   *     },\n   *     created_at_timestamp: {\n   *       '>=': (new Date().getTime() - (1000 \\* 60 \\* 60 \\* 24 \\* 30 \\* 3)) // 3 months ago\n   *     }\n   *   }\n   * });\n   * console.log(posts);\n   *\n   * // Use a custom filter function\n   * posts = collection.filter((post) => post.id % 2 === 0);\n   *\n   * @method Collection#filter\n   * @param {(Object|Function)} [queryOrFn={}] Selection query or filter\n   * function.\n   * @param {object} [thisArg] Context to which to bind `queryOrFn` if\n   * `queryOrFn` is a function.\n   * @returns {Array} The result.\n   * @see query\n   * @since 3.0.0\n   */\n  filter (query, thisArg) {\n    return this.query()\n      .filter(query, thisArg)\n      .run()\n  },\n\n  /**\n   * Iterate over all records.\n   *\n   * @example\n   * collection.forEach(function (record) {\n   *   // do something\n   * });\n   *\n   * @method Collection#forEach\n   * @since 3.0.0\n   * @param {Function} forEachFn Iteration function.\n   * @param {*} [thisArg] Context to which to bind `forEachFn`.\n   * @returns {Array} The result.\n   */\n  forEach (cb, thisArg) {\n    this.index.visitAll(cb, thisArg)\n  },\n\n  /**\n   * Get the record with the given id.\n   *\n   * @method Collection#get\n   * @since 3.0.0\n   * @param {(string|number)} id The primary key of the record to get.\n   * @returns {(Object|Record)} The record with the given id.\n   */\n  get (id) {\n    const instances =\n      id === undefined\n        ? []\n        : this.query()\n          .get(id)\n          .run()\n    return instances.length ? instances[0] : undefined\n  },\n\n  /**\n   * Find the record or records that match the provided keyLists.\n   *\n   * Shortcut for `collection.query().getAll(keyList1, keyList2, ...).run()`\n   *\n   * @example\n   * // Get the posts where \"status\" is \"draft\" or \"inReview\"\n   * const posts = collection.getAll('draft', 'inReview', { index: 'status' });\n   *\n   * @example\n   * // Same as above\n   * const posts = collection.getAll(['draft'], ['inReview'], { index: 'status' });\n   *\n   * @method Collection#getAll\n   * @since 3.0.0\n   * @param {...Array} [keyList] Provide one or more keyLists, and all\n   * records matching each keyList will be retrieved. If no keyLists are\n   * provided, all records will be returned.\n   * @param {object} [opts] Configuration options.\n   * @param {string} [opts.index] Name of the secondary index to use in the\n   * query. If no index is specified, the main index is used.\n   * @returns {Array} The result.\n   */\n  getAll (...args) {\n    return this.query()\n      .getAll(...args)\n      .run()\n  },\n\n  /**\n   * Return the index with the given name. If no name is provided, return the\n   * main index. Throws an error if the specified index does not exist.\n   *\n   * @method Collection#getIndex\n   * @since 3.0.0\n   * @param {string} [name] The name of the index to retrieve.\n   */\n  getIndex (name) {\n    const index = name ? this.indexes[name] : this.index\n    if (!index) {\n      throw utils.err(`${DOMAIN}#getIndex`, name)(404, 'index')\n    }\n    return index\n  },\n\n  /**\n   * Limit the result.\n   *\n   * Shortcut for `collection.query().limit(maximumNumber).run()`\n   *\n   * @example\n   * const posts = collection.limit(10);\n   *\n   * @method Collection#limit\n   * @since 3.0.0\n   * @param {number} num The maximum number of records to keep in the result.\n   * @returns {Array} The result.\n   */\n  limit (num) {\n    return this.query()\n      .limit(num)\n      .run()\n  },\n\n  /**\n   * Apply a mapping function to all records.\n   *\n   * @example\n   * const names = collection.map((user) => user.name);\n   *\n   * @method Collection#map\n   * @since 3.0.0\n   * @param {Function} mapFn Mapping function.\n   * @param {*} [thisArg] Context to which to bind `mapFn`.\n   * @returns {Array} The result of the mapping.\n   */\n  map (cb, thisArg) {\n    const data = []\n    this.index.visitAll(function (value) {\n      data.push(cb.call(thisArg, value))\n    })\n    return data\n  },\n\n  /**\n   * Return the result of calling the specified function on each record in this\n   * collection's main index.\n   *\n   * @method Collection#mapCall\n   * @since 3.0.0\n   * @param {string} funcName Name of function to call\n   * @parama {...*} [args] Remaining arguments to be passed to the function.\n   * @returns {Array} The result.\n   */\n  mapCall (funcName, ...args) {\n    const data = []\n    this.index.visitAll(function (record) {\n      data.push(record[funcName](...args))\n    })\n    return data\n  },\n\n  /**\n   * Return all \"unsaved\" (not uniquely identifiable) records in this colleciton.\n   *\n   * @method Collection#prune\n   * @param {object} [opts] Configuration options, passed to {@link Collection#removeAll}.\n   * @since 3.0.0\n   * @returns {Array} The removed records, if any.\n   */\n  prune (opts) {\n    return this.removeAll(this.unsaved(), opts)\n  },\n\n  /**\n   * Create a new query to be executed against the contents of the collection.\n   * The result will be all or a subset of the contents of the collection.\n   *\n   * @example\n   * // Grab page 2 of users between ages 18 and 30\n   * collection.query()\n   *   .between(18, 30, { index: 'age' }) // between ages 18 and 30\n   *   .skip(10) // second page\n   *   .limit(10) // page size\n   *   .run();\n   *\n   * @method Collection#query\n   * @since 3.0.0\n   * @returns {Query} New query object.\n   */\n  query () {\n    const Ctor = this.queryClass\n    return new Ctor(this)\n  },\n\n  /**\n   * Return the primary key of the given, or if no record is provided, return the\n   * name of the field that holds the primary key of records in this Collection.\n   *\n   * @method Collection#recordId\n   * @since 3.0.0\n   * @param {(Object|Record)} [record] The record whose primary key is to be\n   * returned.\n   * @returns {(string|number)} Primary key or name of field that holds primary\n   * key.\n   */\n  recordId (record) {\n    if (record) {\n      return utils.get(record, this.recordId())\n    }\n    return this.mapper ? this.mapper.idAttribute : this.idAttribute\n  },\n\n  /**\n   * Reduce the data in the collection to a single value and return the result.\n   *\n   * @example\n   * const totalVotes = collection.reduce((prev, record) => {\n   *   return prev + record.upVotes + record.downVotes;\n   * }, 0);\n   *\n   * @method Collection#reduce\n   * @since 3.0.0\n   * @param {Function} cb Reduction callback.\n   * @param {*} initialValue Initial value of the reduction.\n   * @returns {*} The result.\n   */\n  reduce (cb, initialValue) {\n    const data = this.getAll()\n    return data.reduce(cb, initialValue)\n  },\n\n  /**\n   * Remove the record with the given id from this Collection.\n   *\n   * @method Collection#remove\n   * @since 3.0.0\n   * @param {(string|number|object|Record)} idOrRecord The primary key of the\n   * record to be removed, or a reference to the record that is to be removed.\n   * @param {object} [opts] Configuration options.\n   * @returns {Object|Record} The removed record, if any.\n   */\n  remove (idOrRecord, opts) {\n    // Default values for arguments\n    opts || (opts = {})\n    this.beforeRemove(idOrRecord, opts)\n    let record = utils.isSorN(idOrRecord) ? this.get(idOrRecord) : idOrRecord\n\n    // The record is in the collection, remove it\n    if (utils.isObject(record)) {\n      record = this.index.removeRecord(record)\n      if (record) {\n        utils.forOwn(this.indexes, function (index, name) {\n          index.removeRecord(record)\n        })\n        if (utils.isFunction(record.off)) {\n          record.off('all', this._onRecordEvent, this)\n        }\n        if (!opts.silent) {\n          this.emit('remove', record)\n        }\n      }\n    }\n    return this.afterRemove(idOrRecord, opts, record) || record\n  },\n\n  /**\n   * Remove from this collection the given records or the records selected by\n   * the given \"query\".\n   *\n   * @method Collection#removeAll\n   * @since 3.0.0\n   * @param {Object|Object[]|Record[]} [queryOrRecords={}] Records to be removed or selection query. See {@link query}.\n   * @param {object} [queryOrRecords.where] See {@link query.where}.\n   * @param {number} [queryOrRecords.offset] See {@link query.offset}.\n   * @param {number} [queryOrRecords.limit] See {@link query.limit}.\n   * @param {string|Array[]} [queryOrRecords.orderBy] See {@link query.orderBy}.\n   * @param {object} [opts] Configuration options.\n   * @returns {(Object[]|Record[])} The removed records, if any.\n   */\n  removeAll (queryOrRecords, opts) {\n    // Default values for arguments\n    opts || (opts = {})\n    this.beforeRemoveAll(queryOrRecords, opts)\n    let records = utils.isArray(queryOrRecords)\n      ? queryOrRecords.slice()\n      : this.filter(queryOrRecords)\n\n    // Remove each selected record from the collection\n    const optsCopy = utils.plainCopy(opts)\n    optsCopy.silent = true\n    records = records\n      .map(record => this.remove(record, optsCopy))\n      .filter(record => record)\n    if (!opts.silent) {\n      this.emit('remove', records)\n    }\n    return this.afterRemoveAll(queryOrRecords, opts, records) || records\n  },\n\n  /**\n   * Skip a number of results.\n   *\n   * Shortcut for `collection.query().skip(numberToSkip).run()`\n   *\n   * @example\n   * const posts = collection.skip(10);\n   *\n   * @method Collection#skip\n   * @since 3.0.0\n   * @param {number} num The number of records to skip.\n   * @returns {Array} The result.\n   */\n  skip (num) {\n    return this.query()\n      .skip(num)\n      .run()\n  },\n\n  /**\n   * Return the plain JSON representation of all items in this collection.\n   * Assumes records in this collection have a toJSON method.\n   *\n   * @method Collection#toJSON\n   * @since 3.0.0\n   * @param {object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Array of relation names or relation fields\n   * to include in the representation.\n   * @returns {Array} The records.\n   */\n  toJSON (opts) {\n    return this.mapCall('toJSON', opts)\n  },\n\n  /**\n   * Return all \"unsaved\" (not uniquely identifiable) records in this colleciton.\n   *\n   * @method Collection#unsaved\n   * @since 3.0.0\n   * @returns {Array} The unsaved records, if any.\n   */\n  unsaved (opts) {\n    return this.index.get()\n  },\n\n  /**\n   * Update a record's position in a single index of this collection. See\n   * {@link Collection#updateIndexes} to update a record's position in all\n   * indexes at once.\n   *\n   * @method Collection#updateIndex\n   * @since 3.0.0\n   * @param {object} record The record to update.\n   * @param {object} [opts] Configuration options.\n   * @param {string} [opts.index] The index in which to update the record's\n   * position. If you don't specify an index then the record will be updated\n   * in the main index.\n   */\n  updateIndex (record, opts) {\n    opts || (opts = {})\n    this.getIndex(opts.index).updateRecord(record)\n  },\n\n  /**\n   * Updates all indexes in this collection for the provided record. Has no\n   * effect if the record is not in the collection.\n   *\n   * @method Collection#updateIndexes\n   * @since 3.0.0\n   * @param {object} record TODO\n   */\n  updateIndexes (record) {\n    this.index.updateRecord(record)\n    utils.forOwn(this.indexes, function (index, name) {\n      index.updateRecord(record)\n    })\n  }\n})\n\n/**\n * Fired when a record changes. Only works for records that have tracked changes.\n * See {@link Collection~changeListener} on how to listen for this event.\n *\n * @event Collection#change\n * @see Collection~changeListener\n */\n\n/**\n * Callback signature for the {@link Collection#event:change} event.\n *\n * @example\n * function onChange (record, changes) {\n *   // do something\n * }\n * collection.on('change', onChange);\n *\n * @callback Collection~changeListener\n * @param {Record} The Record that changed.\n * @param {object} The changes.\n * @see Collection#event:change\n * @since 3.0.0\n */\n\n/**\n * Fired when one or more records are added to the Collection. See\n * {@link Collection~addListener} on how to listen for this event.\n *\n * @event Collection#add\n * @see Collection~addListener\n * @see Collection#event:add\n * @see Collection#add\n */\n\n/**\n * Callback signature for the {@link Collection#event:add} event.\n *\n * @example\n * function onAdd (recordOrRecords) {\n *   // do something\n * }\n * collection.on('add', onAdd);\n *\n * @callback Collection~addListener\n * @param {Record|Record[]} The Record or Records that were added.\n * @see Collection#event:add\n * @see Collection#add\n * @since 3.0.0\n */\n\n/**\n * Fired when one or more records are removed from the Collection. See\n * {@link Collection~removeListener} for how to listen for this event.\n *\n * @event Collection#remove\n * @see Collection~removeListener\n * @see Collection#event:remove\n * @see Collection#remove\n * @see Collection#removeAll\n */\n\n/**\n * Callback signature for the {@link Collection#event:remove} event.\n *\n * @example\n * function onRemove (recordsOrRecords) {\n *   // do something\n * }\n * collection.on('remove', onRemove);\n *\n * @callback Collection~removeListener\n * @param {Record|Record[]} Record or Records that were removed.\n * @see Collection#event:remove\n * @see Collection#remove\n * @see Collection#removeAll\n * @since 3.0.0\n */\n\n/**\n * Create a subclass of this Collection:\n * @example <caption>Collection.extend</caption>\n * const JSData = require('js-data');\n * const { Collection } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * // Extend the class using ES2015 class syntax.\n * class CustomCollectionClass extends Collection {\n *   foo () { return 'bar'; }\n *   static beep () { return 'boop'; }\n * }\n * const customCollection = new CustomCollectionClass();\n * console.log(customCollection.foo());\n * console.log(CustomCollectionClass.beep());\n *\n * // Extend the class using alternate method.\n * const OtherCollectionClass = Collection.extend({\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const otherCollection = new OtherCollectionClass();\n * console.log(otherCollection.foo());\n * console.log(OtherCollectionClass.beep());\n *\n * // Extend the class, providing a custom constructor.\n * function AnotherCollectionClass () {\n *   Collection.call(this);\n *   this.created_at = new Date().getTime();\n * }\n * Collection.extend({\n *   constructor: AnotherCollectionClass,\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const anotherCollection = new AnotherCollectionClass();\n * console.log(anotherCollection.created_at);\n * console.log(anotherCollection.foo());\n * console.log(AnotherCollectionClass.beep());\n *\n * @method Collection.extend\n * @param {object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {object} [props.constructor] Provide a custom constructor function\n * to be used as the subclass itself.\n * @param {object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this Collection class.\n * @since 3.0.0\n */\n","import utils from './utils'\nimport Component from './Component'\n\nconst DOMAIN = 'Schema'\n\n/**\n * A function map for each of the seven primitive JSON types defined by the core specification.\n * Each function will check a given value and return true or false if the value is an instance of that type.\n * ```\n *   types.integer(1) // returns true\n *   types.string({}) // returns false\n * ```\n * http://json-schema.org/latest/json-schema-core.html#anchor8\n * @name Schema.types\n * @type {object}\n */\nconst types = {\n  array: utils.isArray,\n  boolean: utils.isBoolean,\n  integer: utils.isInteger,\n  null: utils.isNull,\n  number: utils.isNumber,\n  object: utils.isObject,\n  string: utils.isString\n}\n\n/**\n * @ignore\n */\nconst segmentToString = function (segment, prev) {\n  let str = ''\n  if (segment) {\n    if (utils.isNumber(segment)) {\n      str += `[${segment}]`\n    } else if (prev) {\n      str += `.${segment}`\n    } else {\n      str += `${segment}`\n    }\n  }\n  return str\n}\n\n/**\n * @ignore\n */\nconst makePath = function (opts) {\n  opts || (opts = {})\n  let path = ''\n  const segments = opts.path || []\n  segments.forEach(function (segment) {\n    path += segmentToString(segment, path)\n  })\n  path += segmentToString(opts.prop, path)\n  return path\n}\n\n/**\n * @ignore\n */\nconst makeError = function (actual, expected, opts) {\n  return {\n    expected,\n    actual: '' + actual,\n    path: makePath(opts)\n  }\n}\n\n/**\n * @ignore\n */\nconst addError = function (actual, expected, opts, errors) {\n  errors.push(makeError(actual, expected, opts))\n}\n\n/**\n * @ignore\n */\nconst maxLengthCommon = function (keyword, value, schema, opts) {\n  const max = schema[keyword]\n  if (value.length > max) {\n    return makeError(value.length, `length no more than ${max}`, opts)\n  }\n}\n\n/**\n * @ignore\n */\nconst minLengthCommon = function (keyword, value, schema, opts) {\n  const min = schema[keyword]\n  if (value.length < min) {\n    return makeError(value.length, `length no less than ${min}`, opts)\n  }\n}\n\n/**\n * A map of all object member validation functions for each keyword defined in the JSON Schema.\n * @name Schema.validationKeywords\n * @type {object}\n */\nconst validationKeywords = {\n  /**\n   * Validates the provided value against all schemas defined in the Schemas `allOf` keyword.\n   * The instance is valid against if and only if it is valid against all the schemas declared in the Schema's value.\n   *\n   * The value of this keyword MUST be an array. This array MUST have at least one element.\n   * Each element of this array MUST be a valid JSON Schema.\n   *\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor82\n   *\n   * @name Schema.validationKeywords.allOf\n   * @method\n   * @param {*} value Value to be validated.\n   * @param {object} schema Schema containing the `allOf` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  allOf (value, schema, opts) {\n    let allErrors = []\n    schema.allOf.forEach(function (_schema) {\n      allErrors = allErrors.concat(validate(value, _schema, opts) || [])\n    })\n    return allErrors.length ? allErrors : undefined\n  },\n\n  /**\n   * Validates the provided value against all schemas defined in the Schemas `anyOf` keyword.\n   * The instance is valid against this keyword if and only if it is valid against\n   * at least one of the schemas in this keyword's value.\n   *\n   * The value of this keyword MUST be an array. This array MUST have at least one element.\n   * Each element of this array MUST be an object, and each object MUST be a valid JSON Schema.\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor85\n   *\n   * @name Schema.validationKeywords.anyOf\n   * @method\n   * @param {*} value Value to be validated.\n   * @param {object} schema Schema containing the `anyOf` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  anyOf (value, schema, opts) {\n    let validated = false\n    let allErrors = []\n    schema.anyOf.forEach(function (_schema) {\n      const errors = validate(value, _schema, opts)\n      if (errors) {\n        allErrors = allErrors.concat(errors)\n      } else {\n        validated = true\n      }\n    })\n    return validated ? undefined : allErrors\n  },\n\n  /**\n   * http://json-schema.org/latest/json-schema-validation.html#anchor70\n   *\n   * @name Schema.validationKeywords.dependencies\n   * @method\n   * @param {*} value TODO\n   * @param {object} schema TODO\n   * @param {object} opts TODO\n   */\n  dependencies (value, schema, opts) {\n    // TODO\n  },\n\n  /**\n   * Validates the provided value against an array of possible values defined by the Schema's `enum` keyword\n   * Validation succeeds if the value is deeply equal to one of the values in the array.\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor76\n   *\n   * @name Schema.validationKeywords.enum\n   * @method\n   * @param {*} value Value to validate\n   * @param {object} schema Schema containing the `enum` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  enum (value, schema, opts) {\n    const possibleValues = schema.enum\n    if (utils.findIndex(possibleValues, (item) => utils.deepEqual(item, value)) === -1) {\n      return makeError(value, `one of (${possibleValues.join(', ')})`, opts)\n    }\n  },\n\n  /**\n   * Validates each of the provided array values against a schema or an array of schemas defined by the Schema's `items` keyword\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor37 for validation rules.\n   *\n   * @name Schema.validationKeywords.items\n   * @method\n   * @param {*} value Array to be validated.\n   * @param {object} schema Schema containing the items keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  items (value, schema, opts) {\n    opts || (opts = {})\n    // TODO: additionalItems\n    let items = schema.items\n    let errors = []\n    const checkingTuple = utils.isArray(items)\n    const length = value.length\n    for (var prop = 0; prop < length; prop++) {\n      if (checkingTuple) {\n        // Validating a tuple, instead of just checking each item against the\n        // same schema\n        items = schema.items[prop]\n      }\n      opts.prop = prop\n      errors = errors.concat(validate(value[prop], items, opts) || [])\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * Validates the provided number against a maximum value defined by the Schema's `maximum` keyword\n   * Validation succeeds if the value is a number, and is less than, or equal to, the value of this keyword.\n   * http://json-schema.org/latest/json-schema-validation.html#anchor17\n   *\n   * @name Schema.validationKeywords.maximum\n   * @method\n   * @param {*} value Number to validate against the keyword.\n   * @param {object} schema Schema containing the `maximum` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  maximum (value, schema, opts) {\n    // Must be a number\n    const maximum = schema.maximum\n    // Must be a boolean\n    // Depends on maximum\n    // default: false\n    const exclusiveMaximum = schema.exclusiveMaximum\n    if (typeof value === typeof maximum && !(exclusiveMaximum ? maximum > value : maximum >= value)) {\n      return exclusiveMaximum\n        ? makeError(value, `no more than nor equal to ${maximum}`, opts)\n        : makeError(value, `no more than ${maximum}`, opts)\n    }\n  },\n\n  /**\n   * Validates the length of the provided array against a maximum value defined by the Schema's `maxItems` keyword.\n   * Validation succeeds if the length of the array is less than, or equal to the value of this keyword.\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor42\n   *\n   * @name Schema.validationKeywords.maxItems\n   * @method\n   * @param {*} value Array to be validated.\n   * @param {object} schema Schema containing the `maxItems` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  maxItems (value, schema, opts) {\n    if (utils.isArray(value)) {\n      return maxLengthCommon('maxItems', value, schema, opts)\n    }\n  },\n\n  /**\n   * Validates the length of the provided string against a maximum value defined in the Schema's `maxLength` keyword.\n   * Validation succeeds if the length of the string is less than, or equal to the value of this keyword.\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor26\n   *\n   * @name Schema.validationKeywords.maxLength\n   * @method\n   * @param {*} value String to be validated.\n   * @param {object} schema Schema containing the `maxLength` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  maxLength (value, schema, opts) {\n    return maxLengthCommon('maxLength', value, schema, opts)\n  },\n\n  /**\n   * Validates the count of the provided object's properties against a maximum value defined in the Schema's `maxProperties` keyword.\n   * Validation succeeds if the object's property count is less than, or equal to the value of this keyword.\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor54\n   *\n   * @name Schema.validationKeywords.maxProperties\n   * @method\n   * @param {*} value Object to be validated.\n   * @param {object} schema Schema containing the `maxProperties` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  maxProperties (value, schema, opts) {\n    // validate only objects\n    if (!utils.isObject(value)) return\n    const maxProperties = schema.maxProperties\n    const length = Object.keys(value).length\n    if (length > maxProperties) {\n      return makeError(length, `no more than ${maxProperties} properties`, opts)\n    }\n  },\n\n  /**\n   * Validates the provided value against a minimum value defined by the Schema's `minimum` keyword\n   * Validation succeeds if the value is a number and is greater than, or equal to, the value of this keyword.\n   * http://json-schema.org/latest/json-schema-validation.html#anchor21\n   *\n   * @name Schema.validationKeywords.minimum\n   * @method\n   * @param {*} value Number to validate against the keyword.\n   * @param {object} schema Schema containing the `minimum` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  minimum (value, schema, opts) {\n    // Must be a number\n    const minimum = schema.minimum\n    // Must be a boolean\n    // Depends on minimum\n    // default: false\n    const exclusiveMinimum = schema.exclusiveMinimum\n    if (typeof value === typeof minimum && !(exclusiveMinimum ? value > minimum : value >= minimum)) {\n      return exclusiveMinimum\n        ? makeError(value, `no less than nor equal to ${minimum}`, opts)\n        : makeError(value, `no less than ${minimum}`, opts)\n    }\n  },\n\n  /**\n   * Validates the length of the provided array against a minimum value defined by the Schema's `minItems` keyword.\n   * Validation succeeds if the length of the array is greater than, or equal to the value of this keyword.\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor45\n   *\n   * @name Schema.validationKeywords.minItems\n   * @method\n   * @param {*} value Array to be validated.\n   * @param {object} schema Schema containing the `minItems` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  minItems (value, schema, opts) {\n    if (utils.isArray(value)) {\n      return minLengthCommon('minItems', value, schema, opts)\n    }\n  },\n\n  /**\n   * Validates the length of the provided string against a minimum value defined in the Schema's `minLength` keyword.\n   * Validation succeeds if the length of the string is greater than, or equal to the value of this keyword.\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor29\n   *\n   * @name Schema.validationKeywords.minLength\n   * @method\n   * @param {*} value String to be validated.\n   * @param {object} schema Schema containing the `minLength` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  minLength (value, schema, opts) {\n    return minLengthCommon('minLength', value, schema, opts)\n  },\n\n  /**\n   * Validates the count of the provided object's properties against a minimum value defined in the Schema's `minProperties` keyword.\n   * Validation succeeds if the object's property count is greater than, or equal to the value of this keyword.\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor57\n   *\n   * @name Schema.validationKeywords.minProperties\n   * @method\n   * @param {*} value Object to be validated.\n   * @param {object} schema Schema containing the `minProperties` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  minProperties (value, schema, opts) {\n    // validate only objects\n    if (!utils.isObject(value)) return\n    const minProperties = schema.minProperties\n    const length = Object.keys(value).length\n    if (length < minProperties) {\n      return makeError(length, `no more than ${minProperties} properties`, opts)\n    }\n  },\n\n  /**\n   * Validates the provided number is a multiple of the number defined in the Schema's `multipleOf` keyword.\n   * Validation succeeds if the number can be divided equally into the value of this keyword.\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor14\n   *\n   * @name Schema.validationKeywords.multipleOf\n   * @method\n   * @param {*} value Number to be validated.\n   * @param {object} schema Schema containing the `multipleOf` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  multipleOf (value, schema, opts) {\n    const multipleOf = schema.multipleOf\n    if (utils.isNumber(value)) {\n      if ((value / multipleOf) % 1 !== 0) {\n        return makeError(value, `multipleOf ${multipleOf}`, opts)\n      }\n    }\n  },\n\n  /**\n   * Validates the provided value is not valid with any of the schemas defined in the Schema's `not` keyword.\n   * An instance is valid against this keyword if and only if it is NOT valid against the schemas in this keyword's value.\n   *\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor91\n   * @name Schema.validationKeywords.not\n   * @method\n   * @param {*} value to be checked.\n   * @param {object} schema Schema containing the not keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  not (value, schema, opts) {\n    if (!validate(value, schema.not, opts)) {\n      // TODO: better messaging\n      return makeError('succeeded', 'should have failed', opts)\n    }\n  },\n\n  /**\n   * Validates the provided value is valid with one and only one of the schemas defined in the Schema's `oneOf` keyword.\n   * An instance is valid against this keyword if and only if it is valid against a single schemas in this keyword's value.\n   *\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor88\n   * @name Schema.validationKeywords.oneOf\n   * @method\n   * @param {*} value to be checked.\n   * @param {object} schema Schema containing the `oneOf` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  oneOf (value, schema, opts) {\n    let validated = false\n    let allErrors = []\n    schema.oneOf.forEach(function (_schema) {\n      const errors = validate(value, _schema, opts)\n      if (errors) {\n        allErrors = allErrors.concat(errors)\n      } else if (validated) {\n        allErrors = [makeError('valid against more than one', 'valid against only one', opts)]\n        validated = false\n        return false\n      } else {\n        validated = true\n      }\n    })\n    return validated ? undefined : allErrors\n  },\n\n  /**\n   * Validates the provided string matches a pattern defined in the Schema's `pattern` keyword.\n   * Validation succeeds if the string is a match of the regex value of this keyword.\n   *\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor33\n   * @name Schema.validationKeywords.pattern\n   * @method\n   * @param {*} value String to be validated.\n   * @param {object} schema Schema containing the `pattern` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  pattern (value, schema, opts) {\n    const pattern = schema.pattern\n    if (utils.isString(value) && !value.match(pattern)) {\n      return makeError(value, pattern, opts)\n    }\n  },\n\n  /**\n   * Validates the provided object's properties against a map of values defined in the Schema's `properties` keyword.\n   * Validation succeeds if the object's property are valid with each of the schema's in the provided map.\n   * Validation also depends on the additionalProperties and or patternProperties.\n   *\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor64 for more info.\n   *\n   * @name Schema.validationKeywords.properties\n   * @method\n   * @param {*} value Object to be validated.\n   * @param {object} schema Schema containing the `properties` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  properties (value, schema, opts) {\n    opts || (opts = {})\n\n    if (utils.isArray(value)) {\n      return\n    }\n\n    // Can be a boolean or an object\n    // Technically the default is an \"empty schema\", but here \"true\" is\n    // functionally the same\n    const additionalProperties = schema.additionalProperties === undefined ? true : schema.additionalProperties\n    const validated = []\n    // \"p\": The property set from \"properties\".\n    // Default is an object\n    const properties = schema.properties || {}\n    // \"pp\": The property set from \"patternProperties\".\n    // Default is an object\n    const patternProperties = schema.patternProperties || {}\n    let errors = []\n\n    utils.forOwn(properties, function (_schema, prop) {\n      opts.prop = prop\n      errors = errors.concat(validate(value[prop], _schema, opts) || [])\n      validated.push(prop)\n    })\n\n    const toValidate = utils.omit(value, validated)\n    utils.forOwn(patternProperties, function (_schema, pattern) {\n      utils.forOwn(toValidate, function (undef, prop) {\n        if (prop.match(pattern)) {\n          opts.prop = prop\n          errors = errors.concat(validate(value[prop], _schema, opts) || [])\n          validated.push(prop)\n        }\n      })\n    })\n    const keys = Object.keys(utils.omit(value, validated))\n    // If \"s\" is not empty, validation fails\n    if (additionalProperties === false) {\n      if (keys.length) {\n        const origProp = opts.prop\n        opts.prop = ''\n        addError(`extra fields: ${keys.join(', ')}`, 'no extra fields', opts, errors)\n        opts.prop = origProp\n      }\n    } else if (utils.isObject(additionalProperties)) {\n      // Otherwise, validate according to provided schema\n      keys.forEach(function (prop) {\n        opts.prop = prop\n        errors = errors.concat(validate(value[prop], additionalProperties, opts) || [])\n      })\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * Validates the provided object's has all properties listed in the Schema's `properties` keyword array.\n   * Validation succeeds if the object contains all properties provided in the array value of this keyword.\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor61\n   *\n   * @name Schema.validationKeywords.required\n   * @method\n   * @param {*} value Object to be validated.\n   * @param {object} schema Schema containing the `required` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  required (value, schema, opts) {\n    opts || (opts = {})\n    const required = schema.required\n    const errors = []\n    if (!opts.existingOnly) {\n      required.forEach(function (prop) {\n        if (utils.get(value, prop) === undefined) {\n          const prevProp = opts.prop\n          opts.prop = prop\n          addError(undefined, 'a value', opts, errors)\n          opts.prop = prevProp\n        }\n      })\n    }\n    return errors.length ? errors : undefined\n  },\n\n  /**\n   * Validates the provided value's type is equal to the type, or array of types, defined in the Schema's `type` keyword.\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor79\n   *\n   * @name Schema.validationKeywords.type\n   * @method\n   * @param {*} value Value to be validated.\n   * @param {object} schema Schema containing the `type` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  type (value, schema, opts) {\n    let type = schema.type\n    let validType\n    // Can be one of several types\n    if (utils.isString(type)) {\n      type = [type]\n    }\n    // Try to match the value against an expected type\n    type.forEach(function (_type) {\n      // TODO: throw an error if type is not defined\n      if (types[_type](value, schema, opts)) {\n        // Matched a type\n        validType = _type\n        return false\n      }\n    })\n    // Value did not match any expected type\n    if (!validType) {\n      return makeError(value !== undefined && value !== null ? typeof value : '' + value, `one of (${type.join(', ')})`, opts)\n    }\n    // Run keyword validators for matched type\n    // http://json-schema.org/latest/json-schema-validation.html#anchor12\n    const validator = typeGroupValidators[validType]\n    if (validator) {\n      return validator(value, schema, opts)\n    }\n  },\n\n  /**\n   * Validates the provided array values are unique.\n   * Validation succeeds if the items in the array are unique, but only if the value of this keyword is true\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor49\n   *\n   * @name Schema.validationKeywords.uniqueItems\n   * @method\n   * @param {*} value Array to be validated.\n   * @param {object} schema Schema containing the `uniqueItems` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  uniqueItems (value, schema, opts) {\n    if (value && value.length && schema.uniqueItems) {\n      const length = value.length\n      let item, i, j\n      // Check n - 1 items\n      for (i = length - 1; i > 0; i--) {\n        item = value[i]\n        // Only compare against unchecked items\n        for (j = i - 1; j >= 0; j--) {\n          // Found a duplicate\n          if (utils.deepEqual(item, value[j])) {\n            return makeError(item, 'no duplicates', opts)\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * @ignore\n */\nconst runOps = function (ops, value, schema, opts) {\n  let errors = []\n  ops.forEach(function (op) {\n    if (schema[op] !== undefined) {\n      errors = errors.concat(validationKeywords[op](value, schema, opts) || [])\n    }\n  })\n  return errors.length ? errors : undefined\n}\n\n/**\n * Validation keywords validated for any type:\n *\n * - `enum`\n * - `type`\n * - `allOf`\n * - `anyOf`\n * - `oneOf`\n * - `not`\n *\n * @name Schema.ANY_OPS\n * @type {string[]}\n */\nconst ANY_OPS = ['enum', 'type', 'allOf', 'anyOf', 'oneOf', 'not']\n\n/**\n * Validation keywords validated for array types:\n *\n * - `items`\n * - `maxItems`\n * - `minItems`\n * - `uniqueItems`\n *\n * @name Schema.ARRAY_OPS\n * @type {string[]}\n */\nconst ARRAY_OPS = ['items', 'maxItems', 'minItems', 'uniqueItems']\n\n/**\n * Validation keywords validated for numeric (number and integer) types:\n *\n * - `multipleOf`\n * - `maximum`\n * - `minimum`\n *\n * @name Schema.NUMERIC_OPS\n * @type {string[]}\n */\nconst NUMERIC_OPS = ['multipleOf', 'maximum', 'minimum']\n\n/**\n * Validation keywords validated for object types:\n *\n * - `maxProperties`\n * - `minProperties`\n * - `required`\n * - `properties`\n * - `dependencies`\n *\n * @name Schema.OBJECT_OPS\n * @type {string[]}\n */\nconst OBJECT_OPS = ['maxProperties', 'minProperties', 'required', 'properties', 'dependencies']\n\n/**\n * Validation keywords validated for string types:\n *\n * - `maxLength`\n * - `minLength`\n * - `pattern`\n *\n * @name Schema.STRING_OPS\n * @type {string[]}\n */\nconst STRING_OPS = ['maxLength', 'minLength', 'pattern']\n\n/**\n * http://json-schema.org/latest/json-schema-validation.html#anchor75\n * @ignore\n */\nconst validateAny = function (value, schema, opts) {\n  return runOps(ANY_OPS, value, schema, opts)\n}\n\n/**\n * Validates the provided value against a given Schema according to the http://json-schema.org/ v4 specification.\n *\n * @name Schema.validate\n * @method\n * @param {*} value Value to be validated.\n * @param {object} schema Valid Schema according to the http://json-schema.org/ v4 specification.\n * @param {object} [opts] Configuration options.\n * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n */\nconst validate = function (value, schema, opts) {\n  let errors = []\n  opts || (opts = {})\n  opts.ctx || (opts.ctx = { value, schema })\n  let shouldPop\n  const prevProp = opts.prop\n  if (schema === undefined) {\n    return\n  }\n  if (!utils.isObject(schema)) {\n    throw utils.err(`${DOMAIN}#validate`)(500, `Invalid schema at path: \"${opts.path}\"`)\n  }\n  if (opts.path === undefined) {\n    opts.path = []\n  }\n  // Track our location as we recurse\n  if (opts.prop !== undefined) {\n    shouldPop = true\n    opts.path.push(opts.prop)\n    opts.prop = undefined\n  }\n  // Validate against parent schema\n  if (schema.extends) {\n    // opts.path = path\n    // opts.prop = prop\n    if (utils.isFunction(schema.extends.validate)) {\n      errors = errors.concat(schema.extends.validate(value, opts) || [])\n    } else {\n      errors = errors.concat(validate(value, schema.extends, opts) || [])\n    }\n  }\n  if (value === undefined) {\n    // Check if property is required\n    if (schema.required === true && !opts.existingOnly) {\n      addError(value, 'a value', opts, errors)\n    }\n    if (shouldPop) {\n      opts.path.pop()\n      opts.prop = prevProp\n    }\n    return errors.length ? errors : undefined\n  }\n\n  errors = errors.concat(validateAny(value, schema, opts) || [])\n  if (shouldPop) {\n    opts.path.pop()\n    opts.prop = prevProp\n  }\n  return errors.length ? errors : undefined\n}\n\n// These strings are cached for optimal performance of the change detection\n// boolean - Whether a Record is changing in the current execution frame\nconst changingPath = 'changing'\n// string[] - Properties that have changed in the current execution frame\nconst changedPath = 'changed'\n// Object[] - History of change records\nconst changeHistoryPath = 'history'\n// boolean - Whether a Record is currently being instantiated\nconst creatingPath = 'creating'\n// number - The setTimeout change event id of a Record, if any\nconst eventIdPath = 'eventId'\n// boolean - Whether to skip validation for a Record's currently changing property\nconst noValidatePath = 'noValidate'\n// boolean - Whether to preserve Change History for a Record\nconst keepChangeHistoryPath = 'keepChangeHistory'\n// boolean - Whether to skip change notification for a Record's currently\n// changing property\nconst silentPath = 'silent'\nconst validationFailureMsg = 'validation failed'\n\n/**\n * A map of validation functions grouped by type.\n *\n * @name Schema.typeGroupValidators\n * @type {object}\n */\nconst typeGroupValidators = {\n  /**\n   * Validates the provided value against the schema using all of the validation keywords specific to instances of an array.\n   * The validation keywords for the type `array` are:\n   *```\n   * ['items', 'maxItems', 'minItems', 'uniqueItems']\n   *```\n   * see http://json-schema.org/latest/json-schema-validation.html#anchor25\n   *\n   * @name Schema.typeGroupValidators.array\n   * @method\n   * @param {*} value Array to be validated.\n   * @param {object} schema Schema containing at least one array keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  array: function (value, schema, opts) {\n    return runOps(ARRAY_OPS, value, schema, opts)\n  },\n\n  /**\n   * Validates the provided value against the schema using all of the validation keywords specific to instances of an integer.\n   * The validation keywords for the type `integer` are:\n   *```\n   * ['multipleOf', 'maximum', 'minimum']\n   *```\n   * @name Schema.typeGroupValidators.integer\n   * @method\n   * @param {*} value Number to be validated.\n   * @param {object} schema Schema containing at least one `integer` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  integer: function (value, schema, opts) {\n    // Additional validations for numerics are the same\n    return typeGroupValidators.numeric(value, schema, opts)\n  },\n\n  /**\n   * Validates the provided value against the schema using all of the validation keywords specific to instances of an number.\n   * The validation keywords for the type `number` are:\n   *```\n   * ['multipleOf', 'maximum', 'minimum']\n   *```\n   * @name Schema.typeGroupValidators.number\n   * @method\n   * @param {*} value Number to be validated.\n   * @param {object} schema Schema containing at least one `number` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  number: function (value, schema, opts) {\n    // Additional validations for numerics are the same\n    return typeGroupValidators.numeric(value, schema, opts)\n  },\n\n  /**\n   * Validates the provided value against the schema using all of the validation keywords specific to instances of a number or integer.\n   * The validation keywords for the type `numeric` are:\n   *```\n   * ['multipleOf', 'maximum', 'minimum']\n   *```\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor13.\n   *\n   * @name Schema.typeGroupValidators.numeric\n   * @method\n   * @param {*} value Number to be validated.\n   * @param {object} schema Schema containing at least one `numeric` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  numeric: function (value, schema, opts) {\n    return runOps(NUMERIC_OPS, value, schema, opts)\n  },\n\n  /**\n   * Validates the provided value against the schema using all of the validation keywords specific to instances of an object.\n   * The validation keywords for the type `object` are:\n   *```\n   * ['maxProperties', 'minProperties', 'required', 'properties', 'dependencies']\n   *```\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor53.\n   *\n   * @name Schema.typeGroupValidators.object\n   * @method\n   * @param {*} value Object to be validated.\n   * @param {object} schema Schema containing at least one `object` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  object: function (value, schema, opts) {\n    return runOps(OBJECT_OPS, value, schema, opts)\n  },\n\n  /**\n   * Validates the provided value against the schema using all of the validation keywords specific to instances of an string.\n   * The validation keywords for the type `string` are:\n   *```\n   * ['maxLength', 'minLength', 'pattern']\n   *```\n   * See http://json-schema.org/latest/json-schema-validation.html#anchor25.\n   *\n   * @name Schema.typeGroupValidators.string\n   * @method\n   * @param {*} value String to be validated.\n   * @param {object} schema Schema containing at least one `string` keyword.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  string: function (value, schema, opts) {\n    return runOps(STRING_OPS, value, schema, opts)\n  }\n}\n\n/**\n * js-data's Schema class.\n *\n * @example <caption>Schema#constructor</caption>\n * const JSData = require('js-data');\n * const { Schema } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * const PostSchema = new Schema({\n *   type: 'object',\n *   properties: {\n *     title: { type: 'string' }\n *   }\n * });\n * PostSchema.validate({ title: 1234 });\n *\n * @class Schema\n * @extends Component\n * @param {object} definition Schema definition according to json-schema.org\n */\nfunction Schema (definition) {\n  definition || (definition = {})\n  // TODO: schema validation\n  utils.fillIn(this, definition)\n\n  if (this.type === 'object') {\n    this.properties = this.properties || {}\n    utils.forOwn(this.properties, (_definition, prop) => {\n      if (!(_definition instanceof Schema)) {\n        this.properties[prop] = new Schema(_definition)\n      }\n    })\n  } else if (this.type === 'array' && this.items && !(this.items instanceof Schema)) {\n    this.items = new Schema(this.items)\n  }\n  if (this.extends && !(this.extends instanceof Schema)) {\n    this.extends = new Schema(this.extends)\n  }\n  ['allOf', 'anyOf', 'oneOf'].forEach((validationKeyword) => {\n    if (this[validationKeyword]) {\n      this[validationKeyword].forEach((_definition, i) => {\n        if (!(_definition instanceof Schema)) {\n          this[validationKeyword][i] = new Schema(_definition)\n        }\n      })\n    }\n  })\n}\n\nexport default Component.extend({\n  constructor: Schema,\n\n  /**\n   * This adds ES5 getters/setters to the target based on the \"properties\" in\n   * this Schema, which makes possible change tracking and validation on\n   * property assignment.\n   *\n   * @name Schema#apply\n   * @method\n   * @param {object} target The prototype to which to apply this schema.\n   */\n  apply (target, opts) {\n    opts || (opts = {})\n    opts.getter || (opts.getter = '_get')\n    opts.setter || (opts.setter = '_set')\n    opts.unsetter || (opts.unsetter = '_unset')\n    opts.track || (opts.track = this.track)\n    const properties = this.properties || {}\n    utils.forOwn(properties, (schema, prop) => {\n      Object.defineProperty(\n        target,\n        prop,\n        this.makeDescriptor(prop, schema, opts)\n      )\n    })\n  },\n\n  /**\n   * Apply default values to the target object for missing values.\n   *\n   * @name Schema#applyDefaults\n   * @method\n   * @param {object} target The target to which to apply values for missing values.\n   */\n  applyDefaults (target) {\n    if (!target) {\n      return\n    }\n    const properties = this.properties || {}\n    const hasSet = utils.isFunction(target.set) || utils.isFunction(target._set)\n    utils.forOwn(properties, function (schema, prop) {\n      if (Object.hasOwnProperty.call(schema, 'default') && utils.get(target, prop) === undefined) {\n        if (hasSet) {\n          target.set(prop, utils.plainCopy(schema.default), { silent: true })\n        } else {\n          utils.set(target, prop, utils.plainCopy(schema.default))\n        }\n      }\n      if (schema.type === 'object' && schema.properties) {\n        if (hasSet) {\n          const orig = target._get('noValidate')\n          target._set('noValidate', true)\n          utils.set(target, prop, utils.get(target, prop) || {}, { silent: true })\n          target._set('noValidate', orig)\n        } else {\n          utils.set(target, prop, utils.get(target, prop) || {})\n        }\n        schema.applyDefaults(utils.get(target, prop))\n      }\n    })\n  },\n\n  /**\n   * Assemble a property descriptor for tracking and validating changes to\n   * a property according to the given schema. This method is called when\n   * {@link Mapper#applySchema} is set to `true`.\n   *\n   * @name Schema#makeDescriptor\n   * @method\n   * @param {string} prop The property name.\n   * @param {(Schema|object)} schema The schema for the property.\n   * @param {object} [opts] Optional configuration.\n   * @param {function} [opts.getter] Custom getter function.\n   * @param {function} [opts.setter] Custom setter function.\n   * @param {function} [opts.track] Whether to track changes.\n   * @returns {object} A property descriptor for the given schema.\n   */\n  makeDescriptor (prop, schema, opts) {\n    const descriptor = {\n      // Better to allow configurability, but at the user's own risk\n      configurable: true,\n      // These properties are enumerable by default, but regardless of their\n      // enumerability, they won't be \"own\" properties of individual records\n      enumerable: schema.enumerable === undefined ? true : !!schema.enumerable\n    }\n    // Cache a few strings for optimal performance\n    const keyPath = `props.${prop}`\n    const previousPath = `previous.${prop}`\n    const getter = opts.getter\n    const setter = opts.setter\n    const unsetter = opts.unsetter\n    const track = utils.isBoolean(opts.track) ? opts.track : schema.track\n\n    descriptor.get = function () {\n      return this._get(keyPath)\n    }\n\n    if (utils.isFunction(schema.get)) {\n      const originalGet = descriptor.get\n      descriptor.get = function () {\n        return schema.get.call(this, originalGet)\n      }\n    }\n\n    descriptor.set = function (value) {\n      // These are accessed a lot\n      const _get = this[getter]\n      const _set = this[setter]\n      const _unset = this[unsetter]\n      // Optionally check that the new value passes validation\n      if (!_get(noValidatePath)) {\n        const errors = schema.validate(value, { path: [prop] })\n        if (errors) {\n          this.dbg('Schema#makeDescriptor', validationFailureMsg, errors, prop, value, schema)\n\n          // Immediately throw an error, preventing the record from getting into\n          // an invalid state\n          const error = new Error(validationFailureMsg)\n          error.errors = errors\n          throw error\n        }\n      }\n      // TODO: Make it so tracking can be turned on for all properties instead of\n      // only per-property\n      if (track && !_get(creatingPath)) {\n        // previous is versioned on database commit\n        // props are versioned on set()\n        const previous = _get(previousPath)\n        const current = _get(keyPath)\n        let changing = _get(changingPath)\n        let changed = _get(changedPath)\n\n        if (!changing) {\n          // Track properties that are changing in the current event loop\n          changed = []\n        }\n\n        // Add changing properties to this array once at most\n        const index = changed.indexOf(prop)\n        if (current !== value && index === -1) {\n          changed.push(prop)\n        }\n        if (previous === value) {\n          if (index >= 0) {\n            changed.splice(index, 1)\n          }\n        }\n        // No changes in current event loop\n        if (!changed.length) {\n          changing = false\n          _unset(changingPath)\n          _unset(changedPath)\n          // Cancel pending change event\n          if (_get(eventIdPath)) {\n            clearTimeout(_get(eventIdPath))\n            _unset(eventIdPath)\n          }\n        }\n        // Changes detected in current event loop\n        if (!changing && changed.length) {\n          _set(changedPath, changed)\n          _set(changingPath, true)\n          // Saving the timeout id allows us to batch all changes in the same\n          // event loop into a single \"change\"\n          // TODO: Optimize\n          _set(eventIdPath, setTimeout(() => {\n            // Previous event loop where changes were gathered has ended, so\n            // notify any listeners of those changes and prepare for any new\n            // changes\n            _unset(changedPath)\n            _unset(eventIdPath)\n            _unset(changingPath)\n            // TODO: Optimize\n            if (!_get(silentPath)) {\n              let i\n              for (i = 0; i < changed.length; i++) {\n                this.emit('change:' + changed[i], this, utils.get(this, changed[i]))\n              }\n\n              const changes = utils.diffObjects({ [prop]: value }, { [prop]: current })\n\n              if (_get(keepChangeHistoryPath)) {\n                const changeRecord = utils.plainCopy(changes)\n                changeRecord.timestamp = new Date().getTime()\n                let changeHistory = _get(changeHistoryPath)\n                !changeHistory && _set(changeHistoryPath, (changeHistory = []))\n                changeHistory.push(changeRecord)\n              }\n              this.emit('change', this, changes)\n            }\n            _unset(silentPath)\n          }, 0))\n        }\n      }\n      _set(keyPath, value)\n      return value\n    }\n\n    if (utils.isFunction(schema.set)) {\n      const originalSet = descriptor.set\n      descriptor.set = function (value) {\n        return schema.set.call(this, value, originalSet)\n      }\n    }\n\n    return descriptor\n  },\n\n  /**\n   * Create a copy of the given value that contains only the properties defined\n   * in this schema.\n   *\n   * @name Schema#pick\n   * @method\n   * @param {*} value The value to copy.\n   * @returns {*} The copy.\n   */\n  pick (value) {\n    if (value === undefined) {\n      return\n    }\n    if (this.type === 'object') {\n      const copy = {}\n      const properties = this.properties\n      if (properties) {\n        utils.forOwn(properties, (_definition, prop) => {\n          copy[prop] = _definition.pick(value[prop])\n        })\n      }\n      if (this.extends) {\n        utils.fillIn(copy, this.extends.pick(value))\n      }\n      // Conditionally copy properties not defined in \"properties\"\n      if (this.additionalProperties) {\n        for (var key in value) {\n          if (!properties[key]) {\n            copy[key] = utils.plainCopy(value[key])\n          }\n        }\n      }\n      return copy\n    } else if (this.type === 'array') {\n      return value.map((item) => {\n        const _copy = this.items ? this.items.pick(item) : {}\n        if (this.extends) {\n          utils.fillIn(_copy, this.extends.pick(item))\n        }\n        return _copy\n      })\n    }\n    return utils.plainCopy(value)\n  },\n\n  /**\n   * Validate the provided value against this schema.\n   *\n   * @name Schema#validate\n   * @method\n   * @param {*} value Value to validate.\n   * @param {object} [opts] Configuration options.\n   * @returns {(array|undefined)} Array of errors or `undefined` if valid.\n   */\n  validate (value, opts) {\n    return validate(value, this, opts)\n  }\n}, {\n  ANY_OPS,\n  ARRAY_OPS,\n  NUMERIC_OPS,\n  OBJECT_OPS,\n  STRING_OPS,\n  typeGroupValidators,\n  types,\n  validate,\n  validationKeywords\n})\n\n/**\n * Create a subclass of this Schema:\n * @example <caption>Schema.extend</caption>\n * const JSData = require('js-data');\n * const { Schema } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * // Extend the class using ES2015 class syntax.\n * class CustomSchemaClass extends Schema {\n *   foo () { return 'bar'; }\n *   static beep () { return 'boop'; }\n * }\n * const customSchema = new CustomSchemaClass();\n * console.log(customSchema.foo());\n * console.log(CustomSchemaClass.beep());\n *\n * // Extend the class using alternate method.\n * const OtherSchemaClass = Schema.extend({\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const otherSchema = new OtherSchemaClass();\n * console.log(otherSchema.foo());\n * console.log(OtherSchemaClass.beep());\n *\n * // Extend the class, providing a custom constructor.\n * function AnotherSchemaClass () {\n *   Schema.call(this);\n *   this.created_at = new Date().getTime();\n * }\n * Schema.extend({\n *   constructor: AnotherSchemaClass,\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const anotherSchema = new AnotherSchemaClass();\n * console.log(anotherSchema.created_at);\n * console.log(anotherSchema.foo());\n * console.log(AnotherSchemaClass.beep());\n *\n * @method Schema.extend\n * @param {object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {object} [props.constructor] Provide a custom constructor function\n * to be used as the subclass itself.\n * @param {object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this Schema class.\n * @since 3.0.0\n */\n","import utils from './utils'\nimport Component from './Component'\nimport Record from './Record'\nimport Schema from './Schema'\nimport { createDescriptor as createBelongsToDescriptor, BelongsToRelation, belongsToType } from './Relation/BelongsTo'\nimport { createDescriptor as createHasManyDescriptor, HasManyRelation, hasManyType } from './Relation/HasMany'\nimport { createDescriptor as createHasOneDescriptor, HasOneRelation, hasOneType } from './Relation/HasOne'\nimport {\n  belongsTo,\n  hasMany,\n  hasOne\n} from './decorators'\n\nconst DOMAIN = 'Mapper'\nconst applyDefaultsHooks = [\n  'beforeCreate',\n  'beforeCreateMany'\n]\nconst validatingHooks = [\n  'beforeCreate',\n  'beforeCreateMany',\n  'beforeUpdate',\n  'beforeUpdateAll',\n  'beforeUpdateMany'\n]\nexport const makeNotify = function (num) {\n  return function (...args) {\n    const opts = args[args.length - num]\n    const op = opts.op\n    this.dbg(op, ...args)\n\n    if (applyDefaultsHooks.indexOf(op) !== -1 && opts.applyDefaults !== false) {\n      const schema = this.getSchema()\n      if (schema && schema.applyDefaults) {\n        let toProcess = args[0]\n        if (!utils.isArray(toProcess)) {\n          toProcess = [toProcess]\n        }\n        toProcess.forEach((record) => {\n          schema.applyDefaults(record)\n        })\n      }\n    }\n\n    // Automatic validation\n    if (validatingHooks.indexOf(op) !== -1 && !opts.noValidate) {\n      // Save current value of option\n      const originalExistingOnly = opts.existingOnly\n\n      // For updates, ignore required fields if they aren't present\n      if (op.indexOf('beforeUpdate') === 0 && opts.existingOnly === undefined) {\n        opts.existingOnly = true\n      }\n      const errors = this.validate(args[op === 'beforeUpdate' ? 1 : 0], utils.pick(opts, ['existingOnly']))\n\n      // Restore option\n      opts.existingOnly = originalExistingOnly\n\n      // Abort lifecycle due to validation errors\n      if (errors) {\n        const err = new Error('validation failed')\n        err.errors = errors\n        return utils.reject(err)\n      }\n    }\n\n    // Emit lifecycle event\n    if (opts.notify || (opts.notify === undefined && this.notify)) {\n      setTimeout(() => {\n        this.emit(op, ...args)\n      })\n    }\n  }\n}\n\n// These are the default implementations of all of the lifecycle hooks\nconst notify = makeNotify(1)\nconst notify2 = makeNotify(2)\n\n// This object provides meta information used by Mapper#crud to actually\n// execute each lifecycle method\nconst LIFECYCLE_METHODS = {\n  count: {\n    defaults: [{}, {}],\n    skip: true,\n    types: []\n  },\n  destroy: {\n    defaults: [{}, {}],\n    skip: true,\n    types: []\n  },\n  destroyAll: {\n    defaults: [{}, {}],\n    skip: true,\n    types: []\n  },\n  find: {\n    defaults: [undefined, {}],\n    types: []\n  },\n  findAll: {\n    defaults: [{}, {}],\n    types: []\n  },\n  sum: {\n    defaults: [undefined, {}, {}],\n    skip: true,\n    types: []\n  },\n  update: {\n    adapterArgs (mapper, id, props, opts) {\n      return [id, mapper.toJSON(props, opts), opts]\n    },\n    beforeAssign: 1,\n    defaults: [undefined, {}, {}],\n    types: []\n  },\n  updateAll: {\n    adapterArgs (mapper, props, query, opts) {\n      return [mapper.toJSON(props, opts), query, opts]\n    },\n    beforeAssign: 0,\n    defaults: [{}, {}, {}],\n    types: []\n  },\n  updateMany: {\n    adapterArgs (mapper, records, opts) {\n      return [records.map((record) => mapper.toJSON(record, opts)), opts]\n    },\n    beforeAssign: 0,\n    defaults: [[], {}],\n    types: []\n  }\n}\n\nconst MAPPER_DEFAULTS = {\n  /**\n   * Hash of registered adapters. Don't modify directly. Use\n   * {@link Mapper#registerAdapter} instead.\n   *\n   * @default {}\n   * @name Mapper#_adapters\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/connecting-to-a-data-source\",\"Connecting to a data source\"]\n   */\n  _adapters: {},\n\n  /**\n   * Hash of registered relationship types. Don't modify directly. Use\n   * {@link DataStore#registerRelationshipType} instead.\n   *\n   * @default {}\n   * @name Mapper#_relationshipTypes\n   * @since 3.1.0\n   */\n  _relationshipTypes: {\n    belongsToType: { RelationshipClass: BelongsToRelation, createDescriptor: createBelongsToDescriptor },\n    hasManyType: { RelationshipClass: HasManyRelation, createDescriptor: createHasManyDescriptor },\n    hasOneType: { RelationshipClass: HasOneRelation, createDescriptor: createHasOneDescriptor }\n  },\n\n  /**\n   * Whether {@link Mapper#beforeCreate} and {@link Mapper#beforeCreateMany}\n   * should automatically receive default values according to the Mapper's schema.\n   *\n   * @default true\n   * @name Mapper#applyDefaults\n   * @since 3.0.0\n   * @type {boolean}\n   */\n  applyDefaults: true,\n\n  /**\n   * Whether to augment {@link Mapper#recordClass} with ES5 getters and setters\n   * according to the properties defined in {@link Mapper#schema}. This makes\n   * possible validation and change tracking on individual properties\n   * when using the dot (e.g. `user.name = \"Bob\"`) operator to modify a\n   * property, and is `true` by default.\n   *\n   * @default true\n   * @name Mapper#applySchema\n   * @since 3.0.0\n   * @type {boolean}\n   */\n  applySchema: true,\n\n  /**\n   * The name of the registered adapter that this Mapper should used by default.\n   *\n   * @default \"http\"\n   * @name Mapper#defaultAdapter\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/connecting-to-a-data-source\",\"Connecting to a data source\"]\n   * @type {string}\n   */\n  defaultAdapter: 'http',\n\n  /**\n   * The field used as the unique identifier on records handled by this Mapper.\n   *\n   * @default id\n   * @name Mapper#idAttribute\n   * @since 3.0.0\n   * @type {string}\n   */\n  idAttribute: 'id',\n\n  /**\n   * Whether records created from this mapper keep changeHistory on property changes.\n   *\n   * @default true\n   * @name Mapper#keepChangeHistory\n   * @since 3.0.0\n   * @type {boolean}\n   */\n  keepChangeHistory: true,\n\n  /**\n   * Whether this Mapper should emit operational events.\n   *\n   * @default true\n   * @name Mapper#notify\n   * @since 3.0.0\n   * @type {boolean}\n   */\n  notify: true,\n\n  /**\n   * Whether to skip validation when the Record instances are created.\n   *\n   * @default false\n   * @name Mapper#noValidate\n   * @since 3.0.0\n   * @type {boolean}\n   */\n  noValidate: false,\n\n  /**\n   * Whether {@link Mapper#create}, {@link Mapper#createMany},\n   * {@link Mapper#update}, {@link Mapper#updateAll}, {@link Mapper#updateMany},\n   * {@link Mapper#find}, {@link Mapper#findAll}, {@link Mapper#destroy},\n   * {@link Mapper#destroyAll}, {@link Mapper#count}, and {@link Mapper#sum}\n   * should return a raw result object that contains both the instance data\n   * returned by the adapter _and_ metadata about the operation.\n   *\n   * The default is to NOT return the result object, and instead return just the\n   * instance data.\n   *\n   * @default false\n   * @name Mapper#raw\n   * @since 3.0.0\n   * @type {boolean}\n   */\n  raw: false,\n\n  /**\n   * Whether records created from this mapper automatically validate their properties\n   * when their properties are modified.\n   *\n   * @default true\n   * @name Mapper#validateOnSet\n   * @since 3.0.0\n   * @type {boolean}\n   */\n  validateOnSet: true\n}\n\n/**\n * The core of JSData's [ORM/ODM][orm] implementation. Given a minimum amout of\n * meta information about a resource, a Mapper can perform generic CRUD\n * operations against that resource. Apart from its configuration, a Mapper is\n * stateless. The particulars of various persistence layers have been abstracted\n * into adapters, which a Mapper uses to perform its operations.\n *\n * The term \"Mapper\" comes from the [Data Mapper Pattern][pattern] described in\n * Martin Fowler's [Patterns of Enterprise Application Architecture][book]. A\n * Data Mapper moves data between [in-memory object instances][record] and a\n * relational or document-based database. JSData's Mapper can work with any\n * persistence layer you can write an adapter for.\n *\n * _(\"Model\" is a heavily overloaded term and is avoided in this documentation\n * to prevent confusion.)_\n *\n * [orm]: https://en.wikipedia.org/wiki/Object-relational_mapping\n *\n * @example\n * [pattern]: https://en.wikipedia.org/wiki/Data_mapper_pattern\n * [book]: http://martinfowler.com/books/eaa.html\n * [record]: Record.html\n * // Import and instantiate\n * import { Mapper } from 'js-data';\n * const UserMapper = new Mapper({ name: 'user' });\n *\n * @example\n * // Define a Mapper using the Container component\n * import { Container } from 'js-data';\n * const store = new Container();\n * store.defineMapper('user');\n *\n * @class Mapper\n * @extends Component\n * @param {object} opts Configuration options.\n * @param {boolean} [opts.applySchema=true] See {@link Mapper#applySchema}.\n * @param {boolean} [opts.debug=false] See {@link Component#debug}.\n * @param {string} [opts.defaultAdapter=http] See {@link Mapper#defaultAdapter}.\n * @param {string} [opts.idAttribute=id] See {@link Mapper#idAttribute}.\n * @param {object} [opts.methods] See {@link Mapper#methods}.\n * @param {string} opts.name See {@link Mapper#name}.\n * @param {boolean} [opts.notify] See {@link Mapper#notify}.\n * @param {boolean} [opts.raw=false] See {@link Mapper#raw}.\n * @param {Function|boolean} [opts.recordClass] See {@link Mapper#recordClass}.\n * @param {Object|Schema} [opts.schema] See {@link Mapper#schema}.\n * @returns {Mapper} A new {@link Mapper} instance.\n * @see http://www.js-data.io/v3.0/docs/components-of-jsdata#mapper\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#mapper\",\"Components of JSData: Mapper\"]\n * @tutorial [\"http://www.js-data.io/v3.0/docs/modeling-your-data\",\"Modeling your data\"]\n */\nfunction Mapper (opts) {\n  utils.classCallCheck(this, Mapper)\n  Component.call(this)\n  opts || (opts = {})\n\n  // Prepare certain properties to be non-enumerable\n  Object.defineProperties(this, {\n    _adapters: {\n      value: undefined,\n      writable: true\n    },\n\n    /**\n     * The {@link Container} that holds this Mapper. __Do not modify.__\n     *\n     * @name Mapper#lifecycleMethods\n     * @since 3.0.0\n     * @type {Object}\n     */\n    datastore: {\n      value: undefined,\n      writable: true\n    },\n\n    /**\n     * The meta information describing this Mapper's available lifecycle\n     * methods. __Do not modify.__\n     *\n     * @name Mapper#lifecycleMethods\n     * @since 3.0.0\n     * @type {Object}\n     */\n    lifecycleMethods: {\n      value: LIFECYCLE_METHODS\n    },\n\n    /**\n     * Set to `false` to force the Mapper to work with POJO objects only.\n     *\n     * @example\n     * // Use POJOs only.\n     * import { Mapper, Record } from 'js-data';\n     * const UserMapper = new Mapper({ recordClass: false });\n     * UserMapper.recordClass // false;\n     * const user = UserMapper.createRecord();\n     * user instanceof Record; // false\n     *\n     * @example\n     * // Set to a custom class to have records wrapped in your custom class.\n     * import { Mapper, Record } from 'js-data';\n     *  // Custom class\n     * class User {\n     *   constructor (props = {}) {\n     *     for (var key in props) {\n     *       if (props.hasOwnProperty(key)) {\n     *         this[key] = props[key];\n     *       }\n     *     }\n     *   }\n     * }\n     * const UserMapper = new Mapper({ recordClass: User });\n     * UserMapper.recordClass; // function User() {}\n     * const user = UserMapper.createRecord();\n     * user instanceof Record; // false\n     * user instanceof User; // true\n     *\n     *\n     * @example\n     * // Extend the {@link Record} class.\n     * import { Mapper, Record } from 'js-data';\n     *  // Custom class\n     * class User extends Record {\n     *   constructor () {\n     *     super(props);\n     *   }\n     * }\n     * const UserMapper = new Mapper({ recordClass: User });\n     * UserMapper.recordClass; // function User() {}\n     * const user = UserMapper.createRecord();\n     * user instanceof Record; // true\n     * user instanceof User; // true\n     *\n     * @name Mapper#recordClass\n     * @default {@link Record}\n     * @see Record\n     * @since 3.0.0\n     */\n    recordClass: {\n      value: undefined,\n      writable: true\n    },\n\n    /**\n     * This Mapper's {@link Schema}.\n     *\n     * @example <caption>Mapper#schema</caption>\n     * const JSData = require('js-data');\n     * const { Mapper } = JSData;\n     * console.log('Using JSData v' + JSData.version.full);\n     *\n     * const UserMapper = new Mapper({\n     *   name: 'user',\n     *   schema: {\n     *     properties: {\n     *       id: { type: 'number' },\n     *       first: { type: 'string', track: true },\n     *       last: { type: 'string', track: true },\n     *       role: { type: 'string', track: true, required: true },\n     *       age: { type: 'integer', track: true },\n     *       is_active: { type: 'number' }\n     *     }\n     *   }\n     * });\n     * const user = UserMapper.createRecord({\n     *   id: 1,\n     *   name: 'John',\n     *   role: 'admin'\n     * });\n     * user.on('change', function (user, changes) {\n     *   console.log(changes);\n     * });\n     * user.on('change:role', function (user, value) {\n     *   console.log('change:role - ' + value);\n     * });\n     * user.role = 'owner';\n     *\n     * @name Mapper#schema\n     * @see Schema\n     * @since 3.0.0\n     * @type {Schema}\n     */\n    schema: {\n      value: undefined,\n      writable: true\n    }\n  })\n\n  // Move relationship types out of the opts for later use.\n  const relationshipTypes = opts._relationshipTypes || MAPPER_DEFAULTS._relationshipTypes\n  delete opts._relationshipTypes\n\n  // Apply user-provided configuration\n  utils.fillIn(this, opts)\n  // Fill in any missing options with the defaults\n  utils.fillIn(this, utils.copy(MAPPER_DEFAULTS))\n\n  /**\n   * The name for this Mapper. This is the minimum amount of meta information\n   * required for a Mapper to be able to execute CRUD operations for a\n   * Resource.\n   *\n   * @name Mapper#name\n   * @since 3.0.0\n   * @type {string}\n   */\n  if (!this.name) {\n    throw utils.err(`new ${DOMAIN}`, 'opts.name')(400, 'string', this.name)\n  }\n\n  // Setup schema, with an empty default schema if necessary\n  if (this.schema) {\n    this.schema.type || (this.schema.type = 'object')\n    if (!(this.schema instanceof Schema)) {\n      this.schema = new Schema(this.schema || { type: 'object' })\n    }\n  }\n\n  // Create a subclass of Record that's tied to this Mapper\n  if (this.recordClass === undefined) {\n    const superClass = Record\n    this.recordClass = superClass.extend({\n      constructor: (function Record () {\n        var subClass = function Record (props, opts) {\n          utils.classCallCheck(this, subClass)\n          superClass.call(this, props, opts)\n        }\n        return subClass\n      })()\n    })\n  }\n\n  if (this.recordClass) {\n    this.recordClass.mapper = this\n\n    /**\n     * Functions that should be added to the prototype of {@link Mapper#recordClass}.\n     *\n     * @name Mapper#methods\n     * @since 3.0.0\n     * @type {Object}\n     */\n    if (utils.isObject(this.methods)) {\n      utils.addHiddenPropsToTarget(this.recordClass.prototype, this.methods)\n    }\n\n    // We can only apply the schema to the prototype of this.recordClass if the\n    // class extends Record\n    if (Object.isPrototypeOf.call(Record, this.recordClass) && this.schema && this.schema.apply && this.applySchema) {\n      this.schema.apply(this.recordClass.prototype)\n    }\n  }\n\n  // Create instatiator functions for each relationship type.\n  utils.forOwn(relationshipTypes, (relDef, typeName) => {\n    if (!Object.prototype.hasOwnProperty.call(this, typeName) && relDef.RelationshipClass) {\n      Object.defineProperty(this, typeName, {\n        value: (relatedMapper, def) => {\n          return new relDef.RelationshipClass(relatedMapper, def).assignTo(this)\n        }\n      })\n    }\n  })\n}\n\nexport default Component.extend({\n  constructor: Mapper,\n\n  /**\n   * Helper function that creates a notification function.\n   *\n   * @method Mapper#makeNotify\n   * @param {number} num The number of arguments the resultant notification function ignores.\n   * @since 3.1.0\n   */\n  makeNotify: makeNotify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#count}. If this method\n   * returns a promise then {@link Mapper#count} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterCount\n   * @param {object} query The `query` argument passed to {@link Mapper#count}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#count}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterCount: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#create}. If this method\n   * returns a promise then {@link Mapper#create} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterCreate\n   * @param {object} props The `props` argument passed to {@link Mapper#create}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#create}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterCreate: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#createMany}. If this method\n   * returns a promise then {@link Mapper#createMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterCreateMany\n   * @param {array} records The `records` argument passed to {@link Mapper#createMany}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#createMany}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterCreateMany: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroy}. If this method\n   * returns a promise then {@link Mapper#destroy} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterDestroy\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#destroy}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#destroy}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterDestroy: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroyAll}. If this method\n   * returns a promise then {@link Mapper#destroyAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterDestroyAll\n   * @param {*} data The `data` returned by the adapter.\n   * @param {query} query The `query` argument passed to {@link Mapper#destroyAll}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#destroyAll}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterDestroyAll: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#find}. If this method\n   * returns a promise then {@link Mapper#find} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterFind\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#find}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#find}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterFind: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#findAll}. If this method\n   * returns a promise then {@link Mapper#findAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterFindAll\n   * @param {object} query The `query` argument passed to {@link Mapper#findAll}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#findAll}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterFindAll: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#sum}. If this method\n   * returns a promise then {@link Mapper#sum} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterSum\n   * @param {object} query The `query` argument passed to {@link Mapper#sum}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#sum}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterSum: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#update}. If this method\n   * returns a promise then {@link Mapper#update} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterUpdate\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#update}.\n   * @param {props} props The `props` argument passed to {@link Mapper#update}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#update}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterUpdate: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateAll}. If this method\n   * returns a promise then {@link Mapper#updateAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterUpdateAll\n   * @param {object} props The `props` argument passed to {@link Mapper#updateAll}.\n   * @param {object} query The `query` argument passed to {@link Mapper#updateAll}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#updateAll}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterUpdateAll: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateMany}. If this method\n   * returns a promise then {@link Mapper#updateMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#afterUpdateMany\n   * @param {array} records The `records` argument passed to {@link Mapper#updateMany}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#updateMany}.\n   * @param {*} result The result, if any.\n   * @since 3.0.0\n   */\n  afterUpdateMany: notify2,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#create}. If this method\n   * returns a promise then {@link Mapper#create} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeCreate\n   * @param {object} props The `props` argument passed to {@link Mapper#create}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#create}.\n   * @since 3.0.0\n   */\n  beforeCreate: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#createMany}. If this method\n   * returns a promise then {@link Mapper#createMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeCreateMany\n   * @param {array} records The `records` argument passed to {@link Mapper#createMany}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#createMany}.\n   * @since 3.0.0\n   */\n  beforeCreateMany: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#count}. If this method\n   * returns a promise then {@link Mapper#count} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeCount\n   * @param {object} query The `query` argument passed to {@link Mapper#count}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#count}.\n   * @since 3.0.0\n   */\n  beforeCount: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroy}. If this method\n   * returns a promise then {@link Mapper#destroy} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeDestroy\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#destroy}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#destroy}.\n   * @since 3.0.0\n   */\n  beforeDestroy: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#destroyAll}. If this method\n   * returns a promise then {@link Mapper#destroyAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeDestroyAll\n   * @param {query} query The `query` argument passed to {@link Mapper#destroyAll}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#destroyAll}.\n   * @since 3.0.0\n   */\n  beforeDestroyAll: notify,\n\n  /**\n   * Mappers lifecycle hook called by {@link Mapper#find}. If this method\n   * returns a promise then {@link Mapper#find} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeFind\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#find}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#find}.\n   * @since 3.0.0\n   */\n  beforeFind: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#findAll}. If this method\n   * returns a promise then {@link Mapper#findAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeFindAll\n   * @param {object} query The `query` argument passed to {@link Mapper#findAll}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#findAll}.\n   * @since 3.0.0\n   */\n  beforeFindAll: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#sum}. If this method\n   * returns a promise then {@link Mapper#sum} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeSum\n   * @param {string} field The `field` argument passed to {@link Mapper#sum}.\n   * @param {object} query The `query` argument passed to {@link Mapper#sum}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#sum}.\n   * @since 3.0.0\n   */\n  beforeSum: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#update}. If this method\n   * returns a promise then {@link Mapper#update} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeUpdate\n   * @param {(string|number)} id The `id` argument passed to {@link Mapper#update}.\n   * @param {props} props The `props` argument passed to {@link Mapper#update}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#update}.\n   * @since 3.0.0\n   */\n  beforeUpdate: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateAll}. If this method\n   * returns a promise then {@link Mapper#updateAll} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeUpdateAll\n   * @param {object} props The `props` argument passed to {@link Mapper#updateAll}.\n   * @param {object} query The `query` argument passed to {@link Mapper#updateAll}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#updateAll}.\n   * @since 3.0.0\n   */\n  beforeUpdateAll: notify,\n\n  /**\n   * Mapper lifecycle hook called by {@link Mapper#updateMany}. If this method\n   * returns a promise then {@link Mapper#updateMany} will wait for the promise\n   * to resolve before continuing.\n   *\n   * @method Mapper#beforeUpdateMany\n   * @param {array} records The `records` argument passed to {@link Mapper#updateMany}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#updateMany}.\n   * @since 3.0.0\n   */\n  beforeUpdateMany: notify,\n\n  /**\n   * This method is called at the end of most lifecycle methods. It does the\n   * following:\n   *\n   * 1. If `opts.raw` is `true`, add this Mapper's configuration to the `opts`\n   * argument as metadata for the operation.\n   * 2. Wrap the result data appropriately using {@link Mapper#wrap}, which\n   * calls {@link Mapper#createRecord}.\n   *\n   * @method Mapper#_end\n   * @private\n   * @since 3.0.0\n   */\n  _end (result, opts, skip) {\n    if (opts.raw) {\n      utils._(result, opts)\n    }\n    if (skip) {\n      return result\n    }\n    let _data = opts.raw ? result.data : result\n    if (_data && utils.isFunction(this.wrap)) {\n      _data = this.wrap(_data, opts)\n      if (opts.raw) {\n        result.data = _data\n      } else {\n        result = _data\n      }\n    }\n    return result\n  },\n\n  /**\n   * Define a belongsTo relationship. Only useful if you're managing your\n   * Mappers manually and not using a Container or DataStore component.\n   *\n   * @example\n   * PostMapper.belongsTo(UserMapper, {\n   *   // post.user_id points to user.id\n   *   foreignKey: 'user_id'\n   *   // user records will be attached to post records at \"post.user\"\n   *   localField: 'user'\n   * });\n   *\n   * CommentMapper.belongsTo(UserMapper, {\n   *   // comment.user_id points to user.id\n   *   foreignKey: 'user_id'\n   *   // user records will be attached to comment records at \"comment.user\"\n   *   localField: 'user'\n   * });\n   * CommentMapper.belongsTo(PostMapper, {\n   *   // comment.post_id points to post.id\n   *   foreignKey: 'post_id'\n   *   // post records will be attached to comment records at \"comment.post\"\n   *   localField: 'post'\n   * });\n   *\n   * @method Mapper#belongsTo\n   * @see http://www.js-data.io/v3.0/docs/relations\n   * @since 3.0.0\n   */\n  belongsTo (relatedMapper, opts) {\n    return belongsTo(relatedMapper, opts)(this)\n  },\n\n  /**\n   * Select records according to the `query` argument and return the count.\n   *\n   * {@link Mapper#beforeCount} will be called before calling the adapter.\n   * {@link Mapper#afterCount} will be called after calling the adapter.\n   *\n   * @example\n   * // Get the number of published blog posts\n   * PostMapper.count({ status: 'published' }).then((numPublished) => {\n   *   console.log(numPublished); // e.g. 45\n   * });\n   *\n   * @method Mapper#count\n   * @param {object} [query={}] Selection query. See {@link query}.\n   * @param {object} [query.where] See {@link query.where}.\n   * @param {number} [query.offset] See {@link query.offset}.\n   * @param {number} [query.limit] See {@link query.limit}.\n   * @param {string|Array[]} [query.orderBy] See {@link query.orderBy}.\n   * @param {object} [opts] Configuration options. Refer to the `count` method\n   * of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @returns {Promise} Resolves with the count of the selected records.\n   * @since 3.0.0\n   */\n  count (query, opts) {\n    return this.crud('count', query, opts)\n  },\n\n  /**\n   * Fired during {@link Mapper#create}. See\n   * {@link Mapper~beforeCreateListener} for how to listen for this event.\n   *\n   * @event Mapper#beforeCreate\n   * @see Mapper~beforeCreateListener\n   * @see Mapper#create\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:beforeCreate} event.\n   *\n   * @example\n   * function onBeforeCreate (props, opts) {\n   *   // do something\n   * }\n   * store.on('beforeCreate', onBeforeCreate);\n   *\n   * @callback Mapper~beforeCreateListener\n   * @param {object} props The `props` argument passed to {@link Mapper#beforeCreate}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#beforeCreate}.\n   * @see Mapper#event:beforeCreate\n   * @see Mapper#create\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Mapper#create}. See\n   * {@link Mapper~afterCreateListener} for how to listen for this event.\n   *\n   * @event Mapper#afterCreate\n   * @see Mapper~afterCreateListener\n   * @see Mapper#create\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:afterCreate} event.\n   *\n   * @example\n   * function onAfterCreate (props, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterCreate', onAfterCreate);\n   *\n   * @callback Mapper~afterCreateListener\n   * @param {object} props The `props` argument passed to {@link Mapper#afterCreate}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#afterCreate}.\n   * @param {object} result The `result` argument passed to {@link Mapper#afterCreate}.\n   * @see Mapper#event:afterCreate\n   * @see Mapper#create\n   * @since 3.0.0\n   */\n  /**\n   * Create and save a new the record using the provided `props`.\n   *\n   * {@link Mapper#beforeCreate} will be called before calling the adapter.\n   * {@link Mapper#afterCreate} will be called after calling the adapter.\n   *\n   * @example\n   * // Create and save a new blog post\n   * PostMapper.create({\n   *   title: 'Modeling your data',\n   *   status: 'draft'\n   * }).then((post) => {\n   *   console.log(post); // { id: 1234, status: 'draft', ... }\n   * });\n   *\n   * @fires Mapper#beforeCreate\n   * @fires Mapper#afterCreate\n   * @method Mapper#create\n   * @param {object} props The properties for the new record.\n   * @param {object} [opts] Configuration options. Refer to the `create` method\n   * of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.noValidate={@link Mapper#noValidate}] See {@link Mapper#noValidate}.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @param {string[]} [opts.with=[]] Relations to create in a cascading\n   * create if `props` contains nested relations. NOT performed in a\n   * transaction. Each nested create will result in another {@link Mapper#create}\n   * or {@link Mapper#createMany} call.\n   * @param {string[]} [opts.pass=[]] Relations to send to the adapter as part\n   * of the payload. Normally relations are not sent.\n   * @returns {Promise} Resolves with the created record.\n   * @since 3.0.0\n   */\n  create (props, opts) {\n    // Default values for arguments\n    props || (props = {})\n    opts || (opts = {})\n    const originalRecord = props\n    let parentRelationMap = {}\n    let adapterResponse = {}\n\n    // Fill in \"opts\" with the Mapper's configuration\n    utils._(opts, this)\n    opts.adapter = this.getAdapterName(opts)\n\n    opts.op = 'beforeCreate'\n    return this._runHook(opts.op, props, opts).then((_value) => {\n      // Allow for re-assignment from lifecycle hook\n      props = _value !== undefined ? _value : props\n      opts.with || (opts.with = [])\n      return this._createParentRecordIfRequired(props, opts)\n    }).then((relationMap) => {\n      parentRelationMap = relationMap\n    }).then(() => {\n      opts.op = 'create'\n      return this._invokeAdapterMethod(opts.op, props, opts)\n    }).then((result) => {\n      adapterResponse = result\n    }).then(() => {\n      const createdProps = opts.raw ? adapterResponse.data : adapterResponse\n\n      return this._createOrAssignChildRecordIfRequired(createdProps, {\n        opts,\n        parentRelationMap,\n        originalProps: props\n      })\n    }).then((createdProps) => {\n      return this._commitChanges(originalRecord, createdProps)\n    }).then((record) => {\n      if (opts.raw) {\n        adapterResponse.data = record\n      } else {\n        adapterResponse = record\n      }\n      const result = this._end(adapterResponse, opts)\n      opts.op = 'afterCreate'\n      return this._runHook(opts.op, props, opts, result)\n    })\n  },\n\n  _commitChanges (recordOrRecords, newValues) {\n    if (utils.isArray(recordOrRecords)) {\n      return recordOrRecords.map((record, i) => this._commitChanges(record, newValues[i]))\n    }\n\n    utils.set(recordOrRecords, newValues, { silent: true })\n\n    if (utils.isFunction(recordOrRecords.commit)) {\n      recordOrRecords.commit()\n    }\n\n    return recordOrRecords\n  },\n\n  /**\n   * Use {@link Mapper#createRecord} instead.\n   * @deprecated\n   * @method Mapper#createInstance\n   * @param {Object|Array} props See {@link Mapper#createRecord}.\n   * @param {object} [opts] See {@link Mapper#createRecord}.\n   * @returns {Object|Array} See {@link Mapper#createRecord}.\n   * @see Mapper#createRecord\n   * @since 3.0.0\n   */\n  createInstance (props, opts) {\n    return this.createRecord(props, opts)\n  },\n\n  /**\n   * Creates parent record for relation types like BelongsTo or HasMany with localKeys\n   * in order to satisfy foreignKey dependency (so called child records).\n   * @param {object} props See {@link Mapper#create}.\n   * @param {object} opts See {@link Mapper#create}.\n   * @returns {Object} cached parent records map\n   * @see Mapper#create\n   * @since 3.0.0\n   */\n  _createParentRecordIfRequired (props, opts) {\n    const tasks = []\n    const relations = []\n\n    utils.forEachRelation(this, opts, (def, optsCopy) => {\n      if (!def.isRequiresParentId() || !def.getLocalField(props)) {\n        return\n      }\n\n      optsCopy.raw = false\n      relations.push(def)\n      tasks.push(def.createParentRecord(props, optsCopy))\n    })\n\n    return utils.Promise.all(tasks).then(records => {\n      return relations.reduce((map, relation, index) => {\n        relation.setLocalField(map, records[index])\n        return map\n      }, {})\n    })\n  },\n\n  /**\n   * Creates child record for relation types like HasOne or HasMany with foreignKey\n   * in order to satisfy foreignKey dependency (so called parent records).\n   * @param {object} props See {@link Mapper#create}.\n   * @param {object} context contains collected information.\n   * @param {object} context.opts See {@link Mapper#create}.\n   * @param {object} context.parentRelationMap contains parent records map\n   * @param {object} context.originalProps contains data passed into {@link Mapper#create} method\n   * @return {Promise} updated props\n   * @see Mapper#create\n   * @since 3.0.0\n   */\n  _createOrAssignChildRecordIfRequired (props, context) {\n    const tasks = []\n\n    utils.forEachRelation(this, context.opts, (def, optsCopy) => {\n      const relationData = def.getLocalField(context.originalProps)\n\n      if (!relationData) {\n        return\n      }\n\n      optsCopy.raw = false\n      // Create hasMany and hasOne after the main create because we needed\n      // a generated id to attach to these items\n      if (def.isRequiresChildId()) {\n        tasks.push(def.createChildRecord(props, relationData, optsCopy))\n      } else if (def.isRequiresParentId()) {\n        const parent = def.getLocalField(context.parentRelationMap)\n\n        if (parent) {\n          def.setLocalField(props, parent)\n        }\n      }\n    })\n\n    return utils.Promise.all(tasks)\n      .then(() => props)\n  },\n\n  /**\n   * Fired during {@link Mapper#createMany}. See\n   * {@link Mapper~beforeCreateManyListener} for how to listen for this event.\n   *\n   * @event Mapper#beforeCreateMany\n   * @see Mapper~beforeCreateManyListener\n   * @see Mapper#createMany\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:beforeCreateMany} event.\n   *\n   * @example\n   * function onBeforeCreateMany (records, opts) {\n   *   // do something\n   * }\n   * store.on('beforeCreateMany', onBeforeCreateMany);\n   *\n   * @callback Mapper~beforeCreateManyListener\n   * @param {object} records The `records` argument received by {@link Mapper#beforeCreateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeCreateMany}.\n   * @see Mapper#event:beforeCreateMany\n   * @see Mapper#createMany\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Mapper#createMany}. See\n   * {@link Mapper~afterCreateManyListener} for how to listen for this event.\n   *\n   * @event Mapper#afterCreateMany\n   * @see Mapper~afterCreateManyListener\n   * @see Mapper#createMany\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:afterCreateMany} event.\n   *\n   * @example\n   * function onAfterCreateMany (records, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterCreateMany', onAfterCreateMany);\n   *\n   * @callback Mapper~afterCreateManyListener\n   * @param {object} records The `records` argument received by {@link Mapper#afterCreateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterCreateMany}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterCreateMany}.\n   * @see Mapper#event:afterCreateMany\n   * @see Mapper#createMany\n   * @since 3.0.0\n   */\n  /**\n   * Given an array of records, batch create them via an adapter.\n   *\n   * {@link Mapper#beforeCreateMany} will be called before calling the adapter.\n   * {@link Mapper#afterCreateMany} will be called after calling the adapter.\n   *\n   * @example\n   * // Create and save several new blog posts\n   * PostMapper.createMany([{\n   *   title: 'Modeling your data',\n   *   status: 'draft'\n   * }, {\n   *   title: 'Reading data',\n   *   status: 'draft'\n   * }]).then((posts) => {\n   *   console.log(posts[0]); // { id: 1234, status: 'draft', ... }\n   *   console.log(posts[1]); // { id: 1235, status: 'draft', ... }\n   * });\n   *\n   * @fires Mapper#beforeCreate\n   * @fires Mapper#afterCreate\n   * @method Mapper#createMany\n   * @param {Record[]} records Array of records to be created in one batch.\n   * @param {object} [opts] Configuration options. Refer to the `createMany`\n   * method of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.noValidate={@link Mapper#noValidate}] See {@link Mapper#noValidate}.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @param {string[]} [opts.with=[]] Relations to create in a cascading\n   * create if `records` contains nested relations. NOT performed in a\n   * transaction. Each nested create will result in another {@link Mapper#createMany}\n   * call.\n   * @param {string[]} [opts.pass=[]] Relations to send to the adapter as part\n   * of the payload. Normally relations are not sent.\n   * @returns {Promise} Resolves with the created records.\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/saving-data\",\"Saving data\"]\n   */\n  createMany (records, opts) {\n    // Default values for arguments\n    records || (records = [])\n    opts || (opts = {})\n    const originalRecords = records\n    let adapterResponse\n\n    // Fill in \"opts\" with the Mapper's configuration\n    utils._(opts, this)\n    opts.adapter = this.getAdapterName(opts)\n\n    // beforeCreateMany lifecycle hook\n    opts.op = 'beforeCreateMany'\n    return this._runHook(opts.op, records, opts).then((_recordValues) => {\n      // Allow for re-assignment from lifecycle hook\n      records = _recordValues !== undefined ? _recordValues : records\n      // Deep pre-create belongsTo relations\n      const belongsToRelationData = {}\n      opts.with || (opts.with = [])\n      let tasks = []\n      utils.forEachRelation(this, opts, (def, optsCopy) => {\n        const relationData = records\n          .map((record) => def.getLocalField(record))\n          .filter(Boolean)\n        if (def.type === belongsToType && relationData.length === records.length) {\n          // Create belongsTo relation first because we need a generated id to\n          // attach to the child\n          optsCopy.raw = false\n          tasks.push(def.createLinked(relationData, optsCopy).then((relatedRecords) => {\n            records.forEach((record, i) => def.setForeignKey(record, relatedRecords[i]))\n          }).then((relatedRecords) => {\n            def.setLocalField(belongsToRelationData, relatedRecords)\n          }))\n        }\n      })\n      return utils.Promise.all(tasks).then(() => {\n        opts.op = 'createMany'\n        return this._invokeAdapterMethod(opts.op, records, opts)\n      }).then((result) => {\n        adapterResponse = result\n      }).then(() => {\n        const createdRecordsData = opts.raw ? adapterResponse.data : adapterResponse\n\n        // Deep post-create hasOne relations\n        tasks = []\n        utils.forEachRelation(this, opts, (def, optsCopy) => {\n          const relationData = records\n            .map((record) => def.getLocalField(record))\n            .filter(Boolean)\n          if (relationData.length !== records.length) {\n            return\n          }\n\n          optsCopy.raw = false\n          const belongsToData = def.getLocalField(belongsToRelationData)\n          let task\n          // Create hasMany and hasOne after the main create because we needed\n          // a generated id to attach to these items\n          if (def.type === hasManyType) {\n            // Not supported\n            this.log('warn', 'deep createMany of hasMany type not supported!')\n          } else if (def.type === hasOneType) {\n            createdRecordsData.forEach((createdRecordData, i) => {\n              def.setForeignKey(createdRecordData, relationData[i])\n            })\n            task = def.getRelation().createMany(relationData, optsCopy).then((relatedData) => {\n              createdRecordsData.forEach((createdRecordData, i) => {\n                def.setLocalField(createdRecordData, relatedData[i])\n              })\n            })\n          } else if (def.type === belongsToType && belongsToData && belongsToData.length === createdRecordsData.length) {\n            createdRecordsData.forEach((createdRecordData, i) => {\n              def.setLocalField(createdRecordData, belongsToData[i])\n            })\n          }\n          if (task) {\n            tasks.push(task)\n          }\n        })\n        return utils.Promise.all(tasks).then(() => {\n          return this._commitChanges(originalRecords, createdRecordsData)\n        })\n      })\n    }).then((records) => {\n      if (opts.raw) {\n        adapterResponse.data = records\n      } else {\n        adapterResponse = records\n      }\n      const result = this._end(adapterResponse, opts)\n      opts.op = 'afterCreateMany'\n      return this._runHook(opts.op, records, opts, result)\n    })\n  },\n\n  /**\n   * Create an unsaved, uncached instance of this Mapper's\n   * {@link Mapper#recordClass}.\n   *\n   * Returns `props` if `props` is already an instance of\n   * {@link Mapper#recordClass}.\n   *\n   * __Note:__ This method does __not__ interact with any adapter, and does\n   * __not__ save any data. It only creates new objects in memory.\n   *\n   * @example\n   * // Create empty unsaved record instance\n   * const post = PostMapper.createRecord();\n   *\n   * @example\n   * // Create an unsaved record instance with inital properties\n   * const post = PostMapper.createRecord({\n   *   title: 'Modeling your data',\n   *   status: 'draft'\n   * });\n   *\n   * @example\n   * // Create a record instance that corresponds to a saved record\n   * const post = PostMapper.createRecord({\n   *   // JSData thinks this record has been saved if it has a primary key\n   *   id: 1234,\n   *   title: 'Modeling your data',\n   *   status: 'draft'\n   * });\n   *\n   * @example\n   * // Create record instances from an array\n   * const posts = PostMapper.createRecord([{\n   *   title: 'Modeling your data',\n   *   status: 'draft'\n   * }, {\n   *   title: 'Reading data',\n   *   status: 'draft'\n   * }]);\n   *\n   * @example\n   * // Records are validated by default\n   * import { Mapper } from 'js-data';\n   * const PostMapper = new Mapper({\n   *   name: 'post',\n   *   schema: { properties: { title: { type: 'string' } } }\n   * });\n   * try {\n   *   const post = PostMapper.createRecord({\n   *     title: 1234,\n   *   });\n   * } catch (err) {\n   *   console.log(err.errors); // [{ expected: 'one of (string)', actual: 'number', path: 'title' }]\n   * }\n   *\n   * @example\n   * // Skip validation\n   * import { Mapper } from 'js-data';\n   * const PostMapper = new Mapper({\n   *   name: 'post',\n   *   schema: { properties: { title: { type: 'string' } } }\n   * });\n   * const post = PostMapper.createRecord({\n   *   title: 1234,\n   * }, { noValidate: true });\n   * console.log(post.isValid()); // false\n   *\n   * @method Mapper#createRecord\n   * @param {Object|Object[]} props The properties for the Record instance or an\n   * array of property objects for the Record instances.\n   * @param {object} [opts] Configuration options.\n   * @param {boolean} [opts.noValidate={@link Mapper#noValidate}] See {@link Mapper#noValidate}.\n   * @returns {Record|Record[]} The Record instance or Record instances.\n   * @since 3.0.0\n   */\n  createRecord (props, opts) {\n    props || (props = {})\n    if (utils.isArray(props)) {\n      return props.map((_props) => this.createRecord(_props, opts))\n    }\n    if (!utils.isObject(props)) {\n      throw utils.err(`${DOMAIN}#createRecord`, 'props')(400, 'array or object', props)\n    }\n\n    if (this.relationList) {\n      this.relationList.forEach(function (def) {\n        def.ensureLinkedDataHasProperType(props, opts)\n      })\n    }\n    const RecordCtor = this.recordClass\n\n    return (!RecordCtor || props instanceof RecordCtor) ? props : new RecordCtor(props, opts)\n  },\n\n  /**\n   * Lifecycle invocation method. You probably won't call this method directly.\n   *\n   * @method Mapper#crud\n   * @param {string} method Name of the lifecycle method to invoke.\n   * @param {...*} args Arguments to pass to the lifecycle method.\n   * @returns {Promise}\n   * @since 3.0.0\n   */\n  crud (method, ...args) {\n    const config = this.lifecycleMethods[method]\n    if (!config) {\n      throw utils.err(`${DOMAIN}#crud`, method)(404, 'method')\n    }\n\n    const upper = `${method.charAt(0).toUpperCase()}${method.substr(1)}`\n    const before = `before${upper}`\n    const after = `after${upper}`\n\n    let op\n\n    // Default values for arguments\n    config.defaults.forEach((value, i) => {\n      if (args[i] === undefined) {\n        args[i] = utils.copy(value)\n      }\n    })\n\n    const opts = args[args.length - 1]\n\n    // Fill in \"opts\" with the Mapper's configuration\n    utils._(opts, this)\n    const adapter = opts.adapter = this.getAdapterName(opts)\n\n    // before lifecycle hook\n    op = opts.op = before\n    return utils.resolve(this[op](...args)).then((_value) => {\n      if (args[config.beforeAssign] !== undefined) {\n        // Allow for re-assignment from lifecycle hook\n        args[config.beforeAssign] = _value === undefined ? args[config.beforeAssign] : _value\n      }\n      // Now delegate to the adapter\n      op = opts.op = method\n      args = config.adapterArgs ? config.adapterArgs(this, ...args) : args\n      this.dbg(op, ...args)\n      return utils.resolve(this.getAdapter(adapter)[op](this, ...args))\n    }).then((result) => {\n      // force noValidate on find/findAll\n      const noValidate = /find/.test(op) || opts.noValidate\n      const _opts = Object.assign({}, opts, { noValidate })\n\n      result = this._end(result, _opts, !!config.skip)\n      args.push(result)\n      // after lifecycle hook\n      op = opts.op = after\n      return utils.resolve(this[op](...args)).then((_result) => {\n        // Allow for re-assignment from lifecycle hook\n        return _result === undefined ? result : _result\n      })\n    })\n  },\n\n  /**\n   * Fired during {@link Mapper#destroy}. See\n   * {@link Mapper~beforeDestroyListener} for how to listen for this event.\n   *\n   * @event Mapper#beforeDestroy\n   * @see Mapper~beforeDestroyListener\n   * @see Mapper#destroy\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:beforeDestroy} event.\n   *\n   * @example\n   * function onBeforeDestroy (id, opts) {\n   *   // do something\n   * }\n   * store.on('beforeDestroy', onBeforeDestroy);\n   *\n   * @callback Mapper~beforeDestroyListener\n   * @param {string|number} id The `id` argument passed to {@link Mapper#beforeDestroy}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#beforeDestroy}.\n   * @see Mapper#event:beforeDestroy\n   * @see Mapper#destroy\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Mapper#destroy}. See\n   * {@link Mapper~afterDestroyListener} for how to listen for this event.\n   *\n   * @event Mapper#afterDestroy\n   * @see Mapper~afterDestroyListener\n   * @see Mapper#destroy\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:afterDestroy} event.\n   *\n   * @example\n   * function onAfterDestroy (id, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterDestroy', onAfterDestroy);\n   *\n   * @callback Mapper~afterDestroyListener\n   * @param {string|number} id The `id` argument passed to {@link Mapper#afterDestroy}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#afterDestroy}.\n   * @param {object} result The `result` argument passed to {@link Mapper#afterDestroy}.\n   * @see Mapper#event:afterDestroy\n   * @see Mapper#destroy\n   * @since 3.0.0\n   */\n  /**\n   * Using an adapter, destroy the record with the given primary key.\n   *\n   * {@link Mapper#beforeDestroy} will be called before destroying the record.\n   * {@link Mapper#afterDestroy} will be called after destroying the record.\n   *\n   * @example\n   * // Destroy a specific blog post\n   * PostMapper.destroy(1234).then(() => {\n   *   // Blog post #1234 has been destroyed\n   * });\n   *\n   * @example\n   * // Get full response\n   * PostMapper.destroy(1234, { raw: true }).then((result) => {\n   *   console.log(result.deleted); e.g. 1\n   *   console.log(...); // etc., more metadata can be found on the result\n   * });\n   *\n   * @fires Mapper#beforeDestroy\n   * @fires Mapper#afterDestroy\n   * @method Mapper#destroy\n   * @param {(string|number)} id The primary key of the record to destroy.\n   * @param {object} [opts] Configuration options. Refer to the `destroy` method\n   * of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @returns {Promise} Resolves when the record has been destroyed. Resolves\n   * even if no record was found to be destroyed.\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/saving-data\",\"Saving data\"]\n   */\n  destroy (id, opts) {\n    return this.crud('destroy', id, opts)\n  },\n\n  /**\n   * Fired during {@link Mapper#destroyAll}. See\n   * {@link Mapper~beforeDestroyAllListener} for how to listen for this event.\n   *\n   * @event Mapper#beforeDestroyAll\n   * @see Mapper~beforeDestroyAllListener\n   * @see Mapper#destroyAll\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:beforeDestroyAll} event.\n   *\n   * @example\n   * function onBeforeDestroyAll (query, opts) {\n   *   // do something\n   * }\n   * store.on('beforeDestroyAll', onBeforeDestroyAll);\n   *\n   * @callback Mapper~beforeDestroyAllListener\n   * @param {object} query The `query` argument passed to {@link Mapper#beforeDestroyAll}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#beforeDestroyAll}.\n   * @see Mapper#event:beforeDestroyAll\n   * @see Mapper#destroyAll\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Mapper#destroyAll}. See\n   * {@link Mapper~afterDestroyAllListener} for how to listen for this event.\n   *\n   * @event Mapper#afterDestroyAll\n   * @see Mapper~afterDestroyAllListener\n   * @see Mapper#destroyAll\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:afterDestroyAll} event.\n   *\n   * @example\n   * function onAfterDestroyAll (query, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterDestroyAll', onAfterDestroyAll);\n   *\n   * @callback Mapper~afterDestroyAllListener\n   * @param {object} query The `query` argument passed to {@link Mapper#afterDestroyAll}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#afterDestroyAll}.\n   * @param {object} result The `result` argument passed to {@link Mapper#afterDestroyAll}.\n   * @see Mapper#event:afterDestroyAll\n   * @see Mapper#destroyAll\n   * @since 3.0.0\n   */\n  /**\n   * Destroy the records selected by `query` via an adapter. If no `query` is\n   * provided then all records will be destroyed.\n   *\n   * {@link Mapper#beforeDestroyAll} will be called before destroying the records.\n   * {@link Mapper#afterDestroyAll} will be called after destroying the records.\n   *\n   * @example\n   * // Destroy all blog posts\n   * PostMapper.destroyAll().then(() => {\n   *   // All blog posts have been destroyed\n   * });\n   *\n   * @example\n   * // Destroy all \"draft\" blog posts\n   * PostMapper.destroyAll({ status: 'draft' }).then(() => {\n   *   // All \"draft\" blog posts have been destroyed\n   * });\n   *\n   * @example\n   * // Get full response\n   * const query = null;\n   * const options = { raw: true };\n   * PostMapper.destroyAll(query, options).then((result) => {\n   *   console.log(result.deleted); e.g. 14\n   *   console.log(...); // etc., more metadata can be found on the result\n   * });\n   *\n   * @fires Mapper#beforeDestroyAll\n   * @fires Mapper#afterDestroyAll\n   * @method Mapper#destroyAll\n   * @param {object} [query={}] Selection query. See {@link query}.\n   * @param {object} [query.where] See {@link query.where}.\n   * @param {number} [query.offset] See {@link query.offset}.\n   * @param {number} [query.limit] See {@link query.limit}.\n   * @param {string|Array[]} [query.orderBy] See {@link query.orderBy}.\n   * @param {object} [opts] Configuration options. Refer to the `destroyAll`\n   * method of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @returns {Promise} Resolves when the records have been destroyed. Resolves\n   * even if no records were found to be destroyed.\n   * @see query\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/saving-data\",\"Saving data\"]\n   */\n  destroyAll (query, opts) {\n    return this.crud('destroyAll', query, opts)\n  },\n\n  /**\n   * Fired during {@link Mapper#find}. See\n   * {@link Mapper~beforeFindListener} for how to listen for this event.\n   *\n   * @event Mapper#beforeFind\n   * @see Mapper~beforeFindListener\n   * @see Mapper#find\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:beforeFind} event.\n   *\n   * @example\n   * function onBeforeFind (id, opts) {\n   *   // do something\n   * }\n   * store.on('beforeFind', onBeforeFind);\n   *\n   * @callback Mapper~beforeFindListener\n   * @param {string|number} id The `id` argument passed to {@link Mapper#beforeFind}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#beforeFind}.\n   * @see Mapper#event:beforeFind\n   * @see Mapper#find\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Mapper#find}. See\n   * {@link Mapper~afterFindListener} for how to listen for this event.\n   *\n   * @event Mapper#afterFind\n   * @see Mapper~afterFindListener\n   * @see Mapper#find\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:afterFind} event.\n   *\n   * @example\n   * function onAfterFind (id, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterFind', onAfterFind);\n   *\n   * @callback Mapper~afterFindListener\n   * @param {string|number} id The `id` argument passed to {@link Mapper#afterFind}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#afterFind}.\n   * @param {object} result The `result` argument passed to {@link Mapper#afterFind}.\n   * @see Mapper#event:afterFind\n   * @see Mapper#find\n   * @since 3.0.0\n   */\n  /**\n   * Retrieve via an adapter the record with the given primary key.\n   *\n   * {@link Mapper#beforeFind} will be called before calling the adapter.\n   * {@link Mapper#afterFind} will be called after calling the adapter.\n   *\n   * @example\n   * PostMapper.find(1).then((post) => {\n   *   console.log(post); // { id: 1, ...}\n   * });\n   *\n   * @example\n   * // Get full response\n   * PostMapper.find(1, { raw: true }).then((result) => {\n   *   console.log(result.data); // { id: 1, ...}\n   *   console.log(result.found); // 1\n   *   console.log(...); // etc., more metadata can be found on the result\n   * });\n   *\n   * @fires Mapper#beforeFind\n   * @fires Mapper#afterFind\n   * @method Mapper#find\n   * @param {(string|number)} id The primary key of the record to retrieve.\n   * @param {object} [opts] Configuration options. Refer to the `find` method\n   * of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @param {string[]} [opts.with=[]] Relations to eager load in the request.\n   * @returns {Promise} Resolves with the found record. Resolves with\n   * `undefined` if no record was found.\n   * @see http://www.js-data.io/v3.0/docs/reading-data\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/reading-data\",\"Reading data\"]\n   */\n  find (id, opts) {\n    return this.crud('find', id, opts)\n  },\n\n  /**\n   * Fired during {@link Mapper#findAll}. See\n   * {@link Mapper~beforeFindAllListener} for how to listen for this event.\n   *\n   * @event Mapper#beforeFindAll\n   * @see Mapper~beforeFindAllListener\n   * @see Mapper#findAll\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:beforeFindAll} event.\n   *\n   * @example\n   * function onBeforeFindAll (query, opts) {\n   *   // do something\n   * }\n   * store.on('beforeFindAll', onBeforeFindAll);\n   *\n   * @callback Mapper~beforeFindAllListener\n   * @param {object} query The `query` argument passed to {@link Mapper#beforeFindAll}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#beforeFindAll}.\n   * @see Mapper#event:beforeFindAll\n   * @see Mapper#findAll\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Mapper#findAll}. See\n   * {@link Mapper~afterFindAllListener} for how to listen for this event.\n   *\n   * @event Mapper#afterFindAll\n   * @see Mapper~afterFindAllListener\n   * @see Mapper#findAll\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:afterFindAll} event.\n   *\n   * @example\n   * function onAfterFindAll (query, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterFindAll', onAfterFindAll);\n   *\n   * @callback Mapper~afterFindAllListener\n   * @param {object} query The `query` argument passed to {@link Mapper#afterFindAll}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#afterFindAll}.\n   * @param {object} result The `result` argument passed to {@link Mapper#afterFindAll}.\n   * @see Mapper#event:afterFindAll\n   * @see Mapper#findAll\n   * @since 3.0.0\n   */\n  /**\n   * Using the `query` argument, select records to retrieve via an adapter.\n   *\n   * {@link Mapper#beforeFindAll} will be called before calling the adapter.\n   * {@link Mapper#afterFindAll} will be called after calling the adapter.\n   *\n   * @example\n   * // Find all \"published\" blog posts\n   * PostMapper.findAll({ status: 'published' }).then((posts) => {\n   *   console.log(posts); // [{ id: 1, status: 'published', ...}, ...]\n   * });\n   *\n   * @example\n   * // Get full response\n   * PostMapper.findAll({ status: 'published' }, { raw: true }).then((result) => {\n   *   console.log(result.data); // [{ id: 1, status: 'published', ...}, ...]\n   *   console.log(result.found); // e.g. 13\n   *   console.log(...); // etc., more metadata can be found on the result\n   * });\n   *\n   * @fires Mapper#beforeFindAll\n   * @fires Mapper#afterFindAll\n   * @method Mapper#findAll\n   * @param {object} [query={}] Selection query. See {@link query}.\n   * @param {object} [query.where] See {@link query.where}.\n   * @param {number} [query.offset] See {@link query.offset}.\n   * @param {number} [query.limit] See {@link query.limit}.\n   * @param {string|Array[]} [query.orderBy] See {@link query.orderBy}.\n   * @param {object} [opts] Configuration options. Refer to the `findAll` method\n   * of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @param {string[]} [opts.with=[]] Relations to eager load in the request.\n   * @returns {Promise} Resolves with the found records, if any.\n   * @see query\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/reading-data\",\"Reading data\"]\n   */\n  findAll (query, opts) {\n    return this.crud('findAll', query, opts)\n  },\n\n  /**\n   * Return the registered adapter with the given name or the default adapter if\n   * no name is provided.\n   *\n   * @method Mapper#getAdapter\n   * @param {string} [name] The name of the adapter to retrieve.\n   * @returns {Adapter} The adapter.\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/connecting-to-a-data-source\",\"Connecting to a data source\"]\n   */\n  getAdapter (name) {\n    this.dbg('getAdapter', 'name:', name)\n    const adapter = this.getAdapterName(name)\n    if (!adapter) {\n      throw utils.err(`${DOMAIN}#getAdapter`, 'name')(400, 'string', name)\n    }\n    return this.getAdapters()[adapter]\n  },\n\n  /**\n   * Return the name of a registered adapter based on the given name or options,\n   * or the name of the default adapter if no name provided.\n   *\n   * @method Mapper#getAdapterName\n   * @param {(Object|string)} [opts] The name of an adapter or options, if any.\n   * @returns {string} The name of the adapter.\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/connecting-to-a-data-source\",\"Connecting to a data source\"]\n   */\n  getAdapterName (opts) {\n    opts || (opts = {})\n    if (utils.isString(opts)) {\n      opts = { adapter: opts }\n    }\n    return opts.adapter || opts.defaultAdapter\n  },\n\n  /**\n   * Get the object of registered adapters for this Mapper.\n   *\n   * @method Mapper#getAdapters\n   * @returns {Object} {@link Mapper#_adapters}\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/connecting-to-a-data-source\",\"Connecting to a data source\"]\n   */\n  getAdapters () {\n    return this._adapters\n  },\n\n  /**\n   * Returns this Mapper's {@link Schema}.\n   *\n   * @method Mapper#getSchema\n   * @returns {Schema} This Mapper's {@link Schema}.\n   * @see Mapper#schema\n   * @since 3.0.0\n   */\n  getSchema () {\n    return this.schema\n  },\n\n  /**\n   * Defines a hasMany relationship. Only useful if you're managing your\n   * Mappers manually and not using a Container or DataStore component.\n   *\n   * @example\n   * UserMapper.hasMany(PostMapper, {\n   *   // post.user_id points to user.id\n   *   foreignKey: 'user_id'\n   *   // post records will be attached to user records at \"user.posts\"\n   *   localField: 'posts'\n   * });\n   *\n   * @method Mapper#hasMany\n   * @see http://www.js-data.io/v3.0/docs/relations\n   * @since 3.0.0\n   */\n  hasMany (relatedMapper, opts) {\n    return hasMany(relatedMapper, opts)(this)\n  },\n\n  /**\n   * Defines a hasOne relationship. Only useful if you're managing your Mappers\n   * manually and not using a {@link Container} or {@link DataStore} component.\n   *\n   * @example\n   * UserMapper.hasOne(ProfileMapper, {\n   *   // profile.user_id points to user.id\n   *   foreignKey: 'user_id'\n   *   // profile records will be attached to user records at \"user.profile\"\n   *   localField: 'profile'\n   * });\n   *\n   * @method Mapper#hasOne\n   * @see http://www.js-data.io/v3.0/docs/relations\n   * @since 3.0.0\n   */\n  hasOne (relatedMapper, opts) {\n    return hasOne(relatedMapper, opts)(this)\n  },\n\n  /**\n   * Return whether `record` is an instance of this Mapper's recordClass.\n   *\n   * @example\n   * const post = PostMapper.createRecord();\n   *\n   * console.log(PostMapper.is(post)); // true\n   * // Equivalent to what's above\n   * console.log(post instanceof PostMapper.recordClass); // true\n   *\n   * @method Mapper#is\n   * @param {Object|Record} record The record to check.\n   * @returns {boolean} Whether `record` is an instance of this Mapper's\n   * {@link Mapper#recordClass}.\n   * @since 3.0.0\n   */\n  is (record) {\n    const recordClass = this.recordClass\n    return recordClass ? record instanceof recordClass : false\n  },\n\n  /**\n   * Register an adapter on this Mapper under the given name.\n   *\n   * @method Mapper#registerAdapter\n   * @param {string} name The name of the adapter to register.\n   * @param {Adapter} adapter The adapter to register.\n   * @param {object} [opts] Configuration options.\n   * @param {boolean} [opts.default=false] Whether to make the adapter the\n   * default adapter for this Mapper.\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/connecting-to-a-data-source\",\"Connecting to a data source\"]\n   */\n  registerAdapter (name, adapter, opts) {\n    opts || (opts = {})\n    this.getAdapters()[name] = adapter\n    // Optionally make it the default adapter for the target.\n    if (opts === true || opts.default) {\n      this.defaultAdapter = name\n    }\n  },\n\n  _runHook (hookName, ...hookArgs) {\n    const defaultValueIndex = hookName.indexOf('after') === 0 ? hookArgs.length - 1 : 0\n\n    return utils.resolve(this[hookName](...hookArgs))\n      .then((overridenResult) => overridenResult === undefined ? hookArgs[defaultValueIndex] : overridenResult)\n  },\n\n  _invokeAdapterMethod (method, propsOrRecords, opts) {\n    const conversionOptions = { with: opts.pass || [] }\n    let object\n\n    this.dbg(opts.op, propsOrRecords, opts)\n\n    if (utils.isArray(propsOrRecords)) {\n      object = propsOrRecords.map(record => this.toJSON(record, conversionOptions))\n    } else {\n      object = this.toJSON(propsOrRecords, conversionOptions)\n    }\n\n    return this.getAdapter(opts.adapter)[method](this, object, opts)\n  },\n\n  /**\n   * Select records according to the `query` argument, and aggregate the sum\n   * value of the property specified by `field`.\n   *\n   * {@link Mapper#beforeSum} will be called before calling the adapter.\n   * {@link Mapper#afterSum} will be called after calling the adapter.\n   *\n   * @example\n   * PurchaseOrderMapper.sum('amount', { status: 'paid' }).then((amountPaid) => {\n   *   console.log(amountPaid); // e.g. 451125.34\n   * });\n   *\n   * @method Mapper#sum\n   * @param {string} field The field to sum.\n   * @param {object} [query={}] Selection query. See {@link query}.\n   * @param {object} [query.where] See {@link query.where}.\n   * @param {number} [query.offset] See {@link query.offset}.\n   * @param {number} [query.limit] See {@link query.limit}.\n   * @param {string|Array[]} [query.orderBy] See {@link query.orderBy}.\n   * @param {object} [opts] Configuration options. Refer to the `sum` method\n   * of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @returns {Promise} Resolves with the aggregated sum.\n   * @since 3.0.0\n   */\n  sum (field, query, opts) {\n    return this.crud('sum', field, query, opts)\n  },\n\n  /**\n   * Return a plain object representation of the given record. Relations can\n   * be optionally be included. Non-schema properties can be excluded.\n   *\n   * @example\n   * import { Mapper, Schema } from 'js-data';\n   * const PersonMapper = new Mapper({\n   *   name: 'person',\n   *   schema: {\n   *     properties: {\n   *       name: { type: 'string' },\n   *       id: { type: 'string' }\n   *     }\n   *   }\n   * });\n   * const person = PersonMapper.createRecord({ id: 1, name: 'John', foo: 'bar' });\n   * // \"foo\" is stripped by toJSON()\n   * console.log(PersonMapper.toJSON(person)); // {\"id\":1,\"name\":\"John\"}\n   *\n   * const PersonRelaxedMapper = new Mapper({\n   *   name: 'personRelaxed',\n   *   schema: {\n   *     properties: {\n   *       name: { type: 'string' },\n   *       id: { type: 'string' }\n   *     },\n   *     additionalProperties: true\n   *   }\n   * });\n   * const person2 = PersonRelaxedMapper.createRecord({ id: 1, name: 'John', foo: 'bar' });\n   * // \"foo\" is not stripped by toJSON\n   * console.log(PersonRelaxedMapper.toJSON(person2)); // {\"id\":1,\"name\":\"John\",\"foo\":\"bar\"}\n   *\n   * @method Mapper#toJSON\n   * @param {Record|Record[]} records Record or records from which to create a\n   * POJO representation.\n   * @param {object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Array of relation names or relation fields\n   * to include in the POJO representation.\n   * @param {boolean} [opts.withAll] Whether to simply include all relations in\n   * the representation. Overrides `opts.with`.\n   * @returns {Object|Object[]} POJO representation of the record or records.\n   * @since 3.0.0\n   */\n  toJSON (records, opts) {\n    let record\n    opts || (opts = {})\n    if (utils.isArray(records)) {\n      return records.map((record) => this.toJSON(record, opts))\n    } else {\n      record = records\n    }\n    const relationFields = (this ? this.relationFields : []) || []\n    let json = {}\n\n    // Copy properties defined in the schema\n    if (this && this.schema) {\n      json = this.schema.pick(record)\n    } else {\n      for (var key in record) {\n        if (relationFields.indexOf(key) === -1) {\n          json[key] = utils.plainCopy(record[key])\n        }\n      }\n    }\n\n    // The user wants to include relations in the resulting plain object representation\n    if (this && opts.withAll) {\n      opts.with = relationFields.slice()\n    }\n    if (this && opts.with) {\n      if (utils.isString(opts.with)) {\n        opts.with = [opts.with]\n      }\n      utils.forEachRelation(this, opts, (def, optsCopy) => {\n        const relationData = def.getLocalField(record)\n        if (relationData) {\n          // The actual recursion\n          if (utils.isArray(relationData)) {\n            def.setLocalField(json, relationData.map((item) => {\n              return def.getRelation().toJSON(item, optsCopy)\n            }))\n          } else {\n            def.setLocalField(json, def.getRelation().toJSON(relationData, optsCopy))\n          }\n        }\n      })\n    }\n    return json\n  },\n\n  /**\n   * Fired during {@link Mapper#update}. See\n   * {@link Mapper~beforeUpdateListener} for how to listen for this event.\n   *\n   * @event Mapper#beforeUpdate\n   * @see Mapper~beforeUpdateListener\n   * @see Mapper#update\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:beforeUpdate} event.\n   *\n   * @example\n   * function onBeforeUpdate (id, props, opts) {\n   *   // do something\n   * }\n   * store.on('beforeUpdate', onBeforeUpdate);\n   *\n   * @callback Mapper~beforeUpdateListener\n   * @param {string|number} id The `id` argument passed to {@link Mapper#beforeUpdate}.\n   * @param {object} props The `props` argument passed to {@link Mapper#beforeUpdate}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#beforeUpdate}.\n   * @see Mapper#event:beforeUpdate\n   * @see Mapper#update\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Mapper#update}. See\n   * {@link Mapper~afterUpdateListener} for how to listen for this event.\n   *\n   * @event Mapper#afterUpdate\n   * @see Mapper~afterUpdateListener\n   * @see Mapper#update\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:afterUpdate} event.\n   *\n   * @example\n   * function onAfterUpdate (id, props, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterUpdate', onAfterUpdate);\n   *\n   * @callback Mapper~afterUpdateListener\n   * @param {string|number} id The `id` argument passed to {@link Mapper#afterUpdate}.\n   * @param {object} props The `props` argument passed to {@link Mapper#afterUpdate}.\n   * @param {object} opts The `opts` argument passed to {@link Mapper#afterUpdate}.\n   * @param {object} result The `result` argument passed to {@link Mapper#afterUpdate}.\n   * @see Mapper#event:afterUpdate\n   * @see Mapper#update\n   * @since 3.0.0\n   */\n  /**\n   * Using an adapter, update the record with the primary key specified by the\n   * `id` argument.\n   *\n   * {@link Mapper#beforeUpdate} will be called before updating the record.\n   * {@link Mapper#afterUpdate} will be called after updating the record.\n   *\n   * @example\n   * // Update a specific post\n   * PostMapper.update(1234, {\n   *   status: 'published',\n   *   published_at: new Date()\n   * }).then((post) => {\n   *   console.log(post); // { id: 1234, status: 'published', ... }\n   * });\n   *\n   * @fires Mapper#beforeUpdate\n   * @fires Mapper#afterUpdate\n   * @method Mapper#update\n   * @param {(string|number)} id The primary key of the record to update.\n   * @param {object} props The update to apply to the record.\n   * @param {object} [opts] Configuration options. Refer to the `update` method\n   * of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.noValidate={@link Mapper#noValidate}] See {@link Mapper#noValidate}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * transaction.\n   * @returns {Promise} Resolves with the updated record. Rejects if the record\n   * could not be found.\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/saving-data\",\"Saving data\"]\n   */\n  update (id, props, opts) {\n    return this.crud('update', id, props, opts)\n  },\n\n  /**\n   * Fired during {@link Mapper#updateAll}. See\n   * {@link Mapper~beforeUpdateAllListener} for how to listen for this event.\n   *\n   * @event Mapper#beforeUpdateAll\n   * @see Mapper~beforeUpdateAllListener\n   * @see Mapper#updateAll\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:beforeUpdateAll} event.\n   *\n   * @example\n   * function onBeforeUpdateAll (props, query, opts) {\n   *   // do something\n   * }\n   * store.on('beforeUpdateAll', onBeforeUpdateAll);\n   *\n   * @callback Mapper~beforeUpdateAllListener\n   * @param {object} props The `props` argument received by {@link Mapper#beforeUpdateAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#beforeUpdateAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeUpdateAll}.\n   * @see Mapper#event:beforeUpdateAll\n   * @see Mapper#updateAll\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Mapper#updateAll}. See\n   * {@link Mapper~afterUpdateAllListener} for how to listen for this event.\n   *\n   * @event Mapper#afterUpdateAll\n   * @see Mapper~afterUpdateAllListener\n   * @see Mapper#updateAll\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:afterUpdateAll} event.\n   *\n   * @example\n   * function onAfterUpdateAll (props, query, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterUpdateAll', onAfterUpdateAll);\n   *\n   * @callback Mapper~afterUpdateAllListener\n   * @param {object} props The `props` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterUpdateAll}.\n   * @see Mapper#event:afterUpdateAll\n   * @see Mapper#updateAll\n   * @since 3.0.0\n   */\n  /**\n   * Using the `query` argument, perform the a single updated to the selected\n   * records.\n   *\n   * {@link Mapper#beforeUpdateAll} will be called before making the update.\n   * {@link Mapper#afterUpdateAll} will be called after making the update.\n   *\n   * @example\n   * // Turn all of John's blog posts into drafts.\n   * const update = { status: draft: published_at: null };\n   * const query = { userId: 1234 };\n   * PostMapper.updateAll(update, query).then((posts) => {\n   *   console.log(posts); // [...]\n   * });\n   *\n   * @fires Mapper#beforeUpdateAll\n   * @fires Mapper#afterUpdateAll\n   * @method Mapper#updateAll\n   * @param {object} props Update to apply to selected records.\n   * @param {object} [query={}] Selection query. See {@link query}.\n   * @param {object} [query.where] See {@link query.where}.\n   * @param {number} [query.offset] See {@link query.offset}.\n   * @param {number} [query.limit] See {@link query.limit}.\n   * @param {string|Array[]} [query.orderBy] See {@link query.orderBy}.\n   * @param {object} [opts] Configuration options. Refer to the `updateAll`\n   * method of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.noValidate={@link Mapper#noValidate}] See {@link Mapper#noValidate}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @returns {Promise} Resolves with the update records, if any.\n   * @see query\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/saving-data\",\"Saving data\"]\n   */\n  updateAll (props, query, opts) {\n    return this.crud('updateAll', props, query, opts)\n  },\n\n  /**\n   * Fired during {@link Mapper#updateMany}. See\n   * {@link Mapper~beforeUpdateManyListener} for how to listen for this event.\n   *\n   * @event Mapper#beforeUpdateMany\n   * @see Mapper~beforeUpdateManyListener\n   * @see Mapper#updateMany\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:beforeUpdateMany} event.\n   *\n   * @example\n   * function onBeforeUpdateMany (records, opts) {\n   *   // do something\n   * }\n   * store.on('beforeUpdateMany', onBeforeUpdateMany);\n   *\n   * @callback Mapper~beforeUpdateManyListener\n   * @param {object} records The `records` argument received by {@link Mapper#beforeUpdateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeUpdateMany}.\n   * @see Mapper#event:beforeUpdateMany\n   * @see Mapper#updateMany\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Mapper#updateMany}. See\n   * {@link Mapper~afterUpdateManyListener} for how to listen for this event.\n   *\n   * @event Mapper#afterUpdateMany\n   * @see Mapper~afterUpdateManyListener\n   * @see Mapper#updateMany\n   */\n  /**\n   * Callback signature for the {@link Mapper#event:afterUpdateMany} event.\n   *\n   * @example\n   * function onAfterUpdateMany (records, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterUpdateMany', onAfterUpdateMany);\n   *\n   * @callback Mapper~afterUpdateManyListener\n   * @param {object} records The `records` argument received by {@link Mapper#afterUpdateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterUpdateMany}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterUpdateMany}.\n   * @see Mapper#event:afterUpdateMany\n   * @see Mapper#updateMany\n   * @since 3.0.0\n   */\n  /**\n   * Given an array of updates, perform each of the updates via an adapter. Each\n   * \"update\" is a hash of properties with which to update an record. Each\n   * update must contain the primary key of the record to be updated.\n   *\n   * {@link Mapper#beforeUpdateMany} will be called before making the update.\n   * {@link Mapper#afterUpdateMany} will be called after making the update.\n   *\n   * @example\n   * PostMapper.updateMany([\n   *   { id: 1234, status: 'draft' },\n   *   { id: 2468, status: 'published', published_at: new Date() }\n   * ]).then((posts) => {\n   *   console.log(posts); // [...]\n   * });\n   *\n   * @fires Mapper#beforeUpdateMany\n   * @fires Mapper#afterUpdateMany\n   * @method Mapper#updateMany\n   * @param {Record[]} records Array up record updates.\n   * @param {object} [opts] Configuration options. Refer to the `updateMany`\n   * method of whatever adapter you're using for more configuration options.\n   * @param {boolean} [opts.adapter={@link Mapper#defaultAdapter}] Name of the\n   * adapter to use.\n   * @param {boolean} [opts.notify={@link Mapper#notify}] See {@link Mapper#notify}.\n   * @param {boolean} [opts.noValidate={@link Mapper#noValidate}] See {@link Mapper#noValidate}.\n   * @param {boolean} [opts.raw={@link Mapper#raw}] See {@link Mapper#raw}.\n   * @returns {Promise} Resolves with the updated records. Rejects if any of the\n   * records could be found.\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/saving-data\",\"Saving data\"]\n   */\n  updateMany (records, opts) {\n    return this.crud('updateMany', records, opts)\n  },\n\n  /**\n   * Validate the given record or records according to this Mapper's\n   * {@link Schema}. If there are no validation errors then the return value\n   * will be `undefined`.\n   *\n   * @example\n   * import {Mapper, Schema} from 'js-data'\n   * const PersonSchema = new Schema({\n   *   properties: {\n   *     name: { type: 'string' },\n   *     id: { type: 'string' }\n   *   }\n   * });\n   * const PersonMapper = new Mapper({\n   *   name: 'person',\n   *   schema: PersonSchema\n   * });\n   * let errors = PersonMapper.validate({ name: 'John' });\n   * console.log(errors); // undefined\n   * errors = PersonMapper.validate({ name: 123 });\n   * console.log(errors); // [{ expected: 'one of (string)', actual: 'number', path: 'name' }]\n   *\n   * @method Mapper#validate\n   * @param {Object|Object[]} record The record or records to validate.\n   * @param {object} [opts] Configuration options. Passed to\n   * {@link Schema#validate}.\n   * @returns {Object[]} Array of errors or `undefined` if no errors.\n   * @since 3.0.0\n   */\n  validate (record, opts) {\n    opts || (opts = {})\n    const schema = this.getSchema()\n    if (!schema) {\n      return\n    }\n    const _opts = utils.pick(opts, ['existingOnly'])\n    if (utils.isArray(record)) {\n      const errors = record.map((_record) => schema.validate(_record, utils.pick(_opts, ['existingOnly'])))\n\n      return errors.some(Boolean) ? errors : undefined\n    }\n    return schema.validate(record, _opts)\n  },\n\n  /**\n   * Method used to wrap data returned by an adapter with this Mapper's\n   * {@link Mapper#recordClass}. This method is used by all of a Mapper's CRUD\n   * methods. The provided implementation of this method assumes that the `data`\n   * passed to it is a record or records that need to be wrapped with\n   * {@link Mapper#createRecord}. Override with care.\n   *\n   * Provided implementation of {@link Mapper#wrap}:\n   *\n   * ```\n   * function (data, opts) {\n   *   return this.createRecord(data, opts);\n   * }\n   * ```\n   *\n   * @example\n   * const PostMapper = new Mapper({\n   *   name: 'post',\n   *   // Override to customize behavior\n   *   wrap (data, opts) {\n   *     const originalWrap = this.constructor.prototype.wrap;\n   *     // Let's say \"GET /post\" doesn't return JSON quite like JSData expects,\n   *     // but the actual post records are nested under a \"posts\" field. So,\n   *     // we override Mapper#wrap to handle this special case.\n   *     if (opts.op === 'findAll') {\n   *       return originalWrap.call(this, data.posts, opts);\n   *     }\n   *     // Otherwise perform original behavior\n   *     return originalWrap.call(this, data, opts);\n   *   }\n   * });\n   *\n   * @method Mapper#wrap\n   * @param {Object|Object[]} data The record or records to be wrapped.\n   * @param {object} [opts] Configuration options. Passed to {@link Mapper#createRecord}.\n   * @returns {Record|Record[]} The wrapped record or records.\n   * @since 3.0.0\n   */\n  wrap (data, opts) {\n    return this.createRecord(data, opts)\n  },\n\n  /**\n   * @ignore\n   */\n  defineRelations () {\n    // Set up the mapper's relations, including generating Mapper#relationList\n    // and Mapper#relationFields\n    utils.forOwn(this.relations, (group, type) => {\n      utils.forOwn(group, (relations, _name) => {\n        if (utils.isObject(relations)) {\n          relations = [relations]\n        }\n        relations.forEach((def) => {\n          const relatedMapper = this.datastore.getMapperByName(_name) || _name\n          def.getRelation = () => this.datastore.getMapper(_name)\n\n          if (typeof this[type] !== 'function') {\n            throw utils.err(DOMAIN, 'defineRelations')(400, 'relation type (hasOne, hasMany, etc)', type, true)\n          }\n\n          this[type](relatedMapper, def)\n        })\n      })\n    })\n  }\n})\n\n/**\n * Create a subclass of this Mapper:\n *\n * @example <caption>Mapper.extend</caption>\n * const JSData = require('js-data');\n * const { Mapper } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * // Extend the class using ES2015 class syntax.\n * class CustomMapperClass extends Mapper {\n *   foo () { return 'bar'; }\n *   static beep () { return 'boop'; }\n * };\n * const customMapper = new CustomMapperClass();\n * console.log(customMapper.foo());\n * console.log(CustomMapperClass.beep());\n *\n * // Extend the class using alternate method.\n * const OtherMapperClass = Mapper.extend({\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const otherMapper = new OtherMapperClass();\n * console.log(otherMapper.foo());\n * console.log(OtherMapperClass.beep());\n *\n * // Extend the class, providing a custom constructor.\n * function AnotherMapperClass () {\n *   Mapper.call(this);\n *   this.created_at = new Date().getTime();\n * }\n * Mapper.extend({\n *   constructor: AnotherMapperClass,\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * })\n * const anotherMapper = new AnotherMapperClass();\n * console.log(anotherMapper.created_at);\n * console.log(anotherMapper.foo());\n * console.log(AnotherMapperClass.beep());\n *\n * @method Mapper.extend\n * @param {object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {object} [props.constructor] Provide a custom constructor function\n * to be used as the subclass itself.\n * @param {object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this Mapper class.\n * @since 3.0.0\n */\n","import utils from './utils'\nimport Component from './Component'\nimport Mapper from './Mapper'\n\nconst DOMAIN = 'Container'\n\nexport const proxiedMapperMethods = [\n  /**\n   * Wrapper for {@link Mapper#count}.\n   *\n   * @example\n   * // Get the number of published blog posts\n   * import { Container } from 'js-data';\n   * import RethinkDBAdapter from 'js-data-rethinkdb';\n   * const store = new Container();\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true });\n   * store.defineMapper('post');\n   *\n   * store.count('post', { status: 'published' }).then((numPublished) => {\n   *   console.log(numPublished); // e.g. 45\n   * });\n   *\n   * @method Container#count\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {object} [query] See {@link Mapper#count}.\n   * @param {object} [opts] See {@link Mapper#count}.\n   * @returns {Promise} See {@link Mapper#count}.\n   * @see Mapper#count\n   * @since 3.0.0\n   */\n  'count',\n\n  /**\n   * Fired during {@link Container#create}. See\n   * {@link Container~beforeCreateListener} for how to listen for this event.\n   *\n   * @event Container#beforeCreate\n   * @see Container~beforeCreateListener\n   * @see Container#create\n   */\n  /**\n   * Callback signature for the {@link Container#event:beforeCreate} event.\n   *\n   * @example\n   * function onBeforeCreate (mapperName, props, opts) {\n   *   // do something\n   * }\n   * store.on('beforeCreate', onBeforeCreate);\n   *\n   * @callback Container~beforeCreateListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeCreate}.\n   * @param {object} props The `props` argument received by {@link Mapper#beforeCreate}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeCreate}.\n   * @see Container#event:beforeCreate\n   * @see Container#create\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Container#create}. See\n   * {@link Container~afterCreateListener} for how to listen for this event.\n   *\n   * @event Container#afterCreate\n   * @see Container~afterCreateListener\n   * @see Container#create\n   */\n  /**\n   * Callback signature for the {@link Container#event:afterCreate} event.\n   *\n   * @example\n   * function onAfterCreate (mapperName, props, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterCreate', onAfterCreate);\n   *\n   * @callback Container~afterCreateListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterCreate}.\n   * @param {object} props The `props` argument received by {@link Mapper#afterCreate}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterCreate}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterCreate}.\n   * @see Container#event:afterCreate\n   * @see Container#create\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#create}.\n   *\n   * @example\n   * // Create and save a new blog post\n   * import { Container } from 'js-data';\n   * import RethinkDBAdapter from 'js-data-rethinkdb';\n   * const store = new Container();\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true });\n   * store.defineMapper('post');\n   *\n   * store.create('post', {\n   *   title: 'Modeling your data',\n   *   status: 'draft'\n   * }).then((post) => {\n   *   console.log(post); // { id: 1234, status: 'draft', ... }\n   * });\n   *\n   * @fires Container#beforeCreate\n   * @fires Container#afterCreate\n   * @method Container#create\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {object} props See {@link Mapper#create}.\n   * @param {object} [opts] See {@link Mapper#create}.\n   * @returns {Promise} See {@link Mapper#create}.\n   * @see Mapper#create\n   * @since 3.0.0\n   */\n  'create',\n\n  /**\n   * Fired during {@link Container#createMany}. See\n   * {@link Container~beforeCreateManyListener} for how to listen for this event.\n   *\n   * @event Container#beforeCreateMany\n   * @see Container~beforeCreateManyListener\n   * @see Container#createMany\n   */\n  /**\n   * Callback signature for the {@link Container#event:beforeCreateMany} event.\n   *\n   * @example\n   * function onBeforeCreateMany (mapperName, records, opts) {\n   *   // do something\n   * }\n   * store.on('beforeCreateMany', onBeforeCreateMany);\n   *\n   * @callback Container~beforeCreateManyListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeCreateMany}.\n   * @param {object} records The `records` argument received by {@link Mapper#beforeCreateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeCreateMany}.\n   * @see Container#event:beforeCreateMany\n   * @see Container#createMany\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Container#createMany}. See\n   * {@link Container~afterCreateManyListener} for how to listen for this event.\n   *\n   * @event Container#afterCreateMany\n   * @see Container~afterCreateManyListener\n   * @see Container#createMany\n   */\n  /**\n   * Callback signature for the {@link Container#event:afterCreateMany} event.\n   *\n   * @example\n   * function onAfterCreateMany (mapperName, records, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterCreateMany', onAfterCreateMany);\n   *\n   * @callback Container~afterCreateManyListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterCreateMany}.\n   * @param {object} records The `records` argument received by {@link Mapper#afterCreateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterCreateMany}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterCreateMany}.\n   * @see Container#event:afterCreateMany\n   * @see Container#createMany\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#createMany}.\n   *\n   * @example\n   * // Create and save several new blog posts\n   * import { Container } from 'js-data';\n   * import RethinkDBAdapter from 'js-data-rethinkdb';\n   * const store = new Container();\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true });\n   * store.defineMapper('post');\n   *\n   * store.createMany('post', [{\n   *   title: 'Modeling your data',\n   *   status: 'draft'\n   * }, {\n   *   title: 'Reading data',\n   *   status: 'draft'\n   * }]).then((posts) => {\n   *   console.log(posts[0]); // { id: 1234, status: 'draft', ... }\n   *   console.log(posts[1]); // { id: 1235, status: 'draft', ... }\n   * });\n   *\n   * @fires Container#beforeCreateMany\n   * @fires Container#afterCreateMany\n   * @method Container#createMany\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Record[]} records See {@link Mapper#createMany}.\n   * @param {object} [opts] See {@link Mapper#createMany}.\n   * @returns {Promise} See {@link Mapper#createMany}.\n   * @see Mapper#createMany\n   * @since 3.0.0\n   */\n  'createMany',\n\n  /**\n   * Wrapper for {@link Mapper#createRecord}.\n   *\n   * __Note:__ This method does __not__ interact with any adapter, and does\n   * __not__ save any data. It only creates new objects in memory.\n   *\n   * @example\n   * // Create empty unsaved record instance\n   * import { Container } from 'js-data';\n   * const store = new Container();\n   * store.defineMapper('post');\n   * const post = PostMapper.createRecord();\n   *\n   * @method Container#createRecord\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object|Object[]} props See {@link Mapper#createRecord}.\n   * @param {object} [opts] See {@link Mapper#createRecord}.\n   * @returns {Promise} See {@link Mapper#createRecord}.\n   * @see Mapper#createRecord\n   * @since 3.0.0\n   */\n  'createRecord',\n\n  /**\n   * Fired during {@link Container#destroy}. See\n   * {@link Container~beforeDestroyListener} for how to listen for this event.\n   *\n   * @event Container#beforeDestroy\n   * @see Container~beforeDestroyListener\n   * @see Container#destroy\n   */\n  /**\n   * Callback signature for the {@link Container#event:beforeDestroy} event.\n   *\n   * @example\n   * function onBeforeDestroy (mapperName, id, opts) {\n   *   // do something\n   * }\n   * store.on('beforeDestroy', onBeforeDestroy);\n   *\n   * @callback Container~beforeDestroyListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeDestroy}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#beforeDestroy}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeDestroy}.\n   * @see Container#event:beforeDestroy\n   * @see Container#destroy\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Container#destroy}. See\n   * {@link Container~afterDestroyListener} for how to listen for this event.\n   *\n   * @event Container#afterDestroy\n   * @see Container~afterDestroyListener\n   * @see Container#destroy\n   */\n  /**\n   * Callback signature for the {@link Container#event:afterDestroy} event.\n   *\n   * @example\n   * function onAfterDestroy (mapperName, id, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterDestroy', onAfterDestroy);\n   *\n   * @callback Container~afterDestroyListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterDestroy}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#afterDestroy}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterDestroy}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterDestroy}.\n   * @see Container#event:afterDestroy\n   * @see Container#destroy\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#destroy}.\n   *\n   * @example\n   * // Destroy a specific blog post\n   * import { Container } from 'js-data';\n   * import RethinkDBAdapter from 'js-data-rethinkdb';\n   * const store = new Container();\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true });\n   * store.defineMapper('post');\n   *\n   * store.destroy('post', 1234).then(() => {\n   *   // Blog post #1234 has been destroyed\n   * });\n   *\n   * @fires Container#beforeDestroy\n   * @fires Container#afterDestroy\n   * @method Container#destroy\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(string|number)} id See {@link Mapper#destroy}.\n   * @param {object} [opts] See {@link Mapper#destroy}.\n   * @returns {Promise} See {@link Mapper#destroy}.\n   * @see Mapper#destroy\n   * @since 3.0.0\n   */\n  'destroy',\n\n  /**\n   * Fired during {@link Container#destroyAll}. See\n   * {@link Container~beforeDestroyAllListener} for how to listen for this event.\n   *\n   * @event Container#beforeDestroyAll\n   * @see Container~beforeDestroyAllListener\n   * @see Container#destroyAll\n   */\n  /**\n   * Callback signature for the {@link Container#event:beforeDestroyAll} event.\n   *\n   * @example\n   * function onBeforeDestroyAll (mapperName, query, opts) {\n   *   // do something\n   * }\n   * store.on('beforeDestroyAll', onBeforeDestroyAll);\n   *\n   * @callback Container~beforeDestroyAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeDestroyAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#beforeDestroyAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeDestroyAll}.\n   * @see Container#event:beforeDestroyAll\n   * @see Container#destroyAll\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Container#destroyAll}. See\n   * {@link Container~afterDestroyAllListener} for how to listen for this event.\n   *\n   * @event Container#afterDestroyAll\n   * @see Container~afterDestroyAllListener\n   * @see Container#destroyAll\n   */\n  /**\n   * Callback signature for the {@link Container#event:afterDestroyAll} event.\n   *\n   * @example\n   * function onAfterDestroyAll (mapperName, query, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterDestroyAll', onAfterDestroyAll);\n   *\n   * @callback Container~afterDestroyAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterDestroyAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#afterDestroyAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterDestroyAll}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterDestroyAll}.\n   * @see Container#event:afterDestroyAll\n   * @see Container#destroyAll\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#destroyAll}.\n   *\n   * @example\n   * // Destroy all \"draft\" blog posts\n   * import { Container } from 'js-data';\n   * import RethinkDBAdapter from 'js-data-rethinkdb';\n   * const store = new Container();\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true });\n   * store.defineMapper('post');\n   *\n   * store.destroyAll('post', { status: 'draft' }).then(() => {\n   *   // All \"draft\" blog posts have been destroyed\n   * });\n   *\n   * @fires Container#beforeDestroyAll\n   * @fires Container#afterDestroyAll\n   * @method Container#destroyAll\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {object} [query] See {@link Mapper#destroyAll}.\n   * @param {object} [opts] See {@link Mapper#destroyAll}.\n   * @returns {Promise} See {@link Mapper#destroyAll}.\n   * @see Mapper#destroyAll\n   * @since 3.0.0\n   */\n  'destroyAll',\n\n  /**\n   * Fired during {@link Container#find}. See\n   * {@link Container~beforeFindListener} for how to listen for this event.\n   *\n   * @event Container#beforeFind\n   * @see Container~beforeFindListener\n   * @see Container#find\n   */\n  /**\n   * Callback signature for the {@link Container#event:beforeFind} event.\n   *\n   * @example\n   * function onBeforeFind (mapperName, id, opts) {\n   *   // do something\n   * }\n   * store.on('beforeFind', onBeforeFind);\n   *\n   * @callback Container~beforeFindListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeFind}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#beforeFind}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeFind}.\n   * @see Container#event:beforeFind\n   * @see Container#find\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Container#find}. See\n   * {@link Container~afterFindListener} for how to listen for this event.\n   *\n   * @event Container#afterFind\n   * @see Container~afterFindListener\n   * @see Container#find\n   */\n  /**\n   * Callback signature for the {@link Container#event:afterFind} event.\n   *\n   * @example\n   * function onAfterFind (mapperName, id, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterFind', onAfterFind);\n   *\n   * @callback Container~afterFindListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterFind}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#afterFind}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterFind}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterFind}.\n   * @see Container#event:afterFind\n   * @see Container#find\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#find}.\n   *\n   * @example\n   * import { Container } from 'js-data';\n   * import RethinkDBAdapter from 'js-data-rethinkdb';\n   * const store = new Container();\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true });\n   * store.defineMapper('post');\n   *\n   * store.find('post', 1).then((post) => {\n   *   console.log(post) // { id: 1, ...}\n   * });\n   *\n   * @fires Container#beforeFind\n   * @fires Container#afterFind\n   * @method Container#find\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(string|number)} id See {@link Mapper#find}.\n   * @param {object} [opts] See {@link Mapper#find}.\n   * @returns {Promise} See {@link Mapper#find}.\n   * @see Mapper#find\n   * @since 3.0.0\n   */\n  'find',\n\n  /**\n   * Fired during {@link Container#findAll}. See\n   * {@link Container~beforeFindAllListener} for how to listen for this event.\n   *\n   * @event Container#beforeFindAll\n   * @see Container~beforeFindAllListener\n   * @see Container#findAll\n   */\n  /**\n   * Callback signature for the {@link Container#event:beforeFindAll} event.\n   *\n   * @example\n   * function onBeforeFindAll (mapperName, query, opts) {\n   *   // do something\n   * }\n   * store.on('beforeFindAll', onBeforeFindAll);\n   *\n   * @callback Container~beforeFindAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeFindAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#beforeFindAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeFindAll}.\n   * @see Container#event:beforeFindAll\n   * @see Container#findAll\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Container#findAll}. See\n   * {@link Container~afterFindAllListener} for how to listen for this event.\n   *\n   * @event Container#afterFindAll\n   * @see Container~afterFindAllListener\n   * @see Container#findAll\n   */\n  /**\n   * Callback signature for the {@link Container#event:afterFindAll} event.\n   *\n   * @example\n   * function onAfterFindAll (mapperName, query, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterFindAll', onAfterFindAll);\n   *\n   * @callback Container~afterFindAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterFindAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#afterFindAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterFindAll}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterFindAll}.\n   * @see Container#event:afterFindAll\n   * @see Container#findAll\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#createRecord}.\n   *\n   * @example\n   * // Find all \"published\" blog posts\n   * import { Container } from 'js-data';\n   * import RethinkDBAdapter from 'js-data-rethinkdb';\n   * const store = new Container();\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true });\n   * store.defineMapper('post');\n   *\n   * store.findAll('post', { status: 'published' }).then((posts) => {\n   *   console.log(posts); // [{ id: 1, ...}, ...]\n   * });\n   *\n   * @fires Container#beforeFindAll\n   * @fires Container#afterFindAll\n   * @method Container#findAll\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {object} [query] See {@link Mapper#findAll}.\n   * @param {object} [opts] See {@link Mapper#findAll}.\n   * @returns {Promise} See {@link Mapper#findAll}.\n   * @see Mapper#findAll\n   * @since 3.0.0\n   */\n  'findAll',\n\n  /**\n   * Wrapper for {@link Mapper#getSchema}.\n   *\n   * @method Container#getSchema\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @returns {Schema} See {@link Mapper#getSchema}.\n   * @see Mapper#getSchema\n   * @since 3.0.0\n   */\n  'getSchema',\n\n  /**\n   * Wrapper for {@link Mapper#is}.\n   *\n   * @example\n   * import { Container } from 'js-data';\n   * const store = new Container();\n   * store.defineMapper('post');\n   * const post = store.createRecord();\n   *\n   * console.log(store.is('post', post)); // true\n   * // Equivalent to what's above\n   * console.log(post instanceof store.getMapper('post').recordClass); // true\n   *\n   * @method Container#is\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Object|Record} record See {@link Mapper#is}.\n   * @returns {boolean} See {@link Mapper#is}.\n   * @see Mapper#is\n   * @since 3.0.0\n   */\n  'is',\n\n  /**\n   * Wrapper for {@link Mapper#sum}.\n   *\n   * @example\n   * import { Container } from 'js-data';\n   * import RethinkDBAdapter from 'js-data-rethinkdb';\n   * const store = new Container();\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true });\n   * store.defineMapper('purchase_order');\n   *\n   * store.sum('purchase_order', 'amount', { status: 'paid' }).then((amountPaid) => {\n   *   console.log(amountPaid); // e.g. 451125.34\n   * });\n   *\n   * @method Container#sum\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {string} field See {@link Mapper#sum}.\n   * @param {object} [query] See {@link Mapper#sum}.\n   * @param {object} [opts] See {@link Mapper#sum}.\n   * @returns {Promise} See {@link Mapper#sum}.\n   * @see Mapper#sum\n   * @since 3.0.0\n   */\n  'sum',\n\n  /**\n   * Wrapper for {@link Mapper#toJSON}.\n   *\n   * @example\n   * import { Container } from 'js-data';\n   * import RethinkDBAdapter from 'js-data-rethinkdb';\n   * const store = new Container();\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true });\n   * store.defineMapper('person', {\n   *   schema: {\n   *     properties: {\n   *       name: { type: 'string' },\n   *       id: { type: 'string' }\n   *     }\n   *   }\n   * });\n   * const person = store.createRecord('person', { id: 1, name: 'John', foo: 'bar' });\n   * // \"foo\" is stripped by toJSON()\n   * console.log(store.toJSON('person', person)); // {\"id\":1,\"name\":\"John\"}\n   *\n   * store.defineMapper('personRelaxed', {\n   *   schema: {\n   *     properties: {\n   *       name: { type: 'string' },\n   *       id: { type: 'string' }\n   *     },\n   *     additionalProperties: true\n   *   }\n   * });\n   * const person2 = store.createRecord('personRelaxed', { id: 1, name: 'John', foo: 'bar' });\n   * // \"foo\" is not stripped by toJSON\n   * console.log(store.toJSON('personRelaxed', person2)); // {\"id\":1,\"name\":\"John\",\"foo\":\"bar\"}\n   *\n   * @method Container#toJSON\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {Record|Record[]} records See {@link Mapper#toJSON}.\n   * @param {object} [opts] See {@link Mapper#toJSON}.\n   * @returns {Object|Object[]} See {@link Mapper#toJSON}.\n   * @see Mapper#toJSON\n   * @since 3.0.0\n   */\n  'toJSON',\n\n  /**\n   * Fired during {@link Container#update}. See\n   * {@link Container~beforeUpdateListener} for how to listen for this event.\n   *\n   * @event Container#beforeUpdate\n   * @see Container~beforeUpdateListener\n   * @see Container#update\n   */\n  /**\n   * Callback signature for the {@link Container#event:beforeUpdate} event.\n   *\n   * @example\n   * function onBeforeUpdate (mapperName, id, props, opts) {\n   *   // do something\n   * }\n   * store.on('beforeUpdate', onBeforeUpdate);\n   *\n   * @callback Container~beforeUpdateListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeUpdate}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#beforeUpdate}.\n   * @param {object} props The `props` argument received by {@link Mapper#beforeUpdate}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeUpdate}.\n   * @see Container#event:beforeUpdate\n   * @see Container#update\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Container#update}. See\n   * {@link Container~afterUpdateListener} for how to listen for this event.\n   *\n   * @event Container#afterUpdate\n   * @see Container~afterUpdateListener\n   * @see Container#update\n   */\n  /**\n   * Callback signature for the {@link Container#event:afterUpdate} event.\n   *\n   * @example\n   * function onAfterUpdate (mapperName, id, props, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterUpdate', onAfterUpdate);\n   *\n   * @callback Container~afterUpdateListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterUpdate}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#afterUpdate}.\n   * @param {object} props The `props` argument received by {@link Mapper#afterUpdate}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterUpdate}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterUpdate}.\n   * @see Container#event:afterUpdate\n   * @see Container#update\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#update}.\n   *\n   * @example\n   * import { Container } from 'js-data';\n   * import RethinkDBAdapter from 'js-data-rethinkdb';\n   * const store = new Container();\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true });\n   * store.defineMapper('post');\n   *\n   * store.update('post', 1234, {\n   *   status: 'published',\n   *   published_at: new Date()\n   * }).then((post) => {\n   *   console.log(post); // { id: 1234, status: 'published', ... }\n   * });\n   *\n   * @fires Container#beforeUpdate\n   * @fires Container#afterUpdate\n   * @method Container#update\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(string|number)} id See {@link Mapper#update}.\n   * @param {object} record See {@link Mapper#update}.\n   * @param {object} [opts] See {@link Mapper#update}.\n   * @returns {Promise} See {@link Mapper#update}.\n   * @see Mapper#update\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/saving-data\",\"Saving data\"]\n   */\n  'update',\n\n  /**\n   * Fired during {@link Container#updateAll}. See\n   * {@link Container~beforeUpdateAllListener} for how to listen for this event.\n   *\n   * @event Container#beforeUpdateAll\n   * @see Container~beforeUpdateAllListener\n   * @see Container#updateAll\n   */\n  /**\n   * Callback signature for the {@link Container#event:beforeUpdateAll} event.\n   *\n   * @example\n   * function onBeforeUpdateAll (mapperName, props, query, opts) {\n   *   // do something\n   * }\n   * store.on('beforeUpdateAll', onBeforeUpdateAll);\n   *\n   * @callback Container~beforeUpdateAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeUpdateAll}.\n   * @param {object} props The `props` argument received by {@link Mapper#beforeUpdateAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#beforeUpdateAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeUpdateAll}.\n   * @see Container#event:beforeUpdateAll\n   * @see Container#updateAll\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Container#updateAll}. See\n   * {@link Container~afterUpdateAllListener} for how to listen for this event.\n   *\n   * @event Container#afterUpdateAll\n   * @see Container~afterUpdateAllListener\n   * @see Container#updateAll\n   */\n  /**\n   * Callback signature for the {@link Container#event:afterUpdateAll} event.\n   *\n   * @example\n   * function onAfterUpdateAll (mapperName, props, query, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterUpdateAll', onAfterUpdateAll);\n   *\n   * @callback Container~afterUpdateAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} props The `props` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterUpdateAll}.\n   * @see Container#event:afterUpdateAll\n   * @see Container#updateAll\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#updateAll}.\n   *\n   * @example\n   * // Turn all of John's blog posts into drafts.\n   * import { Container } from 'js-data';\n   * import RethinkDBAdapter from 'js-data-rethinkdb';\n   * const store = new Container();\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true });\n   * store.defineMapper('post');\n   *\n   * const update = { status: draft: published_at: null };\n   * const query = { userId: 1234 };\n   * store.updateAll('post', update, query).then((posts) => {\n   *   console.log(posts); // [...]\n   * });\n   *\n   * @fires Container#beforeUpdateAll\n   * @fires Container#afterUpdateAll\n   * @method Container#updateAll\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {object} update See {@link Mapper#updateAll}.\n   * @param {object} [query] See {@link Mapper#updateAll}.\n   * @param {object} [opts] See {@link Mapper#updateAll}.\n   * @returns {Promise} See {@link Mapper#updateAll}.\n   * @see Mapper#updateAll\n   * @since 3.0.0\n   */\n  'updateAll',\n\n  /**\n   * Fired during {@link Container#updateMany}. See\n   * {@link Container~beforeUpdateManyListener} for how to listen for this event.\n   *\n   * @event Container#beforeUpdateMany\n   * @see Container~beforeUpdateManyListener\n   * @see Container#updateMany\n   */\n  /**\n   * Callback signature for the {@link Container#event:beforeUpdateMany} event.\n   *\n   * @example\n   * function onBeforeUpdateMany (mapperName, records, opts) {\n   *   // do something\n   * }\n   * store.on('beforeUpdateMany', onBeforeUpdateMany);\n   *\n   * @callback Container~beforeUpdateManyListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeUpdateMany}.\n   * @param {object} records The `records` argument received by {@link Mapper#beforeUpdateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeUpdateMany}.\n   * @see Container#event:beforeUpdateMany\n   * @see Container#updateMany\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link Container#updateMany}. See\n   * {@link Container~afterUpdateManyListener} for how to listen for this event.\n   *\n   * @event Container#afterUpdateMany\n   * @see Container~afterUpdateManyListener\n   * @see Container#updateMany\n   */\n  /**\n   * Callback signature for the {@link Container#event:afterUpdateMany} event.\n   *\n   * @example\n   * function onAfterUpdateMany (mapperName, records, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterUpdateMany', onAfterUpdateMany);\n   *\n   * @callback Container~afterUpdateManyListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterUpdateMany}.\n   * @param {object} records The `records` argument received by {@link Mapper#afterUpdateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterUpdateMany}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterUpdateMany}.\n   * @see Container#event:afterUpdateMany\n   * @see Container#updateMany\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#updateMany}.\n   *\n   * @example\n   * import { Container } from 'js-data';\n   * import RethinkDBAdapter from 'js-data-rethinkdb';\n   * const store = new Container();\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true });\n   * store.defineMapper('post');\n   *\n   * store.updateMany('post', [\n   *   { id: 1234, status: 'draft' },\n   *   { id: 2468, status: 'published', published_at: new Date() }\n   * ]).then((posts) => {\n   *   console.log(posts); // [...]\n   * });\n   *\n   * @fires Container#beforeUpdateMany\n   * @fires Container#afterUpdateMany\n   * @method Container#updateMany\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(Object[]|Record[])} records See {@link Mapper#updateMany}.\n   * @param {object} [opts] See {@link Mapper#updateMany}.\n   * @returns {Promise} See {@link Mapper#updateMany}.\n   * @see Mapper#updateMany\n   * @since 3.0.0\n   */\n  'updateMany',\n\n  /**\n   * Wrapper for {@link Mapper#validate}.\n   *\n   * @example\n   * import { Container } from 'js-data';\n   * const store = new Container();\n   * store.defineMapper('post', {\n   *   schema: {\n   *     properties: {\n   *       name: { type: 'string' },\n   *       id: { type: 'string' }\n   *     }\n   *   }\n   * });\n   * let errors = store.validate('post', { name: 'John' });\n   * console.log(errors); // undefined\n   * errors = store.validate('post', { name: 123 });\n   * console.log(errors); // [{ expected: 'one of (string)', actual: 'number', path: 'name' }]\n   *\n   * @method Container#validate\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(Object[]|Record[])} records See {@link Mapper#validate}.\n   * @param {object} [opts] See {@link Mapper#validate}.\n   * @returns {Promise} See {@link Mapper#validate}.\n   * @see Mapper#validate\n   * @since 3.0.0\n   */\n  'validate'\n]\n\n/**\n * The `Container` class is a place to define and store {@link Mapper} instances.\n *\n * `Container` makes it easy to manage your Mappers. Without a container, you\n * need to manage Mappers yourself, including resolving circular dependencies\n * among relations. All Mappers in a container share the same adapters, so you\n * don't have to register adapters for every single Mapper.\n *\n * @example <caption>Container#constructor</caption>\n * // import { Container } from 'js-data';\n * const JSData = require('js-data');\n * const {Container} = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * const store = new Container();\n *\n * @class Container\n * @extends Component\n * @param {object} [opts] Configuration options.\n * @param {boolean} [opts.debug=false] See {@link Component#debug}.\n * @param {Constructor} [opts.mapperClass] See {@link Container#mapperClass}.\n * @param {object} [opts.mapperDefaults] See {@link Container#mapperDefaults}.\n * @since 3.0.0\n */\nexport function Container (opts) {\n  utils.classCallCheck(this, Container)\n  Component.call(this)\n  opts || (opts = {})\n\n  Object.defineProperties(this, {\n    /**\n     * The adapters registered with this Container, which are also shared by all\n     * Mappers in this Container.\n     *\n     * @name Container#_adapters\n     * @see Container#registerAdapter\n     * @since 3.0.0\n     * @type {Object}\n     */\n    _adapters: {\n      value: {}\n    },\n\n    /**\n     * The the mappers in this container\n     *\n     * @name Container#_mappers\n     * @see Mapper\n     * @since 3.0.0\n     * @type {Object}\n     */\n    _mappers: {\n      value: {}\n    },\n\n    /**\n     * Constructor function to use in {@link Container#defineMapper} to create new\n     * {@link Mapper} instances. {@link Container#mapperClass} should extend\n     * {@link Mapper}. By default {@link Mapper} is used to instantiate Mappers.\n     *\n     * @example <caption>Container#mapperClass</caption>\n     * // import { Container, Mapper } from 'js-data';\n     * const JSData = require('js-data');\n     * const { Container, Mapper } = JSData;\n     * console.log('Using JSData v' + JSData.version.full);\n     *\n     * class MyMapperClass extends Mapper {\n     *   foo () { return 'bar' }\n     * }\n     * const store = new Container({\n     *   mapperClass: MyMapperClass\n     * });\n     * store.defineMapper('user');\n     * console.log(store.getMapper('user').foo());\n     *\n     * @name Container#mapperClass\n     * @see Mapper\n     * @since 3.0.0\n     * @type {Constructor}\n     */\n    mapperClass: {\n      value: undefined,\n      writable: true\n    }\n  })\n\n  // Apply options provided by the user\n  utils.fillIn(this, opts)\n\n  /**\n   * Defaults options to pass to {@link Container#mapperClass} when creating a\n   * new {@link Mapper}.\n   *\n   * @example <caption>Container#mapperDefaults</caption>\n   * // import { Container } from 'js-data';\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new Container({\n   *   mapperDefaults: {\n   *     idAttribute: '_id'\n   *   }\n   * });\n   * store.defineMapper('user');\n   * console.log(store.getMapper('user').idAttribute);\n   *\n   * @default {}\n   * @name Container#mapperDefaults\n   * @since 3.0.0\n   * @type {Object}\n   */\n  this.mapperDefaults = this.mapperDefaults || {}\n\n  // Use the Mapper class if the user didn't provide a mapperClass\n  this.mapperClass || (this.mapperClass = Mapper)\n}\n\nconst props = {\n  constructor: Container,\n\n  /**\n   * Register a new event listener on this Container.\n   *\n   * Proxy for {@link Component#on}. If an event was emitted by a {@link Mapper}\n   * in the Container, then the name of the {@link Mapper} will be prepended to\n   * the arugments passed to the listener.\n   *\n   * @example <caption>Container#on</caption>\n   * // import { Container } from 'js-data';\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new Container();\n   * store.on('foo', function (...args) { console.log(args.join(':')) });\n   * store.defineMapper('user');\n   * store.emit('foo', 'arg1', 'arg2');\n   * store.getMapper('user').emit('foo', 'arg1', 'arg2');\n   *\n   * @method Container#on\n   * @param {string} event Name of event to subsribe to.\n   * @param {Function} listener Listener function to handle the event.\n   * @param {*} [ctx] Optional content in which to invoke the listener.\n   * @since 3.0.0\n   */\n\n  /**\n   * Used to bind to events emitted by mappers in this container.\n   *\n   * @method Container#_onMapperEvent\n   * @param {string} name Name of the mapper that emitted the event.\n   * @param {...*} [args] Args See {@link Mapper#emit}.\n   * @private\n   * @since 3.0.0\n   */\n  _onMapperEvent (name, ...args) {\n    const type = args.shift()\n    this.emit(type, name, ...args)\n  },\n\n  /**\n   * Return a container scoped to a particular mapper.\n   *\n   * @example <caption>Container#as</caption>\n   * // import { Container } from 'js-data';\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new Container();\n   * const UserMapper = store.defineMapper('user');\n   * const UserStore = store.as('user');\n   *\n   * const user1 = store.createRecord('user', { name: 'John' });\n   * const user2 = UserStore.createRecord({ name: 'John' });\n   * const user3 = UserMapper.createRecord({ name: 'John' });\n   * console.log(user1 === user2);\n   * console.log(user2 === user3);\n   * console.log(user1 === user3);\n   *\n   * @method Container#as\n   * @param {string} name Name of the {@link Mapper}.\n   * @returns {Object} A container scoped to a particular mapper.\n   * @since 3.0.0\n   */\n  as (name) {\n    const props = {}\n    const original = this\n    proxiedMapperMethods.forEach(function (method) {\n      props[method] = {\n        writable: true,\n        value (...args) {\n          return original[method](name, ...args)\n        }\n      }\n    })\n    props.getMapper = {\n      writable: true,\n      value () {\n        return original.getMapper(name)\n      }\n    }\n    return Object.create(this, props)\n  },\n\n  /**\n   * Create a new mapper and register it in this container.\n   *\n   * @example <caption>Container#defineMapper</caption>\n   * // import { Container } from 'js-data';\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new Container({\n   *   mapperDefaults: { foo: 'bar' }\n   * });\n   * // Container#defineMapper returns a direct reference to the newly created\n   * // Mapper.\n   * const UserMapper = store.defineMapper('user');\n   * console.log(UserMapper === store.getMapper('user'));\n   * console.log(UserMapper === store.as('user').getMapper());\n   * console.log(UserMapper.foo);\n   *\n   * @method Container#defineMapper\n   * @param {string} name Name under which to register the new {@link Mapper}.\n   * {@link Mapper#name} will be set to this value.\n   * @param {object} [opts] Configuration options. Passed to\n   * {@link Container#mapperClass} when creating the new {@link Mapper}.\n   * @returns {Mapper} The newly created instance of {@link Mapper}.\n   * @see Container#as\n   * @since 3.0.0\n   */\n  defineMapper (name, opts) {\n    // For backwards compatibility with defineResource\n    if (utils.isObject(name)) {\n      opts = name\n      name = opts.name\n    }\n    if (!utils.isString(name)) {\n      throw utils.err(`${DOMAIN}#defineMapper`, 'name')(400, 'string', name)\n    }\n\n    // Default values for arguments\n    opts || (opts = {})\n    // Set Mapper#name\n    opts.name = name\n    opts.relations || (opts.relations = {})\n\n    // Check if the user is overriding the datastore's default mapperClass\n    const mapperClass = opts.mapperClass || this.mapperClass\n    delete opts.mapperClass\n\n    // Apply the datastore's defaults to the options going into the mapper\n    utils.fillIn(opts, this.mapperDefaults)\n\n    // Instantiate a mapper\n    const mapper = this._mappers[name] = new mapperClass(opts) // eslint-disable-line\n    mapper.relations || (mapper.relations = {})\n    // Make sure the mapper's name is set\n    mapper.name = name\n    // All mappers in this datastore will share adapters\n    mapper._adapters = this.getAdapters()\n\n    mapper.datastore = this\n\n    mapper.on('all', (...args) => this._onMapperEvent(name, ...args))\n    mapper.defineRelations()\n\n    return mapper\n  },\n\n  defineResource (name, opts) {\n    console.warn('DEPRECATED: defineResource is deprecated, use defineMapper instead')\n    return this.defineMapper(name, opts)\n  },\n\n  /**\n   * Return the registered adapter with the given name or the default adapter if\n   * no name is provided.\n   *\n   * @method Container#getAdapter\n   * @param {string} [name] The name of the adapter to retrieve.\n   * @returns {Adapter} The adapter.\n   * @since 3.0.0\n   */\n  getAdapter (name) {\n    const adapter = this.getAdapterName(name)\n    if (!adapter) {\n      throw utils.err(`${DOMAIN}#getAdapter`, 'name')(400, 'string', name)\n    }\n    return this.getAdapters()[adapter]\n  },\n\n  /**\n   * Return the name of a registered adapter based on the given name or options,\n   * or the name of the default adapter if no name provided.\n   *\n   * @method Container#getAdapterName\n   * @param {(Object|string)} [opts] The name of an adapter or options, if any.\n   * @returns {string} The name of the adapter.\n   * @since 3.0.0\n   */\n  getAdapterName (opts) {\n    opts || (opts = {})\n    if (utils.isString(opts)) {\n      opts = { adapter: opts }\n    }\n    return opts.adapter || this.mapperDefaults.defaultAdapter\n  },\n\n  /**\n   * Return the registered adapters of this container.\n   *\n   * @method Container#getAdapters\n   * @returns {Adapter}\n   * @since 3.0.0\n   */\n  getAdapters () {\n    return this._adapters\n  },\n\n  /**\n   * Return the mapper registered under the specified name.\n   *\n   * @example <caption>Container#getMapper</caption>\n   * // import { Container } from 'js-data';\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new Container();\n   * // Container#defineMapper returns a direct reference to the newly created\n   * // Mapper.\n   * const UserMapper = store.defineMapper('user');\n   * console.log(UserMapper === store.getMapper('user'));\n   * console.log(UserMapper === store.as('user').getMapper());\n   * store.getMapper('profile'); // throws Error, there is no mapper with name \"profile\"\n   *\n   * @method Container#getMapper\n   * @param {string} name {@link Mapper#name}.\n   * @returns {Mapper}\n   * @since 3.0.0\n   */\n  getMapper (name) {\n    const mapper = this.getMapperByName(name)\n    if (!mapper) {\n      throw utils.err(`${DOMAIN}#getMapper`, name)(404, 'mapper')\n    }\n    return mapper\n  },\n\n  /**\n   * Return the mapper registered under the specified name.\n   * Doesn't throw error if mapper doesn't exist.\n   *\n   * @example <caption>Container#getMapperByName</caption>\n   * // import { Container } from 'js-data';\n   * const JSData = require('js-data');\n   * const { Container } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new Container();\n   * // Container#defineMapper returns a direct reference to the newly created\n   * // Mapper.\n   * const UserMapper = store.defineMapper('user');\n   * console.log(UserMapper === store.getMapper('user'));\n   * console.log(UserMapper === store.as('user').getMapper());\n   * console.log(store.getMapper('profile')); // Does NOT throw an error\n   *\n   * @method Container#getMapperByName\n   * @param {string} name {@link Mapper#name}.\n   * @returns {Mapper}\n   * @since 3.0.0\n   */\n  getMapperByName (name) {\n    return this._mappers[name]\n  },\n\n  /**\n   * Register an adapter on this container under the given name. Adapters\n   * registered on a container are shared by all mappers in the container.\n   *\n   * @example\n   * import { Container } from 'js-data';\n   * import { RethinkDBAdapter } from 'js-data-rethinkdb';\n   * const store = new Container();\n   * store.registerAdapter('rethinkdb', new RethinkDBAdapter(), { default: true });\n   *\n   * @method Container#registerAdapter\n   * @param {string} name The name of the adapter to register.\n   * @param {Adapter} adapter The adapter to register.\n   * @param {object} [opts] Configuration options.\n   * @param {boolean} [opts.default=false] Whether to make the adapter the\n   * default adapter for all Mappers in this container.\n   * @since 3.0.0\n   * @tutorial [\"http://www.js-data.io/v3.0/docs/connecting-to-a-data-source\",\"Connecting to a data source\"]\n   */\n  registerAdapter (name, adapter, opts) {\n    opts || (opts = {})\n    this.getAdapters()[name] = adapter\n    // Optionally make it the default adapter for the target.\n    if (opts === true || opts.default) {\n      this.mapperDefaults.defaultAdapter = name\n      utils.forOwn(this._mappers, function (mapper) {\n        mapper.defaultAdapter = name\n      })\n    }\n  }\n}\n\nproxiedMapperMethods.forEach(function (method) {\n  props[method] = function (name, ...args) {\n    return this.getMapper(name)[method](...args)\n  }\n})\n\nComponent.extend(props)\n\n/**\n * Create a subclass of this Container:\n * @example <caption>Container.extend</caption>\n * const JSData = require('js-data');\n * const { Container } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * // Extend the class using ES2015 class syntax.\n * class CustomContainerClass extends Container {\n *   foo () { return 'bar' }\n *   static beep () { return 'boop' }\n * }\n * const customContainer = new CustomContainerClass();\n * console.log(customContainer.foo());\n * console.log(CustomContainerClass.beep());\n *\n * // Extend the class using alternate method.\n * const OtherContainerClass = Container.extend({\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const otherContainer = new OtherContainerClass();\n * console.log(otherContainer.foo());\n * console.log(OtherContainerClass.beep());\n *\n * // Extend the class, providing a custom constructor.\n * function AnotherContainerClass () {\n *   Container.call(this);\n *   this.created_at = new Date().getTime();\n * }\n * Container.extend({\n *   constructor: AnotherContainerClass,\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * })\n * const anotherContainer = new AnotherContainerClass();\n * console.log(anotherContainer.created_at);\n * console.log(anotherContainer.foo());\n * console.log(AnotherContainerClass.beep());\n *\n * @method Container.extend\n * @param {object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {object} [props.constructor] Provide a custom constructor function\n * to be used as the subclass itself.\n * @param {object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this Container class.\n * @since 3.0.0\n */\n","import utils from './utils'\n\nimport {\n  belongsToType,\n  hasManyType,\n  hasOneType\n} from './decorators'\nimport { proxiedMapperMethods, Container } from './Container'\nimport Collection from './Collection'\n\nconst DOMAIN = 'SimpleStore'\nconst proxiedCollectionMethods = [\n  /**\n   * Wrapper for {@link Collection#add}.\n   *\n   * @example <caption>SimpleStore#add</caption>\n   * const JSData = require('js-data');\n   * const { SimpleStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new SimpleStore();\n   * store.defineMapper('book');\n   *\n   * // Add one book to the in-memory store:\n   * store.add('book', { id: 1, title: 'Respect your Data' });\n   * // Add multiple books to the in-memory store:\n   * store.add('book', [\n   *   { id: 2, title: 'Easy data recipes' },\n   *   { id: 3, title: 'Active Record 101' }\n   * ]);\n   *\n   * @fires SimpleStore#add\n   * @method SimpleStore#add\n   * @param {(string|number)} name Name of the {@link Mapper} to target.\n   * @param {(Object|Object[]|Record|Record[])} data See {@link Collection#add}.\n   * @param {object} [opts] Configuration options. See {@link Collection#add}.\n   * @returns {(Object|Object[]|Record|Record[])} See {@link Collection#add}.\n   * @see Collection#add\n   * @see Collection#add\n   * @since 3.0.0\n   */\n  'add',\n\n  /**\n   * Wrapper for {@link Collection#between}.\n   *\n   * @example\n   * // Get all users ages 18 to 30\n   * const users = store.between('user', 18, 30, { index: 'age' });\n   *\n   * @example\n   * // Same as above\n   * const users = store.between('user', [18], [30], { index: 'age' });\n   *\n   * @method SimpleStore#between\n   * @param {(string|number)} name Name of the {@link Mapper} to target.\n   * @param {array} leftKeys See {@link Collection#between}.\n   * @param {array} rightKeys See {@link Collection#between}.\n   * @param {object} [opts] Configuration options. See {@link Collection#between}.\n   * @returns {Object[]|Record[]} See {@link Collection#between}.\n   * @see Collection#between\n   * @see Collection#between\n   * @since 3.0.0\n   */\n  'between',\n\n  /**\n   * Wrapper for {@link Collection#createIndex}.\n   *\n   * @example\n   * // Index users by age\n   * store.createIndex('user', 'age');\n   *\n   * @example\n   * // Index users by status and role\n   * store.createIndex('user', 'statusAndRole', ['status', 'role']);\n   *\n   * @method SimpleStore#createIndex\n   * @param {(string|number)} name Name of the {@link Mapper} to target.\n   * @param {string} name See {@link Collection#createIndex}.\n   * @param {string[]} [fieldList] See {@link Collection#createIndex}.\n   * @see Collection#createIndex\n   * @see Collection#createIndex\n   * @since 3.0.0\n   */\n  'createIndex',\n\n  /**\n   * Wrapper for {@link Collection#filter}.\n   *\n   * @example <caption>SimpleStore#filter</caption>\n   * const JSData = require('js-data');\n   * const { SimpleStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new SimpleStore();\n   * store.defineMapper('post');\n   * store.add('post', [\n   *   { id: 1, status: 'draft', created_at_timestamp: new Date().getTime() }\n   * ]);\n   *\n   * // Get the draft posts created less than three months ago\n   * let posts = store.filter('post', {\n   *   where: {\n   *     status: {\n   *       '==': 'draft'\n   *     },\n   *     created_at_timestamp: {\n   *       '>=': (new Date().getTime() - (1000 \\* 60 \\* 60 \\* 24 \\* 30 \\* 3)) // 3 months ago\n   *     }\n   *   }\n   * });\n   * console.log(posts);\n   *\n   * // Use a custom filter function\n   * posts = store.filter('post', function (post) { return post.id % 2 === 0 });\n   *\n   * @method SimpleStore#filter\n   * @param {(string|number)} name Name of the {@link Mapper} to target.\n   * @param {(Object|Function)} [queryOrFn={}] See {@link Collection#filter}.\n   * @param {object} [thisArg] See {@link Collection#filter}.\n   * @returns {Array} See {@link Collection#filter}.\n   * @see Collection#filter\n   * @see Collection#filter\n   * @since 3.0.0\n   */\n  'filter',\n\n  /**\n   * Wrapper for {@link Collection#get}.\n   *\n   * @example <caption>SimpleStore#get</caption>\n   * const JSData = require('js-data');\n   * const { SimpleStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new SimpleStore();\n   * store.defineMapper('post');\n   * store.add('post', [\n   *   { id: 1, status: 'draft', created_at_timestamp: new Date().getTime() }\n   * ]);\n   *\n   * console.log(store.get('post', 1)); // {...}\n   * console.log(store.get('post', 2)); // undefined\n   *\n   * @method SimpleStore#get\n   * @param {(string|number)} name Name of the {@link Mapper} to target.\n   * @param {(string|number)} id See {@link Collection#get}.\n   * @returns {(Object|Record)} See {@link Collection#get}.\n   * @see Collection#get\n   * @see Collection#get\n   * @since 3.0.0\n   */\n  'get',\n\n  /**\n   * Wrapper for {@link Collection#getAll}.\n   *\n   * @example\n   * // Get the posts where \"status\" is \"draft\" or \"inReview\"\n   * const posts = store.getAll('post', 'draft', 'inReview', { index: 'status' });\n   *\n   * @example\n   * // Same as above\n   * const posts = store.getAll('post', ['draft'], ['inReview'], { index: 'status' });\n   *\n   * @method SimpleStore#getAll\n   * @param {(string|number)} name Name of the {@link Mapper} to target.\n   * @param {...Array} [keyList] See {@link Collection#getAll}.\n   * @param {object} [opts] See {@link Collection#getAll}.\n   * @returns {Array} See {@link Collection#getAll}.\n   * @see Collection#getAll\n   * @see Collection#getAll\n   * @since 3.0.0\n   */\n  'getAll',\n\n  /**\n   * Wrapper for {@link Collection#prune}.\n   *\n   * @method SimpleStore#prune\n   * @param {object} [opts] See {@link Collection#prune}.\n   * @returns {Array} See {@link Collection#prune}.\n   * @see Collection#prune\n   * @see Collection#prune\n   * @since 3.0.0\n   */\n  'prune',\n\n  /**\n   * Wrapper for {@link Collection#query}.\n   *\n   * @example\n   * // Grab page 2 of users between ages 18 and 30\n   * store.query('user')\n   *   .between(18, 30, { index: 'age' }) // between ages 18 and 30\n   *   .skip(10) // second page\n   *   .limit(10) // page size\n   *   .run();\n   *\n   * @method SimpleStore#query\n   * @param {(string|number)} name Name of the {@link Mapper} to target.\n   * @returns {Query} See {@link Collection#query}.\n   * @see Collection#query\n   * @see Collection#query\n   * @since 3.0.0\n   */\n  'query',\n\n  /**\n   * Wrapper for {@link Collection#toJSON}.\n   *\n   * @example\n   * store.defineMapper('post', {\n   *   schema: {\n   *     properties: {\n   *       id: { type: 'number' },\n   *       title: { type: 'string' }\n   *     }\n   *   }\n   * });\n   * store.add('post', [\n   *   { id: 1, status: 'published', title: 'Respect your Data' },\n   *   { id: 2, status: 'draft', title: 'Connecting to a data source' }\n   * ]);\n   * console.log(store.toJSON('post'));\n   * const draftsJSON = store.query('post')\n   *   .filter({ status: 'draft' })\n   *   .mapCall('toJSON')\n   *   .run();\n   *\n   * @method SimpleStore#toJSON\n   * @param {(string|number)} name Name of the {@link Mapper} to target.\n   * @param {object} [opts] See {@link Collection#toJSON}.\n   * @returns {Array} See {@link Collection#toJSON}.\n   * @see Collection#toJSON\n   * @see Collection#toJSON\n   * @since 3.0.0\n   */\n  'toJSON',\n\n  /**\n   * Wrapper for {@link Collection#unsaved}.\n   *\n   * @method SimpleStore#unsaved\n   * @returns {Array} See {@link Collection#unsaved}.\n   * @see Collection#unsaved\n   * @see Collection#unsaved\n   * @since 3.0.0\n   */\n  'unsaved'\n]\nconst ownMethodsForScoping = [\n  'addToCache',\n  'cachedFind',\n  'cachedFindAll',\n  'cacheFind',\n  'cacheFindAll',\n  'hashQuery'\n]\n\nconst cachedFn = function (name, hashOrId, opts) {\n  const cached = this._completedQueries[name][hashOrId]\n  if (utils.isFunction(cached)) {\n    return cached(name, hashOrId, opts)\n  }\n  return cached\n}\n\nconst SIMPLESTORE_DEFAULTS = {\n  /**\n   * Whether to use the pending query if a `find` request for the specified\n   * record is currently underway. Can be set to `true`, `false`, or to a\n   * function that returns `true` or `false`.\n   *\n   * @default true\n   * @name SimpleStore#usePendingFind\n   * @since 3.0.0\n   * @type {boolean|Function}\n   */\n  usePendingFind: true,\n\n  /**\n   * Whether to use the pending query if a `findAll` request for the given query\n   * is currently underway. Can be set to `true`, `false`, or to a function that\n   * returns `true` or `false`.\n   *\n   * @default true\n   * @name SimpleStore#usePendingFindAll\n   * @since 3.0.0\n   * @type {boolean|Function}\n   */\n  usePendingFindAll: true\n}\n\n/**\n * The `SimpleStore` class is an extension of {@link Container}. Not only does\n * `SimpleStore` manage mappers, but also collections. `SimpleStore` implements the\n * asynchronous {@link Mapper} methods, such as {@link Mapper#find} and\n * {@link Mapper#create}. If you use the asynchronous `SimpleStore` methods\n * instead of calling them directly on the mappers, then the results of the\n * method calls will be inserted into the store's collections. You can think of\n * a `SimpleStore` as an [Identity Map](https://en.wikipedia.org/wiki/Identity_map_pattern)\n * for the [ORM](https://en.wikipedia.org/wiki/Object-relational_mapping)\n * (the Mappers).\n *\n * ```javascript\n * import { SimpleStore } from 'js-data';\n * ```\n *\n * @example\n * import { SimpleStore } from 'js-data';\n * import { HttpAdapter } from 'js-data-http';\n * const store = new SimpleStore();\n *\n * // SimpleStore#defineMapper returns a direct reference to the newly created\n * // Mapper.\n * const UserMapper = store.defineMapper('user');\n *\n * // SimpleStore#as returns the store scoped to a particular Mapper.\n * const UserStore = store.as('user');\n *\n * // Call \"find\" on \"UserMapper\" (Stateless ORM)\n * UserMapper.find(1).then((user) => {\n *   // retrieved a \"user\" record via the http adapter, but that's it\n *\n *   // Call \"find\" on \"store\" targeting \"user\" (Stateful SimpleStore)\n *   return store.find('user', 1); // same as \"UserStore.find(1)\"\n * }).then((user) => {\n *   // not only was a \"user\" record retrieved, but it was added to the\n *   // store's \"user\" collection\n *   const cachedUser = store.getCollection('user').get(1);\n *   console.log(user === cachedUser); // true\n * });\n *\n * @class SimpleStore\n * @extends Container\n * @param {object} [opts] Configuration options. See {@link Container}.\n * @param {boolean} [opts.collectionClass={@link Collection}] See {@link SimpleStore#collectionClass}.\n * @param {boolean} [opts.debug=false] See {@link Component#debug}.\n * @param {boolean|Function} [opts.usePendingFind=true] See {@link SimpleStore#usePendingFind}.\n * @param {boolean|Function} [opts.usePendingFindAll=true] See {@link SimpleStore#usePendingFindAll}.\n * @returns {SimpleStore}\n * @see Container\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#SimpleStore\",\"Components of JSData: SimpleStore\"]\n * @tutorial [\"http://www.js-data.io/v3.0/docs/working-with-the-SimpleStore\",\"Working with the SimpleStore\"]\n * @tutorial [\"http://www.js-data.io/v3.0/docs/jsdata-and-the-browser\",\"Notes on using JSData in the Browser\"]\n */\nfunction SimpleStore (opts) {\n  utils.classCallCheck(this, SimpleStore)\n\n  opts || (opts = {})\n  // Fill in any missing options with the defaults\n  utils.fillIn(opts, SIMPLESTORE_DEFAULTS)\n  Container.call(this, opts)\n\n  this.collectionClass = this.collectionClass || Collection\n  this._collections = {}\n  this._pendingQueries = {}\n  this._completedQueries = {}\n}\n\nconst props = {\n  constructor: SimpleStore,\n\n  /**\n   * Internal method used to handle Mapper responses.\n   *\n   * @method SimpleStore#_end\n   * @private\n   * @param {string} name Name of the {@link Collection} to which to\n   * add the data.\n   * @param {object} result The result from a Mapper.\n   * @param {object} [opts] Configuration options.\n   * @returns {(Object|Array)} Result.\n   */\n  _end (name, result, opts) {\n    let data = opts.raw ? result.data : result\n    if (data && utils.isFunction(this.addToCache)) {\n      data = this.addToCache(name, data, opts)\n      if (opts.raw) {\n        result.data = data\n      } else {\n        result = data\n      }\n    }\n    return result\n  },\n\n  /**\n   * Register a new event listener on this SimpleStore.\n   *\n   * Proxy for {@link Container#on}. If an event was emitted by a Mapper or\n   * Collection in the SimpleStore, then the name of the Mapper or Collection will\n   * be prepended to the arugments passed to the provided event handler.\n   *\n   * @example\n   * // Listen for all \"afterCreate\" events in a SimpleStore\n   * store.on('afterCreate', (mapperName, props, opts, result) => {\n   *   console.log(mapperName); // \"post\"\n   *   console.log(props.id); // undefined\n   *   console.log(result.id); // 1234\n   * });\n   * store.create('post', { title: 'Modeling your data' }).then((post) => {\n   *   console.log(post.id); // 1234\n   * });\n   *\n   * @example\n   * // Listen for the \"add\" event on a collection\n   * store.on('add', (mapperName, records) => {\n   *   console.log(records); // [...]\n   * });\n   *\n   * @example\n   * // Listen for \"change\" events on a record\n   * store.on('change', (mapperName, record, changes) => {\n   *   console.log(changes); // { changed: { title: 'Modeling your data' } }\n   * });\n   * post.title = 'Modeling your data';\n   *\n   * @method SimpleStore#on\n   * @param {string} event Name of event to subsribe to.\n   * @param {Function} listener Listener function to handle the event.\n   * @param {*} [ctx] Optional content in which to invoke the listener.\n   */\n\n  /**\n   * Used to bind to events emitted by collections in this store.\n   *\n   * @method SimpleStore#_onCollectionEvent\n   * @private\n   * @param {string} name Name of the collection that emitted the event.\n   * @param {...*} [args] Args passed to {@link Collection#emit}.\n   */\n  _onCollectionEvent (name, ...args) {\n    const type = args.shift()\n    this.emit(type, name, ...args)\n  },\n\n  /**\n   * This method takes the data received from {@link SimpleStore#find},\n   * {@link SimpleStore#findAll}, {@link SimpleStore#update}, etc., and adds the\n   * data to the store. _You don't need to call this method directly._\n   *\n   * If you're using the http adapter and your response data is in an unexpected\n   * format, you may need to override this method so the right data gets added\n   * to the store.\n   *\n   * @example\n   * const store = new SimpleStore({\n   *   addToCache (mapperName, data, opts) {\n   *     // Let's say for a particular Resource, response data is in a weird format\n   *     if (name === 'comment') {\n   *       // Re-assign the variable to add the correct records into the stores\n   *       data = data.items;\n   *     }\n   *     // Now perform default behavior\n   *     return SimpleStore.prototype.addToCache.call(this, mapperName, data, opts);\n   *   }\n   * });\n   *\n   * @example\n   * // Extend using ES2015 class syntax.\n   * class MyStore extends SimpleStore {\n   *   addToCache (mapperName, data, opts) {\n   *     // Let's say for a particular Resource, response data is in a weird format\n   *     if (name === 'comment') {\n   *       // Re-assign the variable to add the correct records into the stores\n   *       data = data.items;\n   *     }\n   *     // Now perform default behavior\n   *     return super.addToCache(mapperName, data, opts);\n   *   }\n   * }\n   * const store = new MyStore();\n   *\n   * @method SimpleStore#addToCache\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {*} data Data from which data should be selected for add.\n   * @param {object} [opts] Configuration options.\n   */\n  addToCache (name, data, opts) {\n    return this.getCollection(name).add(data, opts)\n  },\n\n  /**\n   * Return the store scoped to a particular mapper/collection pair.\n   *\n   * @example <caption>SimpleStore.as</caption>\n   * const JSData = require('js-data');\n   * const { SimpleStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new SimpleStore();\n   * const UserMapper = store.defineMapper('user');\n   * const UserStore = store.as('user');\n   *\n   * const user1 = store.createRecord('user', { name: 'John' });\n   * const user2 = UserStore.createRecord({ name: 'John' });\n   * const user3 = UserMapper.createRecord({ name: 'John' });\n   * console.log(user1 === user2);\n   * console.log(user2 === user3);\n   * console.log(user1 === user3);\n   *\n   * @method SimpleStore#as\n   * @param {string} name Name of the {@link Mapper}.\n   * @returns {Object} The store, scoped to a particular Mapper/Collection pair.\n   * @since 3.0.0\n   */\n  as (name) {\n    const props = {}\n    const original = this\n    const methods = ownMethodsForScoping\n      .concat(proxiedMapperMethods)\n      .concat(proxiedCollectionMethods)\n\n    methods.forEach(function (method) {\n      props[method] = {\n        writable: true,\n        value (...args) {\n          return original[method](name, ...args)\n        }\n      }\n    })\n    props.getMapper = {\n      writable: true,\n      value () {\n        return original.getMapper(name)\n      }\n    }\n    props.getCollection = {\n      writable: true,\n      value () {\n        return original.getCollection(name)\n      }\n    }\n    return Object.create(this, props)\n  },\n\n  /**\n   * Retrieve a cached `find` result, if any. This method is called during\n   * {@link SimpleStore#find} to determine if {@link Mapper#find} needs to be\n   * called. If this method returns `undefined` then {@link Mapper#find} will\n   * be called. Otherwise {@link SimpleStore#find} will immediately resolve with\n   * the return value of this method.\n   *\n   * When using {@link SimpleStore} in the browser, you can override this method\n   * to implement your own cache-busting strategy.\n   *\n   * @example\n   * const store = new SimpleStore({\n   *   cachedFind (mapperName, id, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return undefined to trigger a Mapper#find call\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return SimpleStore.prototype.cachedFind.call(this, mapperName, id, opts);\n   *   }\n   * });\n   *\n   * @example\n   * // Extend using ES2015 class syntax.\n   * class MyStore extends SimpleStore {\n   *   cachedFind (mapperName, id, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return undefined to trigger a Mapper#find call\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return super.cachedFind(mapperName, id, opts);\n   *   }\n   * }\n   * const store = new MyStore();\n   *\n   * @method SimpleStore#cachedFind\n   * @param {string} name The `name` argument passed to {@link SimpleStore#find}.\n   * @param {(string|number)} id The `id` argument passed to {@link SimpleStore#find}.\n   * @param {object} opts The `opts` argument passed to {@link SimpleStore#find}.\n   * @since 3.0.0\n   */\n  cachedFind: cachedFn,\n\n  /**\n   * Retrieve a cached `findAll` result, if any. This method is called during\n   * {@link SimpleStore#findAll} to determine if {@link Mapper#findAll} needs to be\n   * called. If this method returns `undefined` then {@link Mapper#findAll} will\n   * be called. Otherwise {@link SimpleStore#findAll} will immediately resolve with\n   * the return value of this method.\n   *\n   * When using {@link SimpleStore} in the browser, you can override this method\n   * to implement your own cache-busting strategy.\n   *\n   * @example\n   * const store = new SimpleStore({\n   *   cachedFindAll (mapperName, hash, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return undefined to trigger a Mapper#findAll call\n   *       return undefined;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return SimpleStore.prototype.cachedFindAll.call(this, mapperName, hash, opts);\n   *   }\n   * });\n   *\n   * @example\n   * // Extend using ES2015 class syntax.\n   * class MyStore extends SimpleStore {\n   *   cachedFindAll (mapperName, hash, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return undefined to trigger a Mapper#findAll call\n   *       return undefined;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return super.cachedFindAll(mapperName, hash, opts);\n   *   }\n   * }\n   * const store = new MyStore();\n   *\n   * @method SimpleStore#cachedFindAll\n   * @param {string} name The `name` argument passed to {@link SimpleStore#findAll}.\n   * @param {string} hash The result of calling {@link SimpleStore#hashQuery} on\n   * the `query` argument passed to {@link SimpleStore#findAll}.\n   * @param {object} opts The `opts` argument passed to {@link SimpleStore#findAll}.\n   * @since 3.0.0\n   */\n  cachedFindAll: cachedFn,\n\n  /**\n   * Mark a {@link Mapper#find} result as cached by adding an entry to\n   * {@link SimpleStore#_completedQueries}. By default, once a `find` entry is\n   * added it means subsequent calls to the same Resource with the same `id`\n   * argument will immediately resolve with the result of calling\n   * {@link SimpleStore#get} instead of delegating to {@link Mapper#find}.\n   *\n   * As part of implementing your own caching strategy, you may choose to\n   * override this method.\n   *\n   * @example\n   * const store = new SimpleStore({\n   *   cacheFind (mapperName, data, id, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return without saving an entry to SimpleStore#_completedQueries\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return SimpleStore.prototype.cacheFind.call(this, mapperName, data, id, opts);\n   *   }\n   * });\n   *\n   * @example\n   * // Extend using ES2015 class syntax.\n   * class MyStore extends SimpleStore {\n   *   cacheFind (mapperName, data, id, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return without saving an entry to SimpleStore#_completedQueries\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior\n   *     return super.cacheFind(mapperName, data, id, opts);\n   *   }\n   * }\n   * const store = new MyStore();\n   *\n   * @method SimpleStore#cacheFind\n   * @param {string} name The `name` argument passed to {@link SimpleStore#find}.\n   * @param {*} data The result to cache.\n   * @param {(string|number)} id The `id` argument passed to {@link SimpleStore#find}.\n   * @param {object} opts The `opts` argument passed to {@link SimpleStore#find}.\n   * @since 3.0.0\n   */\n  cacheFind (name, data, id, opts) {\n    this._completedQueries[name][id] = (name, id, opts) => this.get(name, id)\n  },\n\n  /**\n   * Mark a {@link Mapper#findAll} result as cached by adding an entry to\n   * {@link SimpleStore#_completedQueries}. By default, once a `findAll` entry is\n   * added it means subsequent calls to the same Resource with the same `query`\n   * argument will immediately resolve with the result of calling\n   * {@link SimpleStore#filter} instead of delegating to {@link Mapper#findAll}.\n   *\n   * As part of implementing your own caching strategy, you may choose to\n   * override this method.\n   *\n   * @example\n   * const store = new SimpleStore({\n   *   cachedFindAll (mapperName, data, hash, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return without saving an entry to SimpleStore#_completedQueries\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior.\n   *     return SimpleStore.prototype.cachedFindAll.call(this, mapperName, data, hash, opts);\n   *   }\n   * });\n   *\n   * @example\n   * // Extend using ES2015 class syntax.\n   * class MyStore extends SimpleStore {\n   *   cachedFindAll (mapperName, data, hash, opts) {\n   *     // Let's say for a particular Resource, we always want to pull fresh from the server\n   *     if (mapperName === 'schedule') {\n   *       // Return without saving an entry to SimpleStore#_completedQueries\n   *       return;\n   *     }\n   *     // Otherwise perform default behavior.\n   *     return super.cachedFindAll(mapperName, data, hash, opts);\n   *   }\n   * }\n   * const store = new MyStore();\n   *\n   * @method SimpleStore#cacheFindAll\n   * @param {string} name The `name` argument passed to {@link SimpleStore#findAll}.\n   * @param {*} data The result to cache.\n   * @param {string} hash The result of calling {@link SimpleStore#hashQuery} on\n   * the `query` argument passed to {@link SimpleStore#findAll}.\n   * @param {object} opts The `opts` argument passed to {@link SimpleStore#findAll}.\n   * @since 3.0.0\n   */\n  cacheFindAll (name, data, hash, opts) {\n    this._completedQueries[name][hash] = (name, hash, opts) => this.filter(name, utils.fromJson(hash))\n  },\n\n  /**\n   * Remove __all__ records from the in-memory store and reset\n   * {@link SimpleStore#_completedQueries}.\n   *\n   * @method SimpleStore#clear\n   * @returns {Object} Object containing all records that were in the store.\n   * @see SimpleStore#remove\n   * @see SimpleStore#removeAll\n   * @since 3.0.0\n   */\n  clear () {\n    const removed = {}\n    utils.forOwn(this._collections, (collection, name) => {\n      removed[name] = collection.removeAll()\n      this._completedQueries[name] = {}\n    })\n    return removed\n  },\n\n  /**\n   * Fired during {@link SimpleStore#create}. See\n   * {@link SimpleStore~beforeCreateListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeCreate\n   * @see SimpleStore~beforeCreateListener\n   * @see SimpleStore#create\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeCreate} event.\n   *\n   * @example\n   * function onBeforeCreate (mapperName, props, opts) {\n   *   // do something\n   * }\n   * store.on('beforeCreate', onBeforeCreate);\n   *\n   * @callback SimpleStore~beforeCreateListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeCreate}.\n   * @param {object} props The `props` argument received by {@link Mapper#beforeCreate}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeCreate}.\n   * @see SimpleStore#event:beforeCreate\n   * @see SimpleStore#create\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#create}. See\n   * {@link SimpleStore~afterCreateListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterCreate\n   * @see SimpleStore~afterCreateListener\n   * @see SimpleStore#create\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterCreate} event.\n   *\n   * @example\n   * function onAfterCreate (mapperName, props, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterCreate', onAfterCreate);\n   *\n   * @callback SimpleStore~afterCreateListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterCreate}.\n   * @param {object} props The `props` argument received by {@link Mapper#afterCreate}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterCreate}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterCreate}.\n   * @see SimpleStore#event:afterCreate\n   * @see SimpleStore#create\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#create}. Adds the created record to the store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('book');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   POST /book {\"author_id\":1234,...}\n   * store.create('book', {\n   *   author_id: 1234,\n   *   edition: 'First Edition',\n   *   title: 'Respect your Data'\n   * }).then((book) => {\n   *   console.log(book.id); // 120392\n   *   console.log(book.title); // \"Respect your Data\"\n   * });\n   *\n   * @fires SimpleStore#beforeCreate\n   * @fires SimpleStore#afterCreate\n   * @fires SimpleStore#add\n   * @method SimpleStore#create\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {object} record Passed to {@link Mapper#create}.\n   * @param {object} [opts] Passed to {@link Mapper#create}. See\n   * {@link Mapper#create} for more configuration options.\n   * @returns {Promise} Resolves with the result of the create.\n   * @since 3.0.0\n   */\n  create (name, record, opts) {\n    opts || (opts = {})\n    return Container.prototype.create.call(this, name, record, opts)\n      .then((result) => this._end(name, result, opts))\n  },\n\n  /**\n   * Fired during {@link SimpleStore#createMany}. See\n   * {@link SimpleStore~beforeCreateManyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeCreateMany\n   * @see SimpleStore~beforeCreateManyListener\n   * @see SimpleStore#createMany\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeCreateMany} event.\n   *\n   * @example\n   * function onBeforeCreateMany (mapperName, records, opts) {\n   *   // do something\n   * }\n   * store.on('beforeCreateMany', onBeforeCreateMany);\n   *\n   * @callback SimpleStore~beforeCreateManyListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeCreateMany}.\n   * @param {object} records The `records` argument received by {@link Mapper#beforeCreateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeCreateMany}.\n   * @see SimpleStore#event:beforeCreateMany\n   * @see SimpleStore#createMany\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#createMany}. See\n   * {@link SimpleStore~afterCreateManyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterCreateMany\n   * @see SimpleStore~afterCreateManyListener\n   * @see SimpleStore#createMany\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterCreateMany} event.\n   *\n   * @example\n   * function onAfterCreateMany (mapperName, records, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterCreateMany', onAfterCreateMany);\n   *\n   * @callback SimpleStore~afterCreateManyListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterCreateMany}.\n   * @param {object} records The `records` argument received by {@link Mapper#afterCreateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterCreateMany}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterCreateMany}.\n   * @see SimpleStore#event:afterCreateMany\n   * @see SimpleStore#createMany\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#createMany}. Adds the created records to the\n   * store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('book');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   POST /book [{\"author_id\":1234,...},{...}]\n   * store.createMany('book', [{\n   *   author_id: 1234,\n   *   edition: 'First Edition',\n   *   title: 'Respect your Data'\n   * }, {\n   *   author_id: 1234,\n   *   edition: 'Second Edition',\n   *   title: 'Respect your Data'\n   * }]).then((books) => {\n   *   console.log(books[0].id); // 142394\n   *   console.log(books[0].title); // \"Respect your Data\"\n   * });\n   *\n   * @fires SimpleStore#beforeCreateMany\n   * @fires SimpleStore#afterCreateMany\n   * @fires SimpleStore#add\n   * @method SimpleStore#createMany\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {array} records Passed to {@link Mapper#createMany}.\n   * @param {object} [opts] Passed to {@link Mapper#createMany}. See\n   * {@link Mapper#createMany} for more configuration options.\n   * @returns {Promise} Resolves with the result of the create.\n   * @since 3.0.0\n   */\n  createMany (name, records, opts) {\n    opts || (opts = {})\n    return Container.prototype.createMany.call(this, name, records, opts)\n      .then((result) => this._end(name, result, opts))\n  },\n\n  defineMapper (name, opts) {\n    const self = this\n    const mapper = Container.prototype.defineMapper.call(self, name, opts)\n    self._pendingQueries[name] = {}\n    self._completedQueries[name] = {}\n    mapper.relationList || Object.defineProperty(mapper, 'relationList', { value: [] })\n\n    const collectionOpts = {\n      // Make sure the collection has somewhere to store \"added\" timestamps\n      _added: {},\n      // Give the collection a reference to this SimpleStore\n      datastore: self,\n      // The mapper tied to the collection\n      mapper\n    }\n\n    if (opts && ('onConflict' in opts)) {\n      collectionOpts.onConflict = opts.onConflict\n    }\n\n    // The SimpleStore uses a subclass of Collection that is \"SimpleStore-aware\"\n    const collection = self._collections[name] = new self.collectionClass(null, collectionOpts)  // eslint-disable-line\n\n    const schema = mapper.schema || {}\n    const properties = schema.properties || {}\n    // TODO: Make it possible index nested properties?\n    utils.forOwn(properties, function (opts, prop) {\n      if (opts.indexed) {\n        collection.createIndex(prop)\n      }\n    })\n\n    // Create a secondary index on the \"added\" timestamps of records in the\n    // collection\n    collection.createIndex('addedTimestamps', ['$'], {\n      fieldGetter (obj) {\n        return collection._added[collection.recordId(obj)]\n      }\n    })\n\n    collection.on('all', function (...args) {\n      self._onCollectionEvent(name, ...args)\n    })\n\n    return mapper\n  },\n\n  /**\n   * Fired during {@link SimpleStore#destroy}. See\n   * {@link SimpleStore~beforeDestroyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeDestroy\n   * @see SimpleStore~beforeDestroyListener\n   * @see SimpleStore#destroy\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeDestroy} event.\n   *\n   * @example\n   * function onBeforeDestroy (mapperName, id, opts) {\n   *   // do something\n   * }\n   * store.on('beforeDestroy', onBeforeDestroy);\n   *\n   * @callback SimpleStore~beforeDestroyListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeDestroy}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#beforeDestroy}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeDestroy}.\n   * @see SimpleStore#event:beforeDestroy\n   * @see SimpleStore#destroy\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#destroy}. See\n   * {@link SimpleStore~afterDestroyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterDestroy\n   * @see SimpleStore~afterDestroyListener\n   * @see SimpleStore#destroy\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterDestroy} event.\n   *\n   * @example\n   * function onAfterDestroy (mapperName, id, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterDestroy', onAfterDestroy);\n   *\n   * @callback SimpleStore~afterDestroyListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterDestroy}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#afterDestroy}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterDestroy}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterDestroy}.\n   * @see SimpleStore#event:afterDestroy\n   * @see SimpleStore#destroy\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#destroy}. Removes any destroyed record from the\n   * in-memory store. Clears out any {@link SimpleStore#_completedQueries} entries\n   * associated with the provided `id`.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('book');\n   *\n   * store.add('book', { id: 1234, title: 'Data Management is Hard' });\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   DELETE /book/1234\n   * store.destroy('book', 1234).then(() => {\n   *   // The book record is no longer in the in-memory store\n   *   console.log(store.get('book', 1234)); // undefined\n   *\n   *   return store.find('book', 1234);\n   * }).then((book) {\n   *   // The book was deleted from the database too\n   *   console.log(book); // undefined\n   * });\n   *\n   * @fires SimpleStore#beforeDestroy\n   * @fires SimpleStore#afterDestroy\n   * @fires SimpleStore#remove\n   * @method SimpleStore#destroy\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(string|number)} id Passed to {@link Mapper#destroy}.\n   * @param {object} [opts] Passed to {@link Mapper#destroy}. See\n   * {@link Mapper#destroy} for more configuration options.\n   * @returns {Promise} Resolves when the destroy operation completes.\n   * @since 3.0.0\n   */\n  destroy (name, id, opts) {\n    opts || (opts = {})\n    return Container.prototype.destroy.call(this, name, id, opts).then((result) => {\n      const record = this.getCollection(name).remove(id, opts)\n\n      if (opts.raw) {\n        result.data = record\n      } else {\n        result = record\n      }\n      delete this._pendingQueries[name][id]\n      delete this._completedQueries[name][id]\n      return result\n    })\n  },\n\n  /**\n   * Fired during {@link SimpleStore#destroyAll}. See\n   * {@link SimpleStore~beforeDestroyAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeDestroyAll\n   * @see SimpleStore~beforeDestroyAllListener\n   * @see SimpleStore#destroyAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeDestroyAll} event.\n   *\n   * @example\n   * function onBeforeDestroyAll (mapperName, query, opts) {\n   *   // do something\n   * }\n   * store.on('beforeDestroyAll', onBeforeDestroyAll);\n   *\n   * @callback SimpleStore~beforeDestroyAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeDestroyAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#beforeDestroyAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeDestroyAll}.\n   * @see SimpleStore#event:beforeDestroyAll\n   * @see SimpleStore#destroyAll\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#destroyAll}. See\n   * {@link SimpleStore~afterDestroyAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterDestroyAll\n   * @see SimpleStore~afterDestroyAllListener\n   * @see SimpleStore#destroyAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterDestroyAll} event.\n   *\n   * @example\n   * function onAfterDestroyAll (mapperName, query, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterDestroyAll', onAfterDestroyAll);\n   *\n   * @callback SimpleStore~afterDestroyAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterDestroyAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#afterDestroyAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterDestroyAll}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterDestroyAll}.\n   * @see SimpleStore#event:afterDestroyAll\n   * @see SimpleStore#destroyAll\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#destroyAll}. Removes any destroyed records from\n   * the in-memory store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('book');\n   *\n   * store.add('book', { id: 1234, title: 'Data Management is Hard' });\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   DELETE /book/1234\n   * store.destroy('book', 1234).then(() => {\n   *   // The book record is gone from the in-memory store\n   *   console.log(store.get('book', 1234)); // undefined\n   *   return store.find('book', 1234);\n   * }).then((book) {\n   *   // The book was deleted from the database too\n   *   console.log(book); // undefined\n   * });\n   *\n   * @fires SimpleStore#beforeDestroyAll\n   * @fires SimpleStore#afterDestroyAll\n   * @fires SimpleStore#remove\n   * @method SimpleStore#destroyAll\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {object} [query] Passed to {@link Mapper#destroyAll}.\n   * @param {object} [opts] Passed to {@link Mapper#destroyAll}. See\n   * {@link Mapper#destroyAll} for more configuration options.\n   * @returns {Promise} Resolves when the delete completes.\n   * @since 3.0.0\n   */\n  destroyAll (name, query, opts) {\n    opts || (opts = {})\n    return Container.prototype.destroyAll.call(this, name, query, opts).then((result) => {\n      const records = this.getCollection(name).removeAll(query, opts)\n\n      if (opts.raw) {\n        result.data = records\n      } else {\n        result = records\n      }\n      const hash = this.hashQuery(name, query, opts)\n      delete this._pendingQueries[name][hash]\n      delete this._completedQueries[name][hash]\n      return result\n    })\n  },\n\n  eject (name, id, opts) {\n    console.warn('DEPRECATED: \"eject\" is deprecated, use \"remove\" instead')\n    return this.remove(name, id, opts)\n  },\n\n  ejectAll (name, query, opts) {\n    console.warn('DEPRECATED: \"ejectAll\" is deprecated, use \"removeAll\" instead')\n    return this.removeAll(name, query, opts)\n  },\n\n  /**\n   * Fired during {@link SimpleStore#find}. See\n   * {@link SimpleStore~beforeFindListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeFind\n   * @see SimpleStore~beforeFindListener\n   * @see SimpleStore#find\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeFind} event.\n   *\n   * @example\n   * function onBeforeFind (mapperName, id, opts) {\n   *   // do something\n   * }\n   * store.on('beforeFind', onBeforeFind);\n   *\n   * @callback SimpleStore~beforeFindListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeFind}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#beforeFind}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeFind}.\n   * @see SimpleStore#event:beforeFind\n   * @see SimpleStore#find\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#find}. See\n   * {@link SimpleStore~afterFindListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterFind\n   * @see SimpleStore~afterFindListener\n   * @see SimpleStore#find\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterFind} event.\n   *\n   * @example\n   * function onAfterFind (mapperName, id, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterFind', onAfterFind);\n   *\n   * @callback SimpleStore~afterFindListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterFind}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#afterFind}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterFind}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterFind}.\n   * @see SimpleStore#event:afterFind\n   * @see SimpleStore#find\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#find}. Adds any found record to the store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('book');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   GET /book/1234\n   * store.find('book', 1234).then((book) => {\n   *   // The book record is now in the in-memory store\n   *   console.log(store.get('book', 1234) === book); // true\n   * });\n   *\n   * @fires SimpleStore#beforeFind\n   * @fires SimpleStore#afterFind\n   * @fires SimpleStore#add\n   * @method SimpleStore#find\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(string|number)} id Passed to {@link Mapper#find}.\n   * @param {object} [opts] Passed to {@link Mapper#find}.\n   * @param {boolean} [opts.force] Bypass cacheFind\n   * @param {boolean|Function} [opts.usePendingFind] See {@link SimpleStore#usePendingFind}\n   * @returns {Promise} Resolves with the result, if any.\n   * @since 3.0.0\n   */\n  find (name, id, opts) {\n    opts || (opts = {})\n    const mapper = this.getMapper(name)\n    const pendingQuery = this._pendingQueries[name][id]\n    const usePendingFind = opts.usePendingFind === undefined ? this.usePendingFind : opts.usePendingFind\n    utils._(opts, mapper)\n\n    if (pendingQuery && (utils.isFunction(usePendingFind) ? usePendingFind.call(this, name, id, opts) : usePendingFind)) {\n      return pendingQuery\n    }\n    const item = this.cachedFind(name, id, opts)\n\n    if (opts.force || !item) {\n      const promise = this._pendingQueries[name][id] = Container.prototype.find.call(this, name, id, opts)\n      return promise\n        .then((result) => {\n          delete this._pendingQueries[name][id]\n          result = this._end(name, result, opts)\n          this.cacheFind(name, result, id, opts)\n          return result\n        }, (err) => {\n          delete this._pendingQueries[name][id]\n          return utils.reject(err)\n        })\n    }\n\n    return utils.resolve(item)\n  },\n\n  /**\n   * Fired during {@link SimpleStore#findAll}. See\n   * {@link SimpleStore~beforeFindAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeFindAll\n   * @see SimpleStore~beforeFindAllListener\n   * @see SimpleStore#findAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeFindAll} event.\n   *\n   * @example\n   * function onBeforeFindAll (mapperName, query, opts) {\n   *   // do something\n   * }\n   * store.on('beforeFindAll', onBeforeFindAll);\n   *\n   * @callback SimpleStore~beforeFindAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeFindAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#beforeFindAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeFindAll}.\n   * @see SimpleStore#event:beforeFindAll\n   * @see SimpleStore#findAll\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#findAll}. See\n   * {@link SimpleStore~afterFindAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterFindAll\n   * @see SimpleStore~afterFindAllListener\n   * @see SimpleStore#findAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterFindAll} event.\n   *\n   * @example\n   * function onAfterFindAll (mapperName, query, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterFindAll', onAfterFindAll);\n   *\n   * @callback SimpleStore~afterFindAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterFindAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#afterFindAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterFindAll}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterFindAll}.\n   * @see SimpleStore#event:afterFindAll\n   * @see SimpleStore#findAll\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#findAll}. Adds any found records to the store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('movie');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   GET /movie?rating=PG\n   * store.find('movie', { rating: 'PG' }).then((movies) => {\n   *   // The movie records are now in the in-memory store\n   *   console.log(store.filter('movie'));\n   * });\n   *\n   * @fires SimpleStore#beforeFindAll\n   * @fires SimpleStore#afterFindAll\n   * @fires SimpleStore#add\n   * @method SimpleStore#findAll\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {object} [query] Passed to {@link Mapper.findAll}.\n   * @param {object} [opts] Passed to {@link Mapper.findAll}.\n   * @param {boolean} [opts.force] Bypass cacheFindAll\n   * @param {boolean|Function} [opts.usePendingFindAll] See {@link SimpleStore#usePendingFindAll}\n   * @returns {Promise} Resolves with the result, if any.\n   * @since 3.0.0\n   */\n  findAll (name, query, opts) {\n    opts || (opts = {})\n    const mapper = this.getMapper(name)\n    const hash = this.hashQuery(name, query, opts)\n    const pendingQuery = this._pendingQueries[name][hash]\n    const usePendingFindAll = opts.usePendingFindAll === undefined ? this.usePendingFindAll : opts.usePendingFindAll\n    utils._(opts, mapper)\n\n    if (pendingQuery && (utils.isFunction(usePendingFindAll) ? usePendingFindAll.call(this, name, query, opts) : usePendingFindAll)) {\n      return pendingQuery\n    }\n\n    const items = this.cachedFindAll(name, hash, opts)\n\n    if (opts.force || !items) {\n      const promise = this._pendingQueries[name][hash] = Container.prototype.findAll.call(this, name, query, opts)\n      return promise\n        .then((result) => {\n          delete this._pendingQueries[name][hash]\n          result = this._end(name, result, opts)\n          this.cacheFindAll(name, result, hash, opts)\n          return result\n        }, (err) => {\n          delete this._pendingQueries[name][hash]\n          return utils.reject(err)\n        })\n    }\n\n    return utils.resolve(items)\n  },\n\n  /**\n   * Return the {@link Collection} with the given name, if for some\n   * reason you need a direct reference to the collection.\n   *\n   * @method SimpleStore#getCollection\n   * @param {string} name Name of the {@link Collection} to retrieve.\n   * @returns {Collection}\n   * @since 3.0.0\n   * @throws {Error} Thrown if the specified {@link Collection} does not\n   * exist.\n   */\n  getCollection (name) {\n    const collection = this._collections[name]\n    if (!collection) {\n      throw utils.err(`${DOMAIN}#getCollection`, name)(404, 'collection')\n    }\n    return collection\n  },\n\n  /**\n   * Hashing function used to cache {@link SimpleStore#find} and\n   * {@link SimpleStore#findAll} requests. This method simply JSONifies the\n   * `query` argument passed to {@link SimpleStore#find} or\n   * {@link SimpleStore#findAll}.\n   *\n   * Override this method for custom hashing behavior.\n   * @method SimpleStore#hashQuery\n   * @param {string} name The `name` argument passed to {@link SimpleStore#find}\n   * or {@link SimpleStore#findAll}.\n   * @param {object} query The `query` argument passed to {@link SimpleStore#find}\n   * or {@link SimpleStore#findAll}.\n   * @returns {string} The JSONified `query`.\n   * @since 3.0.0\n   */\n  hashQuery (name, query, opts) {\n    return utils.toJson(query || {})\n  },\n\n  inject (name, records, opts) {\n    console.warn('DEPRECATED: \"inject\" is deprecated, use \"add\" instead')\n    return this.add(name, records, opts)\n  },\n\n  /**\n   * Wrapper for {@link Collection#remove}. Removes the specified\n   * {@link Record} from the store.\n   *\n   * @example <caption>SimpleStore#remove</caption>\n   * const JSData = require('js-data');\n   * const { SimpleStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new SimpleStore();\n   * store.defineMapper('book');\n   * console.log(store.getAll('book').length);\n   * store.add('book', { id: 1234 });\n   * console.log(store.getAll('book').length);\n   * store.remove('book', 1234);\n   * console.log(store.getAll('book').length);\n   *\n   * @fires SimpleStore#remove\n   * @method SimpleStore#remove\n   * @param {string} name The name of the {@link Collection} to target.\n   * @param {string|number} id The primary key of the {@link Record} to remove.\n   * @param {object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Relations of the {@link Record} to also\n   * remove from the store.\n   * @returns {Record} The removed {@link Record}, if any.\n   * @see Collection#add\n   * @see Collection#add\n   * @since 3.0.0\n   */\n  remove (name, id, opts) {\n    const record = this.getCollection(name).remove(id, opts)\n    if (record) {\n      this.removeRelated(name, [record], opts)\n    }\n    return record\n  },\n\n  /**\n   * Wrapper for {@link Collection#removeAll}. Removes the selected\n   * {@link Record}s from the store.\n   *\n   * @example <caption>SimpleStore#removeAll</caption>\n   * const JSData = require('js-data');\n   * const { SimpleStore } = JSData;\n   * console.log('Using JSData v' + JSData.version.full);\n   *\n   * const store = new SimpleStore();\n   * store.defineMapper('movie');\n   * console.log(store.getAll('movie').length);\n   * store.add('movie', [{ id: 3, rating: 'R' }, { id: 4, rating: 'PG-13' });\n   * console.log(store.getAll('movie').length);\n   * store.removeAll('movie', { rating: 'R' });\n   * console.log(store.getAll('movie').length);\n   *\n   * @fires SimpleStore#remove\n   * @method SimpleStore#removeAll\n   * @param {string} name The name of the {@link Collection} to target.\n   * @param {object} [query={}] Selection query. See {@link query}.\n   * @param {object} [query.where] See {@link query.where}.\n   * @param {number} [query.offset] See {@link query.offset}.\n   * @param {number} [query.limit] See {@link query.limit}.\n   * @param {string|Array[]} [query.orderBy] See {@link query.orderBy}.\n   * @param {object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Relations of the {@link Record} to also\n   * remove from the store.\n   * @returns {Record} The removed {@link Record}s, if any.\n   * @see Collection#add\n   * @see Collection#add\n   * @since 3.0.0\n   */\n  removeAll (name, query, opts) {\n    if (!query || !Object.keys(query).length) {\n      this._completedQueries[name] = {}\n    } else {\n      this._completedQueries[name][this.hashQuery(name, query, opts)] = undefined\n    }\n    const records = this.getCollection(name).removeAll(query, opts)\n    if (records.length) {\n      this.removeRelated(name, records, opts)\n    }\n    return records\n  },\n\n  /**\n   * Remove from the store {@link Record}s that are related to the provided\n   * {@link Record}(s).\n   *\n   * @fires SimpleStore#remove\n   * @method SimpleStore#removeRelated\n   * @param {string} name The name of the {@link Collection} to target.\n   * @param {Record|Record[]} records {@link Record}s whose relations are to be\n   * removed.\n   * @param {object} [opts] Configuration options.\n   * @param {string[]} [opts.with] Relations of the {@link Record}(s) to remove\n   * from the store.\n   * @since 3.0.0\n   */\n  removeRelated (name, records, opts) {\n    if (!utils.isArray(records)) {\n      records = [records]\n    }\n    utils.forEachRelation(this.getMapper(name), opts, (def, optsCopy) => {\n      records.forEach((record) => {\n        let relatedData\n        let query\n        if (def.foreignKey && (def.type === hasOneType || def.type === hasManyType)) {\n          query = { [def.foreignKey]: def.getForeignKey(record) }\n        } else if (def.type === hasManyType && def.localKeys) {\n          query = {\n            where: {\n              [def.getRelation().idAttribute]: {\n                in: utils.get(record, def.localKeys)\n              }\n            }\n          }\n        } else if (def.type === hasManyType && def.foreignKeys) {\n          query = {\n            where: {\n              [def.foreignKeys]: {\n                contains: def.getForeignKey(record)\n              }\n            }\n          }\n        } else if (def.type === belongsToType) {\n          relatedData = this.remove(def.relation, def.getForeignKey(record), optsCopy)\n        }\n        if (query) {\n          relatedData = this.removeAll(def.relation, query, optsCopy)\n        }\n        if (relatedData) {\n          if (utils.isArray(relatedData) && !relatedData.length) {\n            return\n          }\n          if (def.type === hasOneType) {\n            relatedData = relatedData[0]\n          }\n          def.setLocalField(record, relatedData)\n        }\n      })\n    })\n  },\n\n  /**\n   * Fired during {@link SimpleStore#update}. See\n   * {@link SimpleStore~beforeUpdateListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeUpdate\n   * @see SimpleStore~beforeUpdateListener\n   * @see SimpleStore#update\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeUpdate} event.\n   *\n   * @example\n   * function onBeforeUpdate (mapperName, id, props, opts) {\n   *   // do something\n   * }\n   * store.on('beforeUpdate', onBeforeUpdate);\n   *\n   * @callback SimpleStore~beforeUpdateListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeUpdate}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#beforeUpdate}.\n   * @param {object} props The `props` argument received by {@link Mapper#beforeUpdate}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeUpdate}.\n   * @see SimpleStore#event:beforeUpdate\n   * @see SimpleStore#update\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#update}. See\n   * {@link SimpleStore~afterUpdateListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterUpdate\n   * @see SimpleStore~afterUpdateListener\n   * @see SimpleStore#update\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterUpdate} event.\n   *\n   * @example\n   * function onAfterUpdate (mapperName, id, props, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterUpdate', onAfterUpdate);\n   *\n   * @callback SimpleStore~afterUpdateListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterUpdate}.\n   * @param {string|number} id The `id` argument received by {@link Mapper#afterUpdate}.\n   * @param {object} props The `props` argument received by {@link Mapper#afterUpdate}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterUpdate}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterUpdate}.\n   * @see SimpleStore#event:afterUpdate\n   * @see SimpleStore#update\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#update}. Adds the updated {@link Record} to the\n   * store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('post');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   PUT /post/1234 {\"status\":\"published\"}\n   * store.update('post', 1, { status: 'published' }).then((post) => {\n   *   // The post record has also been updated in the in-memory store\n   *   console.log(store.get('post', 1234));\n   * });\n   *\n   * @fires SimpleStore#beforeUpdate\n   * @fires SimpleStore#afterUpdate\n   * @fires SimpleStore#add\n   * @method SimpleStore#update\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(string|number)} id Passed to {@link Mapper#update}.\n   * @param {object} record Passed to {@link Mapper#update}.\n   * @param {object} [opts] Passed to {@link Mapper#update}. See\n   * {@link Mapper#update} for more configuration options.\n   * @returns {Promise} Resolves with the result of the update.\n   * @since 3.0.0\n   */\n  update (name, id, record, opts) {\n    opts || (opts = {})\n    return Container.prototype.update.call(this, name, id, record, opts)\n      .then((result) => this._end(name, result, opts))\n  },\n\n  /**\n   * Fired during {@link SimpleStore#updateAll}. See\n   * {@link SimpleStore~beforeUpdateAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeUpdateAll\n   * @see SimpleStore~beforeUpdateAllListener\n   * @see SimpleStore#updateAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeUpdateAll} event.\n   *\n   * @example\n   * function onBeforeUpdateAll (mapperName, props, query, opts) {\n   *   // do something\n   * }\n   * store.on('beforeUpdateAll', onBeforeUpdateAll);\n   *\n   * @callback SimpleStore~beforeUpdateAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeUpdateAll}.\n   * @param {object} props The `props` argument received by {@link Mapper#beforeUpdateAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#beforeUpdateAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeUpdateAll}.\n   * @see SimpleStore#event:beforeUpdateAll\n   * @see SimpleStore#updateAll\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#updateAll}. See\n   * {@link SimpleStore~afterUpdateAllListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterUpdateAll\n   * @see SimpleStore~afterUpdateAllListener\n   * @see SimpleStore#updateAll\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterUpdateAll} event.\n   *\n   * @example\n   * function onAfterUpdateAll (mapperName, props, query, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterUpdateAll', onAfterUpdateAll);\n   *\n   * @callback SimpleStore~afterUpdateAllListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} props The `props` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} query The `query` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterUpdateAll}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterUpdateAll}.\n   * @see SimpleStore#event:afterUpdateAll\n   * @see SimpleStore#updateAll\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#updateAll}. Adds the updated {@link Record}s to\n   * the store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('post');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   PUT /post?author_id=1234 {\"status\":\"published\"}\n   * store.updateAll('post', { author_id: 1234 }, { status: 'published' }).then((posts) => {\n   *   // The post records have also been updated in the in-memory store\n   *   console.log(store.filter('posts', { author_id: 1234 }));\n   * });\n   *\n   * @fires SimpleStore#beforeUpdateAll\n   * @fires SimpleStore#afterUpdateAll\n   * @fires SimpleStore#add\n   * @method SimpleStore#updateAll\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {object} props Passed to {@link Mapper#updateAll}.\n   * @param {object} [query] Passed to {@link Mapper#updateAll}.\n   * @param {object} [opts] Passed to {@link Mapper#updateAll}. See\n   * {@link Mapper#updateAll} for more configuration options.\n   * @returns {Promise} Resolves with the result of the update.\n   * @since 3.0.0\n   */\n  updateAll (name, props, query, opts) {\n    opts || (opts = {})\n    return Container.prototype.updateAll.call(this, name, props, query, opts)\n      .then((result) => this._end(name, result, opts))\n  },\n\n  /**\n   * Fired during {@link SimpleStore#updateMany}. See\n   * {@link SimpleStore~beforeUpdateManyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#beforeUpdateMany\n   * @see SimpleStore~beforeUpdateManyListener\n   * @see SimpleStore#updateMany\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:beforeUpdateMany} event.\n   *\n   * @example\n   * function onBeforeUpdateMany (mapperName, records, opts) {\n   *   // do something\n   * }\n   * store.on('beforeUpdateMany', onBeforeUpdateMany);\n   *\n   * @callback SimpleStore~beforeUpdateManyListener\n   * @param {string} name The `name` argument received by {@link Mapper#beforeUpdateMany}.\n   * @param {object} records The `records` argument received by {@link Mapper#beforeUpdateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#beforeUpdateMany}.\n   * @see SimpleStore#event:beforeUpdateMany\n   * @see SimpleStore#updateMany\n   * @since 3.0.0\n   */\n  /**\n   * Fired during {@link SimpleStore#updateMany}. See\n   * {@link SimpleStore~afterUpdateManyListener} for how to listen for this event.\n   *\n   * @event SimpleStore#afterUpdateMany\n   * @see SimpleStore~afterUpdateManyListener\n   * @see SimpleStore#updateMany\n   */\n  /**\n   * Callback signature for the {@link SimpleStore#event:afterUpdateMany} event.\n   *\n   * @example\n   * function onAfterUpdateMany (mapperName, records, opts, result) {\n   *   // do something\n   * }\n   * store.on('afterUpdateMany', onAfterUpdateMany);\n   *\n   * @callback SimpleStore~afterUpdateManyListener\n   * @param {string} name The `name` argument received by {@link Mapper#afterUpdateMany}.\n   * @param {object} records The `records` argument received by {@link Mapper#afterUpdateMany}.\n   * @param {object} opts The `opts` argument received by {@link Mapper#afterUpdateMany}.\n   * @param {object} result The `result` argument received by {@link Mapper#afterUpdateMany}.\n   * @see SimpleStore#event:afterUpdateMany\n   * @see SimpleStore#updateMany\n   * @since 3.0.0\n   */\n  /**\n   * Wrapper for {@link Mapper#updateMany}. Adds the updated {@link Record}s to\n   * the store.\n   *\n   * @example\n   * import { SimpleStore } from 'js-data';\n   * import { HttpAdapter } from 'js-data-http';\n   *\n   * const store = new SimpleStore();\n   * store.registerAdapter('http', new HttpAdapter(), { default: true });\n   *\n   * store.defineMapper('post');\n   *\n   * // Since this example uses the http adapter, we'll get something like:\n   * //\n   * //   PUT /post [{\"id\":3,status\":\"published\"},{\"id\":4,status\":\"published\"}]\n   * store.updateMany('post', [\n   *   { id: 3, status: 'published' },\n   *   { id: 4, status: 'published' }\n   * ]).then((posts) => {\n   *   // The post records have also been updated in the in-memory store\n   *   console.log(store.getAll('post', 3, 4));\n   * });\n   *\n   * @fires SimpleStore#beforeUpdateMany\n   * @fires SimpleStore#afterUpdateMany\n   * @fires SimpleStore#add\n   * @method SimpleStore#updateMany\n   * @param {string} name Name of the {@link Mapper} to target.\n   * @param {(Object[]|Record[])} records Passed to {@link Mapper#updateMany}.\n   * @param {object} [opts] Passed to {@link Mapper#updateMany}. See\n   * {@link Mapper#updateMany} for more configuration options.\n   * @returns {Promise} Resolves with the result of the update.\n   * @since 3.0.0\n   */\n  updateMany (name, records, opts) {\n    opts || (opts = {})\n    return Container.prototype.updateMany.call(this, name, records, opts)\n      .then((result) => this._end(name, result, opts))\n  }\n}\n\nproxiedCollectionMethods.forEach(function (method) {\n  props[method] = function (name, ...args) {\n    return this.getCollection(name)[method](...args)\n  }\n})\n\nexport default Container.extend(props)\n\n/**\n * Fired when a record changes. Only works for records that have tracked fields.\n * See {@link SimpleStore~changeListener} on how to listen for this event.\n *\n * @event SimpleStore#change\n * @see SimpleStore~changeListener\n */\n\n/**\n * Callback signature for the {@link SimpleStore#event:change} event.\n *\n * @example\n * function onChange (mapperName, record, changes) {\n *   // do something\n * }\n * store.on('change', onChange);\n *\n * @callback SimpleStore~changeListener\n * @param {string} name The name of the associated {@link Mapper}.\n * @param {Record} record The Record that changed.\n * @param {object} changes The changes.\n * @see SimpleStore#event:change\n * @since 3.0.0\n */\n\n/**\n * Fired when one or more records are added to the in-memory store. See\n * {@link SimpleStore~addListener} on how to listen for this event.\n *\n * @event SimpleStore#add\n * @see SimpleStore~addListener\n * @see SimpleStore#event:add\n * @see SimpleStore#add\n * @see SimpleStore#create\n * @see SimpleStore#createMany\n * @see SimpleStore#find\n * @see SimpleStore#findAll\n * @see SimpleStore#update\n * @see SimpleStore#updateAll\n * @see SimpleStore#updateMany\n */\n\n/**\n * Callback signature for the {@link SimpleStore#event:add} event.\n *\n * @example\n * function onAdd (mapperName, recordOrRecords) {\n *   // do something\n * }\n * store.on('add', onAdd);\n *\n * @callback SimpleStore~addListener\n * @param {string} name The name of the associated {@link Mapper}.\n * @param {Record|Record[]} The Record or Records that were added.\n * @see SimpleStore#event:add\n * @see SimpleStore#add\n * @see SimpleStore#create\n * @see SimpleStore#createMany\n * @see SimpleStore#find\n * @see SimpleStore#findAll\n * @see SimpleStore#update\n * @see SimpleStore#updateAll\n * @see SimpleStore#updateMany\n * @since 3.0.0\n */\n\n/**\n * Fired when one or more records are removed from the in-memory store. See\n * {@link SimpleStore~removeListener} for how to listen for this event.\n *\n * @event SimpleStore#remove\n * @see SimpleStore~removeListener\n * @see SimpleStore#event:remove\n * @see SimpleStore#clear\n * @see SimpleStore#destroy\n * @see SimpleStore#destroyAll\n * @see SimpleStore#remove\n * @see SimpleStore#removeAll\n */\n\n/**\n * Callback signature for the {@link SimpleStore#event:remove} event.\n *\n * @example\n * function onRemove (mapperName, recordsOrRecords) {\n *   // do something\n * }\n * store.on('remove', onRemove);\n *\n * @callback SimpleStore~removeListener\n * @param {string} name The name of the associated {@link Mapper}.\n * @param {Record|Record[]} Record or Records that were removed.\n * @see SimpleStore#event:remove\n * @see SimpleStore#clear\n * @see SimpleStore#destroy\n * @see SimpleStore#destroyAll\n * @see SimpleStore#remove\n * @see SimpleStore#removeAll\n * @since 3.0.0\n */\n\n/**\n * Create a subclass of this SimpleStore:\n * @example <caption>SimpleStore.extend</caption>\n * const JSData = require('js-data');\n * const { SimpleStore } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * // Extend the class using ES2015 class syntax.\n * class CustomSimpleStoreClass extends SimpleStore {\n *   foo () { return 'bar'; }\n *   static beep () { return 'boop'; }\n * }\n * const customSimpleStore = new CustomSimpleStoreClass();\n * console.log(customSimpleStore.foo());\n * console.log(CustomSimpleStoreClass.beep());\n *\n * // Extend the class using alternate method.\n * const OtherSimpleStoreClass = SimpleStore.extend({\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * })\n * const otherSimpleStore = new OtherSimpleStoreClass();\n * console.log(otherSimpleStore.foo());\n * console.log(OtherSimpleStoreClass.beep());\n *\n * // Extend the class, providing a custom constructor.\n * function AnotherSimpleStoreClass () {\n *   SimpleStore.call(this)\n *   this.created_at = new Date().getTime()\n * }\n * SimpleStore.extend({\n *   constructor: AnotherSimpleStoreClass,\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * })\n * const anotherSimpleStore = new AnotherSimpleStoreClass();\n * console.log(anotherSimpleStore.created_at);\n * console.log(anotherSimpleStore.foo());\n * console.log(AnotherSimpleStoreClass.beep());\n *\n * @method SimpleStore.extend\n * @param {object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {object} [props.constructor] Provide a custom constructor function\n * to be used as the subclass itself.\n * @param {object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this SimpleStore class.\n * @since 3.0.0\n */\n","import utils from './utils'\nimport './decorators'\nimport Collection from './Collection'\n\nconst DOMAIN = 'LinkedCollection'\n\n/**\n * Extends {@link Collection}. Used by a {@link DataStore} to implement an\n * Identity Map.\n *\n * ```javascript\n * import {LinkedCollection} from 'js-data'\n * ```\n *\n * @class LinkedCollection\n * @extends Collection\n * @param {array} [records] Initial set of records to insert into the\n * collection. See {@link Collection}.\n * @param {object} [opts] Configuration options. See {@link Collection}.\n * @returns {Mapper}\n */\nfunction LinkedCollection (records, opts) {\n  utils.classCallCheck(this, LinkedCollection)\n  // Make sure this collection has somewhere to store \"added\" timestamps\n  Object.defineProperties(this, {\n    _added: {\n      value: {}\n    },\n    datastore: {\n      writable: true,\n      value: undefined\n    }\n  })\n\n  Collection.call(this, records, opts)\n\n  // Make sure this collection has a reference to a datastore\n  if (!this.datastore) {\n    throw utils.err(`new ${DOMAIN}`, 'opts.datastore')(400, 'DataStore', this.datastore)\n  }\n}\n\nexport default Collection.extend({\n  constructor: LinkedCollection,\n\n  _addMeta (record, timestamp) {\n    // Track when this record was added\n    this._added[this.recordId(record)] = timestamp\n\n    if (utils.isFunction(record._set)) {\n      record._set('$', timestamp)\n    }\n  },\n\n  _clearMeta (record) {\n    delete this._added[this.recordId(record)]\n    if (utils.isFunction(record._set)) {\n      record._set('$') // unset\n    }\n  },\n\n  _onRecordEvent (...args) {\n    Collection.prototype._onRecordEvent.apply(this, args)\n    const event = args[0]\n    // This is a very brute force method\n    // Lots of room for optimization\n    if (utils.isString(event) && event.indexOf('change') === 0) {\n      this.updateIndexes(args[1])\n    }\n  },\n\n  add (records, opts) {\n    const mapper = this.mapper\n    const timestamp = new Date().getTime()\n    const singular = utils.isObject(records) && !utils.isArray(records)\n\n    if (singular) {\n      records = [records]\n    }\n    records = Collection.prototype.add.call(this, records, opts)\n\n    if (mapper.relationList.length && records.length) {\n      // Check the currently visited record for relations that need to be\n      // inserted into their respective collections.\n      mapper.relationList.forEach(function (def) {\n        def.addLinkedRecords(records)\n      })\n    }\n\n    records.forEach((record) => this._addMeta(record, timestamp))\n\n    return singular ? records[0] : records\n  },\n\n  remove (idOrRecord, opts) {\n    const mapper = this.mapper\n    const record = Collection.prototype.remove.call(this, idOrRecord, opts)\n    if (record) {\n      this._clearMeta(record)\n    }\n\n    if (mapper.relationList.length && record) {\n      mapper.relationList.forEach(function (def) {\n        def.removeLinkedRecords(mapper, [record])\n      })\n    }\n\n    return record\n  },\n\n  removeAll (query, opts) {\n    const mapper = this.mapper\n    const records = Collection.prototype.removeAll.call(this, query, opts)\n    records.forEach(this._clearMeta, this)\n\n    if (mapper.relationList.length && records.length) {\n      mapper.relationList.forEach(function (def) {\n        def.removeLinkedRecords(mapper, records)\n      })\n    }\n\n    return records\n  }\n})\n\n/**\n * Create a subclass of this LinkedCollection:\n *\n * @example <caption>LinkedCollection.extend</caption>\n * const JSData = require('js-data');\n * const { LinkedCollection } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * // Extend the class using ES2015 class syntax.\n * class CustomLinkedCollectionClass extends LinkedCollection {\n *   foo () { return 'bar'; }\n *   static beep () { return 'boop'; }\n * }\n * const customLinkedCollection = new CustomLinkedCollectionClass();\n * console.log(customLinkedCollection.foo());\n * console.log(CustomLinkedCollectionClass.beep());\n *\n * // Extend the class using alternate method.\n * const OtherLinkedCollectionClass = LinkedCollection.extend({\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const otherLinkedCollection = new OtherLinkedCollectionClass();\n * console.log(otherLinkedCollection.foo());\n * console.log(OtherLinkedCollectionClass.beep());\n *\n * // Extend the class, providing a custom constructor.\n * function AnotherLinkedCollectionClass () {\n *   LinkedCollection.call(this);\n *   this.created_at = new Date().getTime();\n * }\n * LinkedCollection.extend({\n *   constructor: AnotherLinkedCollectionClass,\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const anotherLinkedCollection = new AnotherLinkedCollectionClass();\n * console.log(anotherLinkedCollection.created_at);\n * console.log(anotherLinkedCollection.foo());\n * console.log(AnotherLinkedCollectionClass.beep());\n *\n * @method LinkedCollection.extend\n * @param {object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {object} [props.constructor] Provide a custom constructor function\n * to be used as the subclass itself.\n * @param {object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this LinkedCollection class.\n * @since 3.0.0\n */\n","import utils from './utils'\nimport { createDescriptor as createBelongsToDescriptor, BelongsToRelation, belongsToType } from './Relation/BelongsTo'\nimport { createDescriptor as createHasManyDescriptor, HasManyRelation, hasManyType } from './Relation/HasMany'\nimport { createDescriptor as createHasOneDescriptor, HasOneRelation, hasOneType } from './Relation/HasOne'\nimport SimpleStore from './SimpleStore'\nimport LinkedCollection from './LinkedCollection'\n\nconst DATASTORE_DEFAULTS = {\n  /**\n   * Whether in-memory relations should be unlinked from records after they are\n   * destroyed.\n   *\n   * @default true\n   * @name DataStore#unlinkOnDestroy\n   * @since 3.0.0\n   * @type {boolean}\n   */\n  unlinkOnDestroy: true\n}\n\n/**\n * The `DataStore` class is an extension of {@link SimpleStore}. Not only does\n * `DataStore` manage mappers and store data in collections, it uses the\n * {@link LinkedCollection} class to link related records together in memory.\n *\n * ```javascript\n * import { DataStore } from 'js-data';\n * ```\n *\n * @example\n * import { DataStore } from 'js-data';\n * import HttpAdapter from 'js-data-http';\n * const store = new DataStore();\n *\n * // DataStore#defineMapper returns a direct reference to the newly created\n * // Mapper.\n * const UserMapper = store.defineMapper('user');\n *\n * // DataStore#as returns the store scoped to a particular Mapper.\n * const UserStore = store.as('user');\n *\n * // Call \"find\" on \"UserMapper\" (Stateless ORM)\n * UserMapper.find(1).then((user) => {\n *   // retrieved a \"user\" record via the http adapter, but that's it\n *\n *   // Call \"find\" on \"store\" targeting \"user\" (Stateful DataStore)\n *   return store.find('user', 1); // same as \"UserStore.find(1)\"\n * }).then((user) => {\n *   // not only was a \"user\" record retrieved, but it was added to the\n *   // store's \"user\" collection\n *   const cachedUser = store.getCollection('user').get(1);\n *   console.log(user === cachedUser); // true\n * });\n *\n * @class DataStore\n * @extends SimpleStore\n * @param {object} [opts] Configuration options. See {@link SimpleStore}.\n * @param {boolean} [opts.collectionClass={@link LinkedCollection}] See {@link DataStore#collectionClass}.\n * @param {boolean} [opts.debug=false] See {@link Component#debug}.\n * @param {boolean} [opts.unlinkOnDestroy=true] See {@link DataStore#unlinkOnDestroy}.\n * @param {boolean|Function} [opts.usePendingFind=true] See {@link DataStore#usePendingFind}.\n * @param {boolean|Function} [opts.usePendingFindAll=true] See {@link DataStore#usePendingFindAll}.\n * @returns {DataStore}\n * @see SimpleStore\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#datastore\",\"Components of JSData: DataStore\"]\n * @tutorial [\"http://www.js-data.io/v3.0/docs/working-with-the-datastore\",\"Working with the DataStore\"]\n * @tutorial [\"http://www.js-data.io/v3.0/docs/jsdata-and-the-browser\",\"Notes on using JSData in the Browser\"]\n */\nfunction DataStore (opts) {\n  utils.classCallCheck(this, DataStore)\n\n  opts || (opts = {})\n  // Fill in any missing options with the defaults\n  utils.fillIn(opts, DATASTORE_DEFAULTS)\n  opts.collectionClass || (opts.collectionClass = LinkedCollection)\n\n  this.relationshipTypes || (this.relationshipTypes = {})\n  this.registerRelationshipType(belongsToType, BelongsToRelation, createBelongsToDescriptor)\n  this.registerRelationshipType(hasManyType, HasManyRelation, createHasManyDescriptor)\n  this.registerRelationshipType(hasOneType, HasOneRelation, createHasOneDescriptor)\n\n  SimpleStore.call(this, opts)\n}\n\nconst props = {\n  constructor: DataStore,\n\n  defineMapper (name, opts) {\n    // This is likely only needed for tests since they don't pass in any opts.\n    opts || (opts = {})\n\n    // Complexity of this method is beyond simply using => functions to bind context\n    const self = this\n\n    // Set the relationship types so that instantiator functions can be bound\n    // to the mapper inside its constructor.\n    opts._relationshipTypes || (opts._relationshipTypes = this.relationshipTypes)\n\n    const mapper = SimpleStore.prototype.defineMapper.call(self, name, opts)\n    mapper.relationList.forEach(function (def) {\n      const localField = def.localField\n      const path = `links.${localField}`\n      const getter = function () { return this._get(path) }\n\n      let descriptor\n\n      if (Object.prototype.hasOwnProperty.call(self.relationshipTypes, def.type)) {\n        descriptor = self.relationshipTypes[def.type].createDescriptor(mapper, def, name, self)\n      }\n\n      if (descriptor) {\n        if (!Object.prototype.hasOwnProperty.call(descriptor, 'get')) {\n          descriptor.get = getter\n        }\n\n        descriptor.enumerable = def.enumerable === undefined ? false : def.enumerable\n        if (def.get) {\n          const origGet = descriptor.get\n          descriptor.get = function () {\n            return def.get(def, this, (...args) => origGet.apply(this, args))\n          }\n        }\n        if (def.set) {\n          const origSet = descriptor.set\n          descriptor.set = function (related) {\n            return def.set(def, this, related, (value) => origSet.call(this, value === undefined ? related : value))\n          }\n        }\n        Object.defineProperty(mapper.recordClass.prototype, def.localField, descriptor)\n      }\n    })\n\n    return mapper\n  },\n\n  destroy (name, id, opts) {\n    opts || (opts = {})\n    return SimpleStore.prototype.destroy.call(this, name, id, opts).then((result) => {\n      let record\n      if (opts.raw) {\n        record = result.data\n      } else {\n        record = result\n      }\n\n      if (record && this.unlinkOnDestroy) {\n        const _opts = utils.plainCopy(opts)\n        _opts.withAll = true\n        utils.forEachRelation(this.getMapper(name), _opts, (def) => {\n          utils.set(record, def.localField, undefined)\n        })\n      }\n      return result\n    })\n  },\n\n  destroyAll (name, query, opts) {\n    opts || (opts = {})\n    return SimpleStore.prototype.destroyAll.call(this, name, query, opts).then((result) => {\n      let records\n      if (opts.raw) {\n        records = result.data\n      } else {\n        records = result\n      }\n\n      if (records && records.length && this.unlinkOnDestroy) {\n        const _opts = utils.plainCopy(opts)\n        _opts.withAll = true\n        utils.forEachRelation(this.getMapper(name), _opts, (def) => {\n          records.forEach((record) => {\n            utils.set(record, def.localField, undefined)\n          })\n        })\n      }\n      return result\n    })\n  },\n\n  registerRelationshipType (type, relationshipClass, descriptor) {\n    this.relationshipTypes[type] = { RelationshipClass: relationshipClass, createDescriptor: descriptor }\n  }\n}\n\nexport default SimpleStore.extend(props)\n\n/**\n * Create a subclass of this DataStore:\n * @example <caption>DataStore.extend</caption>\n * const JSData = require('js-data');\n * const { DataStore } = JSData;\n * console.log('Using JSData v' + JSData.version.full);\n *\n * // Extend the class using ES2015 class syntax.\n * class CustomDataStoreClass extends DataStore {\n *   foo () { return 'bar'; }\n *   static beep () { return 'boop'; }\n * }\n * const customDataStore = new CustomDataStoreClass();\n * console.log(customDataStore.foo());\n * console.log(CustomDataStoreClass.beep());\n *\n * // Extend the class using alternate method.\n * const OtherDataStoreClass = DataStore.extend({\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const otherDataStore = new OtherDataStoreClass();\n * console.log(otherDataStore.foo());\n * console.log(OtherDataStoreClass.beep());\n *\n * // Extend the class, providing a custom constructor.\n * function AnotherDataStoreClass () {\n *   DataStore.call(this);\n *   this.created_at = new Date().getTime();\n * }\n * DataStore.extend({\n *   constructor: AnotherDataStoreClass,\n *   foo () { return 'bar'; }\n * }, {\n *   beep () { return 'boop'; }\n * });\n * const anotherDataStore = new AnotherDataStoreClass();\n * console.log(anotherDataStore.created_at);\n * console.log(anotherDataStore.foo());\n * console.log(AnotherDataStoreClass.beep());\n *\n * @method DataStore.extend\n * @param {object} [props={}] Properties to add to the prototype of the\n * subclass.\n * @param {object} [props.constructor] Provide a custom constructor function\n * to be used as the subclass itself.\n * @param {object} [classProps={}] Static properties to add to the subclass.\n * @returns {Constructor} Subclass of this DataStore class.\n * @since 3.0.0\n */\n","/**\n * Registered as `js-data` in NPM and Bower.\n *\n * Also available from CDN.JS and JSDelivr.\n *\n * @module js-data\n *\n * @example <caption>Install from NPM</caption>\n * npm i --save js-data@beta\n * @example <caption>Install from Bower</caption>\n * bower i --save js-data@3.0.0-beta.1\n * @example <caption>Install from CDN.JS</caption>\n * <script src=\"https://cdnjs.cloudflare.com/ajax/libs/js-data/3.0.0-beta.1/js-data.min.js\"></script>\n * @example <caption>Install from JSDelivr</caption>\n * <script src=\"https://cdn.jsdelivr.net/js-data/3.0.0-beta.1/js-data.min.js\"></script>\n * @example <caption>Load into your app via script tag</caption>\n * <script src=\"/path/to/js-data.min.js\"></script>\n * <script>\n *   console.log(JSData.version.full); // \"3.0.0-beta.1\"\n * </script>\n * @example <caption>Load into your app via CommonJS</caption>\n * var JSData = require('js-data');\n * @example <caption>Load into your app via ES2015 Modules</caption>\n * import * as JSData from 'js-data';\n * @example <caption>Load into your app via AMD</caption>\n * define('myApp', ['js-data'], function (JSData) { ... });\n */\n\n/**\n * JSData's utility methods.\n *\n * @example\n * import { utils } from 'js-data';\n * console.log(utils.isString('foo')); // true\n *\n * @name module:js-data.utils\n * @property {Function} Promise See {@link utils.Promise}.\n * @see utils\n * @since 3.0.0\n * @type {Object}\n */\nimport utils from './utils'\n\n/**\n * JSData's {@link Collection} class.\n *\n * @example\n * import { Collection } from 'js-data';\n * const collection = new Collection();\n *\n * @name module:js-data.Collection\n * @see Collection\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#collection\",\"Components of JSData: Collection\"]\n * @type {Constructor}\n */\nimport Collection from './Collection'\n\n/**\n * JSData's {@link Component} class. Most components in JSData extend this\n * class.\n *\n * @example\n * import { Component } from 'js-data';\n * // Make a custom component.\n * const MyComponent = Component.extend({\n *   myMethod (someArg) { ... }\n * });\n *\n * @name module:js-data.Component\n * @see Component\n * @since 3.0.0\n * @type {Constructor}\n */\nimport Component from './Component'\n\n/**\n * JSData's {@link Container} class. Defines and manages {@link Mapper}s. Used\n * in Node.js and in the browser, though in the browser you may want to use\n * {@link DataStore} instead.\n *\n * @example\n * import { Container } from 'js-data';\n * const store = new Container();\n *\n * @name module:js-data.Container\n * @see Container\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#container\",\"Components of JSData: Container\"]\n * @type {Constructor}\n */\nimport { Container } from './Container'\n\n/**\n * JSData's {@link DataStore} class. Primarily for use in the browser. In\n * Node.js you probably want to use {@link Container} instead.\n *\n * @example\n * import { DataStore } from 'js-data';\n * const store = new DataStore();\n *\n * @name module:js-data.DataStore\n * @see DataStore\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#datastore\",\"Components of JSData: DataStore\"]\n * @type {Constructor}\n */\nimport DataStore from './DataStore'\n\n/**\n * JSData's {@link Index} class, based on [mindex]{@link https://github.com/internalfx/mindex}.\n *\n * @name module:js-data.Index\n * @see Index\n * @since 3.0.0\n * @type {Constructor}\n */\nimport Index from '../lib/mindex/index'\n\n/**\n * JSData's {@link LinkedCollection} class. Used by the {@link DataStore}\n * component. If you need to create a collection manually, you should probably\n * use the {@link Collection} class.\n *\n * @name module:js-data.LinkedCollection\n * @see DataStore\n * @see LinkedCollection\n * @since 3.0.0\n * @type {Constructor}\n */\nimport LinkedCollection from './LinkedCollection'\n\n/**\n * JSData's {@link Mapper} class. The core of the ORM.\n *\n * @example <caption>Recommended use</caption>\n * import { Container } from 'js-data';\n * const store = new Container();\n * store.defineMapper('user');\n *\n * @example <caption>Create Mapper manually</caption>\n * import { Mapper } from 'js-data';\n * const UserMapper = new Mapper({ name: 'user' });\n *\n * @name module:js-data.Mapper\n * @see Container\n * @see Mapper\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/modeling-your-data\",\"Modeling your data\"]\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#mapper\",\"Components of JSData: Mapper\"]\n * @type {Constructor}\n */\nimport Mapper from './Mapper'\n\n/**\n * JSData's {@link Query} class. Used by the {@link Collection} component.\n *\n * @name module:js-data.Query\n * @see Query\n * @since 3.0.0\n * @type {Constructor}\n */\nimport Query from './Query'\n\n/**\n * JSData's {@link Record} class.\n *\n * @example\n * import { Container } from 'js-data';\n * const store = new Container();\n * store.defineMapper('user');\n * const user = store.createRecord('user');\n *\n * @name module:js-data.Record\n * @see Record\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#record\",\"Components of JSData: Record\"]\n * @type {Constructor}\n */\nimport Record from './Record'\n\n/**\n * JSData's {@link Relation} class.\n *\n * @example\n * import { Relation } from 'js-data';\n * let customRelation = Relation.extend({...})\n *\n * @name module:js-data.Relation\n * @see Relation\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#Relation\",\"Components of JSData: Relation\"]\n * @type {Constructor}\n */\nimport { Relation } from './Relation'\n\n/**\n * JSData's {@link Schema} class. Implements http://json-schema.org/draft-04.\n *\n * @example\n * import { Container, Schema } from 'js-data';\n * const userSchema = new Schema({\n *   properties: {\n *     id: { type: 'string' },\n *     name: { type: 'string' }\n *   }\n * });\n * const store = new Container();\n * store.defineMapper('user', {\n *   schema: userSchema\n * });\n *\n * @name module:js-data.Schema\n * @see Schema\n * @see http://json-schema.org/\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#schema\",\"Components of JSData: schema\"]\n * @tutorial [\"http://www.js-data.io/v3.0/docs/schemas\",\"JSData's Schema Syntax\"]\n * @type {Constructor}\n */\nimport Schema from './Schema'\n\n/**\n * JSData's {@link Settable} class.\n *\n * @example\n * import { Settable } from 'js-data';\n * const obj = new Settable();\n * obj.set('secret', 'value');\n * console.log(JSON.stringify(obj)); // {}\n *\n * @name module:js-data.Settable\n * @see Settable\n * @since 3.0.0\n * @type {Constructor}\n */\nimport Settable from './Settable'\n\n/**\n * JSData's {@link SimpleStore} class. Primarily for use in the browser. In\n * Node.js you probably want to use {@link Container} instead.\n *\n * @example\n * import { SimpleStore } from 'js-data';\n * const store = new SimpleStore();\n *\n * @name module:js-data.SimpleStore\n * @see SimpleStore\n * @since 3.0.0\n * @tutorial [\"http://www.js-data.io/v3.0/docs/components-of-jsdata#SimpleStore\",\"Components of JSData: SimpleStore\"]\n * @type {Constructor}\n */\nimport SimpleStore from './SimpleStore'\n\n/**\n * Describes the version of this `JSData` object.\n *\n * @example\n * console.log(JSData.version.full); // \"3.0.0-beta.1\"\n *\n * @name version\n * @memberof module:js-data\n * @property {string} full The full semver value.\n * @property {number} major The major version number.\n * @property {number} minor The minor version number.\n * @property {number} patch The patch version number.\n * @property {(string|boolean)} alpha The alpha version value, otherwise `false`\n * if the current version is not alpha.\n * @property {(string|boolean)} beta The beta version value, otherwise `false`\n * if the current version is not beta.\n * @since 2.0.0\n * @type {Object}\n */\nexport const version = '<%= version %>'\n\nexport * from './decorators'\n\nexport {\n  Collection,\n  Component,\n  Container,\n  DataStore,\n  Index,\n  LinkedCollection,\n  Mapper,\n  Query,\n  Record,\n  Relation,\n  Schema,\n  Settable,\n  SimpleStore,\n  utils\n}\n"],"names":["DOMAIN","INFINITY","MAX_INTEGER","BOOL_TAG","DATE_TAG","FUNC_TAG","NUMBER_TAG","OBJECT_TAG","REGEXP_TAG","STRING_TAG","objToString","Object","prototype","toString","PATH","ERRORS","arguments","toInteger","value","sign","remainder","toStr","call","isPlainObject","constructor","mkdirP","object","path","parts","split","forEach","key","isPrototypePolluted","includes","utils","Promise","_","dest","src","forOwn","undefined","isFunction","indexOf","_forRelation","opts","def","fn","thisArg","relationName","relation","containedName","index","with","_getIndex","localField","withAll","optsCopy","fillIn","getRelation","slice","_activeWith","splice","i","length","substr","list","_relation","isObject","addHiddenPropsToTarget","target","props","map","keys","propName","descriptor","getOwnPropertyDescriptor","enumerable","defineProperties","areDifferent","newObject","oldObject","diff","diffObjects","diffCount","added","removed","changed","classCallCheck","instance","ctor","err","name","copy","from","to","stackFrom","stackTo","blacklist","plain","isArray","isDate","Date","getTime","isRegExp","RegExp","source","match","lastIndex","create","getPrototypeOf","push","result","hasOwnProperty","isBlacklisted","deepFillIn","existing","deepMixIn","equalsFn","ignore","deepEqual","newKeys","filter","oldKeys","oldValue","newValue","equal","a","b","domain","code","prefix","message","apply","Array","Error","eventify","getter","setter","_events","emit","events","args","type","shift","listeners","f","c","all","unshift","off","func","on","extend","classProps","superClass","subClass","configurable","writable","obj","setPrototypeOf","strictEs6Class","__proto__","defineProperty","findIndex","array","record","forEachRelation","mapper","relationList","len","fromJson","json","isString","JSON","parse","get","prop","last","pop","getSuper","isCtor","__super__","intersection","array1","array2","item","matches","test","isBoolean","isInteger","isNull","isNumber","isSorN","isUndefined","logify","dbg","log","level","debug","toUpperCase","console","noDupeAdd","omit","_props","pick","reduce","plainCopy","reject","remove","resolve","set","_path","exec","_equal","toJson","stringify","unset","safeSetProp","field","_set","safeSetLink","Settable","_get","_unset","Component","_listeners","INDEX_ERR","reserved","limit","offset","orderBy","skip","sort","where","escapeRegExp","percentRegExp","underscoreRegExp","escape","pattern","replace","Query","collection","data","_applyWhereFromObject","fields","ops","predicates","clause","expr","op","_applyWhereFromArray","groups","_where","prev","parser","group","isOr","_testObjectGroup","keep","first","charAt","evaluate","_testArrayGroup","between","leftKeys","rightKeys","getIndex","compare","cA","cB","temp","predicate","like","query","getData","forEachFn","keyList","getAll","concat","flags","num","Math","min","mapFn","mapCall","funcName","run","isectEmpty","isectNotEmpty","in","notIn","contains","notContains","Relation","relatedMapper","options","TYPE_NAME","validateOptions","canAutoAddLinks","add","relatedCollection","datastore","getCollection","related","DOMAIN_ERR","foreignKey","localKey","isRequiresValidForeignKey","assignTo","relationFields","canFindLinkFor","getForeignKey","idAttribute","setForeignKey","relatedRecord","_setForeignKey","relatedRecords","getLocalField","setLocalField","relatedData","getInverse","inverse","findInverseRelation","isInversedTo","addLinkedRecords","records","linkRecord","isEmptyLinks","findExistingLinksFor","removeLinkedRecords","relatedId","unsaved","findExistingLinksByForeignKey","id","ensureLinkedDataHasProperType","relationData","is","createRecord","isRequiresParentId","isRequiresChildId","createChildRecord","createLinked","then","hasManyType","HasManyRelation","localKeys","foreignKeys","hasForeignKeys","recordId","ids","findExistingLinksByLocalKeys","findExistingLinksByForeignKeys","createParentRecord","foreignIdField","createMany","createDescriptor","store","updateOpts","_collections","indexes","createIndex","current","relatedIdAttribute","inverseDef","inverseLocalField","toLink","toLinkIds","currentParent","currentChildrenOfParent","child","updateIndex","parents","parent","_key","children","hasOneType","HasOneRelation","belongsToType","BelongsToRelation","removeInverseRelation","setupInverseRelation","foreignKeyDescriptor","recordClass","originalGet","originalSet","currentParentId","storeRecord","belongsTo","hasMany","hasOne","superMethod","bind","creatingPath","noValidatePath","keepChangeHistoryPath","previousPath","Record","noValidate","keepChangeHistory","validateOnSet","toJSON","_mapper","afterLoadRelations","beforeLoadRelations","changeHistory","changes","commit","destroy","hasChanges","quickHasChanges","isNew","isValid","validate","loadRelations","relations","adapter","getAdapterName","tasks","task","raw","load","previous","revert","preserve","save","postProcess","changesOnly","silent","hashCode","insertAt","removeAt","binarySearch","lo","hi","compared","mid","found","Index","fieldList","fieldGetter","isIndex","values","pos","dataLocation","newIndex","results","order","visitAll","cb","leftInclusive","rightInclusive","_between","leftKey","rightKey","currKey","peek","clear","insertRecord","removeRecord","isUnique","j","updateRecord","COLLECTION_DEFAULTS","commitOnMerge","emitRecordEvents","onConflict","Collection","queryClass","_onRecordEvent","beforeAdd","singular","existingNoValidate","updateIndexes","afterAdd","afterRemove","afterRemoveAll","beforeRemove","beforeRemoveAll","instances","prune","removeAll","Ctor","initialValue","idOrRecord","queryOrRecords","types","boolean","integer","null","number","string","segmentToString","segment","str","makePath","segments","makeError","actual","expected","addError","errors","maxLengthCommon","keyword","schema","max","minLengthCommon","validationKeywords","allOf","allErrors","_schema","anyOf","validated","dependencies","enum","possibleValues","join","items","checkingTuple","maximum","exclusiveMaximum","maxItems","maxLength","maxProperties","minimum","exclusiveMinimum","minItems","minLength","minProperties","multipleOf","not","oneOf","properties","additionalProperties","patternProperties","toValidate","undef","origProp","required","existingOnly","prevProp","validType","_type","validator","typeGroupValidators","uniqueItems","runOps","ANY_OPS","ARRAY_OPS","NUMERIC_OPS","OBJECT_OPS","STRING_OPS","validateAny","ctx","shouldPop","extends","changingPath","changedPath","changeHistoryPath","eventIdPath","silentPath","validationFailureMsg","numeric","Schema","definition","_definition","validationKeyword","unsetter","track","makeDescriptor","applyDefaults","hasSet","default","orig","keyPath","error","changing","clearTimeout","setTimeout","changeRecord","timestamp","_copy","applyDefaultsHooks","validatingHooks","makeNotify","getSchema","toProcess","originalExistingOnly","notify","notify2","LIFECYCLE_METHODS","count","defaults","destroyAll","find","findAll","sum","update","adapterArgs","beforeAssign","updateAll","updateMany","MAPPER_DEFAULTS","_adapters","_relationshipTypes","RelationshipClass","createBelongsToDescriptor","createHasManyDescriptor","createHasOneDescriptor","applySchema","defaultAdapter","Mapper","lifecycleMethods","relationshipTypes","methods","isPrototypeOf","relDef","typeName","afterCount","afterCreate","afterCreateMany","afterDestroy","afterDestroyAll","afterFind","afterFindAll","afterSum","afterUpdate","afterUpdateAll","afterUpdateMany","beforeCreate","beforeCreateMany","beforeCount","beforeDestroy","beforeDestroyAll","beforeFind","beforeFindAll","beforeSum","beforeUpdate","beforeUpdateAll","beforeUpdateMany","_end","_data","wrap","crud","originalRecord","parentRelationMap","adapterResponse","_runHook","_value","_createParentRecordIfRequired","relationMap","_invokeAdapterMethod","createdProps","_createOrAssignChildRecordIfRequired","originalProps","_commitChanges","recordOrRecords","newValues","createInstance","context","originalRecords","_recordValues","belongsToRelationData","Boolean","createdRecordsData","belongsToData","createdRecordData","RecordCtor","method","config","upper","before","after","getAdapter","_opts","assign","_result","getAdapters","registerAdapter","hookName","hookArgs","defaultValueIndex","overridenResult","propsOrRecords","conversionOptions","pass","_record","some","defineRelations","_name","getMapperByName","getMapper","proxiedMapperMethods","Container","_mappers","mapperClass","mapperDefaults","_onMapperEvent","as","original","defineMapper","defineResource","warn","proxiedCollectionMethods","ownMethodsForScoping","cachedFn","hashOrId","cached","_completedQueries","SIMPLESTORE_DEFAULTS","usePendingFind","usePendingFindAll","SimpleStore","collectionClass","_pendingQueries","addToCache","_onCollectionEvent","cachedFind","cachedFindAll","cacheFind","cacheFindAll","hash","self","collectionOpts","_added","indexed","hashQuery","eject","ejectAll","pendingQuery","force","promise","inject","removeRelated","LinkedCollection","_addMeta","_clearMeta","event","DATASTORE_DEFAULTS","unlinkOnDestroy","DataStore","registerRelationshipType","origGet","origSet","relationshipClass","version"],"mappings":"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MAEO;IACLgB,KAAK,CAACgL,GAAN,CAAU7C,MAAV,EAAkBqD,KAAlB,EAAyBxM,KAAzB;;AAEH,CANM;AAQPgB,KAAK,CAACuL,WAAN,GAAoBA,WAApB;AACAvL,KAAK,CAAC0L,WAAN,GAAoBA,WAApB;;AC1oDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,AAAe,SAASC,QAAT,GAAqB;EAClC,IAAMlB,MAAM,GAAG,EAAf;EACAhM,MAAM,CAACkE,gBAAP,CAAwB,IAAxB,EAA8B;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIiJ,IAAI,EAAE;MAAE5M,KAAF,iBAASa,GAAT,EAAc;QAAE,OAAOG,KAAK,CAAC6I,GAAN,CAAU4B,MAAV,EAAkB5K,GAAlB,CAAP;;KAXM;;;AAchC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI4L,IAAI,EAAE;MAAEzM,KAAF,iBAASa,GAAT,EAAcb,MAAd,EAAqB;QAAE,OAAOgB,KAAK,CAACgL,GAAN,CAAUP,MAAV,EAAkB5K,GAAlB,EAAuBb,MAAvB,CAAP;;KAxBD;;;AA2BhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI6M,MAAM,EAAE;MAAE7M,KAAF,iBAASa,GAAT,EAAc;QAAE,OAAOG,KAAK,CAACsL,KAAN,CAAYb,MAAZ,EAAoB5K,GAApB,CAAP;;;GAnC1B;AAqCD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA8L,QAAQ,CAACrE,MAAT,GAAkBtH,KAAK,CAACsH,MAAxB;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASwE,SAAT,CAAoBpL,IAApB,EAA0B;EACxBiL,QAAQ,CAACvM,IAAT,CAAc,IAAd;EACAsB,IAAI,KAAKA,IAAI,GAAG,EAAZ,CAAJ;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,KAAK0J,KAAL,GAAa3L,MAAM,CAACqG,cAAP,CAAsB1F,IAAtB,CAA2BsB,IAA3B,EAAiC,OAAjC,IAA4C,CAAC,CAACA,IAAI,CAAC0J,KAAnD,GAA2D,KAAxE;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE3L,MAAM,CAACuJ,cAAP,CAAsB,IAAtB,EAA4B,YAA5B,EAA0C;IAAEhJ,KAAK,EAAE,EAAT;IAAa2I,QAAQ,EAAE;GAAjE;AACD;;AAED,kBAAegE,QAAQ,CAACrE,MAAT,CAAgB;EAC7BhI,WAAW,EAAEwM;AADgB,CAAhB,CAAf;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,SAAS,CAACxE,MAAV,GAAmBtH,KAAK,CAACsH,MAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAtH,KAAK,CAACgK,MAAN,CAAa8B,SAAS,CAACpN,SAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAsB,KAAK,CAACqG,QAAN,CACEyF,SAAS,CAACpN,SADZ,EAEE,YAAY;EACV,OAAO,KAAKqN,UAAZ;AACD,CAJH,EAKE,UAAU/M,KAAV,EAAiB;EACf,KAAK+M,UAAL,GAAkB/M,KAAlB;AACD,CAPH;;AC7NA,IAAMlB,QAAM,GAAG,OAAf;AACA,IAAMkO,SAAS,GAAG,0CAAlB;;AAGA,IAAMC,QAAQ,GAAG;EACfC,KAAK,EAAE,EADQ;EAEfC,MAAM,EAAE,EAFO;EAGfC,OAAO,EAAE,EAHM;EAIfC,IAAI,EAAE,EAJS;EAKfC,IAAI,EAAE,EALS;EAMfC,KAAK,EAAE;AANQ,CAAjB;;AAUA,IAAMC,YAAY,GAAG,2BAArB;AACA,IAAMC,aAAa,GAAG,IAAtB;AACA,IAAMC,gBAAgB,GAAG,IAAzB;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAUC,OAAV,EAAmB;EAChC,OAAOA,OAAO,CAACC,OAAR,CAAgBL,YAAhB,EAA8B,MAA9B,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,KAAT,CAAgBC,UAAhB,EAA4B;EAC1B/M,KAAK,CAACqD,cAAN,CAAqB,IAArB,EAA2ByJ,KAA3B;;AAGF;AACA;AACA;AACA;AACA;AACA;;EACE,KAAKC,UAAL,GAAkBA,UAAlB;;AAGF;AACA;AACA;A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,GAAG,KAAK7N,WAAL,CAAiB6N,GAA7B;;IACA,IAAIA,GAAG,CAACI,EAAD,CAAP,EAAa;MACX,OAAOJ,GAAG,CAACI,EAAD,CAAH,CAAQvO,KAAR,EAAe6P,SAAf,CAAP;;;IAEF,IAAItB,EAAE,CAAC/M,OAAH,CAAW,MAAX,MAAuB,CAA3B,EAA8B;MAC5B,OAAO,KAAKsO,IAAL,CAAUD,SAAV,EAAqBtB,EAAE,CAACzL,MAAH,CAAU,CAAV,CAArB,EAAmCoJ,IAAnC,CAAwClM,KAAxC,MAAmD,IAA1D;KADF,MAEO,IAAIuO,EAAE,CAAC/M,OAAH,CAAW,SAAX,MAA0B,CAA9B,EAAiC;MACtC,OAAO,KAAKsO,IAAL,CAAUD,SAAV,EAAqBtB,EAAE,CAACzL,MAAH,CAAU,CAAV,CAArB,EAAmCoJ,IAAnC,CAAwClM,KAAxC,MAAmD,IAA1D;;GAzN0B;;;AA8NhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEuG,MAnR8B,kBAmRtBwJ,KAnRsB,EAmRflO,OAnRe,EAmRN;IAAA;;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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0P;KADvD;IAElBtQ,WAAW,EAAE;MAAEqQ,iBAAiB,EAAEpQ,eAArB;MAAsCW,gBAAgB,EAAE2P;KAFnD;IAGlBvO,UAAU,EAAE;MAAEqO,iBAAiB,EAAEpO,cAArB;MAAqCrB,gBAAgB,EAAE4P;;GAvB/C;;;AA2BxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEtC,aAAa,EAAE,IAnCO;;;AAsCxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEuC,WAAW,EAAE,IAjDS;;;AAoDxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,cAAc,EAAE,MA5DM;;;AA+DxB;AACA;AACA;AACA;AACA;AACA;AACA;EACEzS,WAAW,EAAE,IAtES;;;AAyExB;AACA;AACA;AACA;AACA;AACA;AACA;EACEsF,iBAAiB,EAAE,IAhFG;;;AAmFxB;AACA;AACA;AACA;AACA;AACA;AACA;EACE6L,MAAM,EAAE,IA1Fc;;;AA6FxB;AACA;AACA;AACA;AACA;AACA;AACA;EACE9L,UAAU,EAAE,KApGU;;;AAuGxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEsB,GAAG,EAAE,KAtHiB;;;AAyHxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEpB,aAAa,EAAE;AAjIO,CAAxB;AAoIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASmN,MAAT,CAAiBtjB,IAAjB,EAAuB;EAAA;;EACrBV,KAAK,CAACqD,cAAN,CAAqB,IAArB,EAA2B2gB,MAA3B;EACAlY,WAAS,CAAC1M,IAAV,CAAe,IAAf;EACAsB,IAAI,KAAKA,IAAI,GAAG,EAAZ,CAAJ,CAHqB;;EAMrBjC,MAAM,CAACkE,gBAAP,CAAwB,IAAxB,EAA8B;IAC5B6gB,SAAS,EAAE;MACTxkB,KAAK,EAAEsB,SADE;MAETqH,QAAQ,EAAE;KAHgB;;;AAOhC;AACA;AACA;AACA;AACA;AACA;IACIgJ,SAAS,EAAE;MACT3R,KAAK,EAAEsB,SADE;MAETqH,QAAQ,EAAE;KAfgB;;;AAmBhC;AACA;AACA;AACA;AACA;AACA;AACA;IACIsc,gBAAgB,EAAE;MAChBjlB,KAAK,EAAE2jB;KA3BmB;;;AA+BhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI/M,WAAW,EAAE;MACX5W,KAAK,EAAEsB,SADI;MAEXqH,QAAQ,EAAE;KAnFgB;;;AAuFhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI0V,MAAM,EAAE;MACNre,KAAK,EAAEsB,SADD;MAENqH,QAAQ,EAAE;;GA/Hd,EANqB;;EA0IrB,IAAMuc,iBAAiB,GAAGxjB,IAAI,CAAC+iB,kBAAL,IAA2BF,eAAe,CAACE,kBAArE;EACA,OAAO/iB,IAAI,CAAC+iB,kBAAZ,CA3IqB;;EA8IrBzjB,KAAK,CAACuB,MAAN,CAAa,IAAb,EAAmBb,IAAnB,EA9IqB;;EAgJrBV,KAAK,CAACuB,MAAN,CAAa,IAAb,EAAmBvB,KAAK,CAAC0D,IAAN,CAAW6f,eAAX,CAAnB;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;E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ACA;EACEoC,QAAQ,EAAEpC,OAnHoB;;;AAsHhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEqC,WAAW,EAAErC,OAjIiB;;;AAoIhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEsC,cAAc,EAAEtC,OA/Ic;;;AAkJhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEuC,eAAe,EAAEvC,OA5Ja;;;AA+JhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEwC,YAAY,EAAEzC,MAxKgB;;;AA2KhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE0C,gBAAgB,EAAE1C,MApLY;;;AAuLhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE2C,WAAW,EAAE3C,MAhMiB;;;AAmMhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE4C,aAAa,EAAE5C,MA5Me;;;AA+MhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE6C,gBAAgB,EAAE7C,MAxNY;;;AA2NhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE8C,UAAU,EAAE9C,MApOkB;;;AAuOhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE+C,aAAa,EAAE/C,MAhPe;;;AAmPhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEgD,SAAS,EAAEhD,MA7PmB;;;AAgQhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEiD,YAAY,EAAEjD,MA1QgB;;;AA6QhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEkD,eAAe,EAAElD,MAvRa;;;AA0RhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEmD,gBAAgB,EAAEnD,MAnSY;;;AAsShC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEoD,IAlT8B,gBAk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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE5Q,OAlhC8B,mBAkhCrB1E,EAlhCqB,EAkhCjBjS,IAlhCiB,EAkhCX;IACjB,OAAO,KAAKslB,IAAL,CAAU,SAAV,EAAqBrT,EAArB,EAAyBjS,IAAzB,CAAP;GAnhC4B;;;AAuhChC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEoiB,UAvnC8B,sBAunClB/T,KAvnCkB,EAunCXrO,IAvnCW,EAunCL;IACvB,OAAO,KAAKslB,IAAL,CAAU,YAAV,EAAwBjX,KAAxB,EAA+BrO,IAA/B,CAAP;GAxnC4B;;;AA4nChC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEqiB,IAhtC8B,gBAgtCxBpQ,EAhtCwB,EAgtCpBjS,IAhtCoB,EAgtCd;IACd,OAAO,KAAKslB,IAAL,CAAU,MAAV,EAAkBrT,EAAlB,EAAsBjS,IAAtB,CAAP;GAjtC4B;;;AAqtChC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEsiB,OA7yC8B,mBA6yCrBjU,KA7yCqB,EA6yCdrO,IA7yCc,EA6yCR;IACpB,OAAO,KAAKslB,IAAL,CAAU,SAAV,EAAqBjX,KAArB,EAA4BrO,IAA5B,CAAP;GA9yC4B;;;AAkzChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEonB,UA3zC8B,sBA2zClBrkB,IA3zCkB,EA2zCZ;IAChB,KAAKwG,GAAL,CAAS,YAAT,EAAuB,OAAvB,EAAgCxG,IAAhC;IACA,IAAMoU,OAAO,GAAG,KAAKC,cAAL,CAAoBrU,IAApB,CAAhB;;IACA,IAAI,CAACoU,OAAL,EAAc;MACZ,MAAM7X,KAAK,CAACwD,GAAN,WAAa1F,QAAb,kBAAkC,MAAlC,EAA0C,GAA1C,EAA+C,QAA/C,EAAyD2F,IAAzD,CAAN;;;IAEF,OAAO,KAAKykB,WAAL,GAAmBrQ,OAAnB,CAAP;GAj0C4B;;;AAq0ChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,cA90C8B,0BA80CdpX,IA90Cc,EA80CR;IACpBA,IAAI,KAAKA,IAAI,GAAG,EAAZ,CAAJ;;IAC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AsqDtBvQ,EAtqDsB,EAsqDlBvQ,KAtqDkB,EAsqDX1B,IAtqDW,EAsqDL;IACvB,OAAO,KAAKslB,IAAL,CAAU,QAAV,EAAoBrT,EAApB,EAAwBvQ,KAAxB,EAA+B1B,IAA/B,CAAP;GAvqD4B;;;AA2qDhC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE2iB,SAjwD8B,qBAiwDnBjhB,KAjwDmB,EAiwDZ2M,KAjwDY,EAiwDLrO,IAjwDK,EAiwDC;IAC7B,OAAO,KAAKslB,IAAL,CAAU,WAAV,EAAuB5jB,KAAvB,EAA8B2M,KAA9B,EAAqCrO,IAArC,CAAP;GAlwD4B;;;AAswDhC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE4iB,UAt1D8B,sBAs1DlBnR,OAt1DkB,EAs1DTzR,IAt1DS,EAs1DH;IACzB,OAAO,KAA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ACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,QAzGkC;AA2GlC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,YA9LkC;AAgMlC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,cArNkC;AAuNlC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,SAnSkC;AAqSlC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,YAjXkC;AAmXlC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,MA9bkC;AAgclC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,SA5gBkC;AA8gBlC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,WAvhBkC;AAyhBlC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,IA7iBkC;AA+iBlC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,KAtkBkC;AAwkBlC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,QAjnBkC;AAmnBlC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,QArsBkC;AAusBlC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,WAxxBkC;AA0xBlC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,YAx2BkC;AA02BlC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,UAr4BkC,CAA7B;AAw4BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,AAAO,SAASC,SAAT,CAAoBxoB,IAApB,EAA0B;EAC/BV,KAAK,CAACqD,cAAN,CAAqB,IAArB,EAA2B6lB,SAA3B;EACApd,WAAS,CAAC1M,IAAV,CAAe,IAAf;EACAsB,IAAI,KAAKA,IAAI,GAAG,EAAZ,CAAJ;EAEAjC,MAAM,CAACkE,gBAAP,CAAwB,IAAxB,EAA8B;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI6gB,SAAS,EAAE;MACTxkB,KAAK,EAAE;KAXmB;;;AAehC;AACA;AACA;AACA;AACA;AACA;AACA;IACImqB,QAAQ,EAAE;MACRnqB,KAAK,EAAE;KAvBmB;;;AA2BhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIoqB,WAAW,EAAE;MACXpqB,KAAK,EAAEsB,SADI;MAEXqH,QAAQ,EAAE;;GArDd,EAL+B;;EA+D/B3H,KAAK,CAACuB,MAAN,CAAa,IAAb,EAAmBb,IAAnB;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,KAAK2oB,cAAL,GAAsB,KAAKA,cAAL,IAAuB,EAA7C,CAxF+B;;EA2F/B,KAAKD,WAAL,KAAqB,KAAKA,WAAL,GAAmBpF,QAAxC;AACD;AAED,IAAM5hB,KAAK,GAAG;EACZ9C,WAAW,EAAE4pB,SADD;;;AAId;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEI,cAtCY,0BAsCI7lB,IAtCJ,EAsCmB;IAAA,kCAANkD,IAAM;MAANA,IAAM;;;IAC7B,IAAMC,IAAI,GAAGD,IAAI,CAACE,KAAL,EAAb;IACA,KAAKJ,IAAL,cAAUG,IAAV,EAAgBnD,IAAhB,SAAyBkD,IAAzB;GAxCU;;;AA4Cd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE4iB,EApEY,cAoER9lB,IApEQ,EAoEF;IACR,IAAMrB,KAAK,GAAG,EAAd;IACA,IAA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pB,OAArB,CAA6B,UAAU6nB,MAAV,EAAkB;EAC7CrlB,KAAK,CAACqlB,MAAD,CAAL,GAAgB,UAAUhkB,IAAV,EAAyB;IAAA;;IAAA,mCAANkD,IAAM;MAANA,IAAM;;;IACvC,OAAO,wBAAKqiB,SAAL,CAAevlB,IAAf,GAAqBgkB,MAArB,yBAAgC9gB,IAAhC,CAAP;GADF;AAGD,CAJD;AAMAmF,WAAS,CAACxE,MAAV,CAAiBlF,KAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC11CA,IAAMtE,QAAM,GAAG,aAAf;AACA,IAAM8rB,wBAAwB,GAAG;AAC/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,KA9B+B;AAgC/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,SArD+B;AAuD/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,aA1E+B;AA4E/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,QAnH+B;AAqH/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,KA9I+B;AAgJ/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,QApK+B;AAsK/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,OAhL+B;AAkL/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,OApM+B;AAsM/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,QApO+B;AAsO/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,SA/O+B,CAAjC;AAiPA,IAAMC,oBAAoB,GAAG,CAC3B,YAD2B,EAE3B,YAF2B,EAG3B,eAH2B,EAI3B,WAJ2B,EAK3B,cAL2B,EAM3B,WAN2B,CAA7B;;AASA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAUrmB,IAAV,EAAgBsmB,QAAhB,EAA0BrpB,IAA1B,EAAgC;EAC/C,IAAMspB,MAAM,GAAG,KAAKC,iBAAL,CAAuBxmB,IAAvB,EAA6BsmB,QAA7B,CAAf;;EACA,IAAI/pB,KAAK,CAACO,UAAN,CAAiBypB,MAAjB,CAAJ,EAA8B;IAC5B,OAAOA,MAAM,CAACvmB,IAAD,EAAOsmB,QAAP,EAAiBrpB,IAAjB,CAAb;;;EAEF,OAAOspB,MAAP;AACD,CAND;;AAQA,IAAME,oBAAoB,GAAG;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,cAAc,EAAE,IAXW;;;AAc7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,iBAAiB,EAAE;AAvBQ,CAA7B;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAsB3pB,IAAtB,EAA4B;EAC1BV,KAAK,CAACqD,cAAN,CAAqB,IAArB,EAA2BgnB,WAA3B;EAEA3pB,IAAI,KAAKA,IAAI,GAAG,EAAZ,CAAJ,CAH0B;;EAK1BV,KAAK,CAACuB,MAAN,CAAab,IAAb,EAAmBwpB,oBAAnB;EACAhB,SAAS,CAAC9pB,IAAV,CAAe,IAAf,EAAqBsB,IAArB;EAEA,KAAK4pB,eAAL,GAAuB,KAAKA,eAAL,IAAwBtP,YAA/C;EACA,KAAK5G,YAAL,GAAoB,EAApB;EACA,KAAKmW,eAAL,GAAuB,EAAvB;EACA,KAAKN,iBAAL,GAAyB,EAAzB;AACD;;AAED,IAAM7nB,OAAK,GAAG;EACZ9C,WAAW,EAAE+qB,WADD;;;AAId;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACExE,IAdY,gBAcNpiB,IAdM,EAcAoB,MAdA,EAcQnE,IAdR,EAcc;IACxB,IAAIsM,IAAI,GAAGtM,IAAI,CAACuX,GAAL,GAAWpT,MAAM,CAACmI,IAAlB,GAAyBnI,MAApC;;IACA,IAAImI,IAAI,IAAIhN,KAAK,CAACO,UAAN,CAAiB,KAAKiqB,UAAtB,CAAZ,EAA+C;MAC7Cxd,IAAI,GAAG,KAAKwd,UAAL,CAAgB/mB,IAAhB,EAAsBuJ,IAAtB,EAA4BtM,IAA5B,CAAP;;MACA,IAAIA,IAAI,CAACuX,GAAT,EAAc;QACZpT,MAAM,CAACmI,IAAP,GAAcA,IAAd;OADF,MAEO;QACLnI,MAAM,GAAGmI,IAAT;;;;IAGJ,OAAOnI,MAAP;GAxBU;;;AA4Bd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;EACE4lB,kBAxEY,8BAwEQhnB,IAxER,EAwEuB;IAAA,kCAANkD,IAAM;MAANA,IAAM;;;IACjC,IAAMC,IAAI,GAAGD,IAAI,CAACE,KAAL,EAAb;IACA,KAAKJ,IAAL,cAAUG,IAAV,EAAgBnD,IAAhB,SAAyBkD,IAAzB;GA1EU;;;AA8Ed;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE6jB,UAvHY,sBAuHA/mB,IAvHA,EAuHMuJ,IAvHN,EAuHYtM,IAvHZ,EAuHkB;IAC5B,OAAO,KAAKkQ,aAAL,CAAmBnN,IAAnB,EAAyBgN,GAAzB,CAA6BzD,IAA7B,EAAmCtM,IAAnC,CAAP;GAxHU;;;AA4Hd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE6oB,EAnJY,cAmJR9lB,IAnJQ,EAmJF;IACR,IAAMrB,KAAK,GAAG,EAAd;IACA,IAAMonB,QAAQ,GAAG,IAAjB;IACA,IAAMrF,OAAO,GAAG0F,oBAAoB,CACjCza,MADa,CACN6Z,oBADM,EAEb7Z,MAFa,CAENwa,wBAFM,CAAhB;IAIAzF,OAAO,CAACvkB,OAAR,CAAgB,UAAU6nB,MAAV,EAAkB;MAChCrlB,KAAK,CAACqlB,MAAD,CAAL,GAAgB;QACd9f,QAAQ,EAAE,IADI;QAEd3I,KAFc,mBAEE;UAAA,mCAAN2H,IAAM;YAANA,IAAM;;;UACd,OAAO6iB,QAAQ,CAAC/B,MAAD,CAAR,OAAA+B,QAAQ,GAAS/lB,IAAT,SAAkBkD,IAAlB,EAAf;;OAHJ;KADF;IAQAvE,KAAK,CAAC4mB,SAAN,GAAkB;MAChBrhB,QAAQ,EAAE,IADM;MAEhB3I,KAFgB,mBAEP;QACP,OAAOwqB,QAAQ,CAACR,SAAT,CAAmBvlB,IAAnB,CAAP;;KAHJ;IAMArB,KAAK,CAACwO,aAAN,GAAsB;MACpBjJ,QAAQ,EAAE,IADU;MAEpB3I,KAFoB,mBAEX;QACP,OAAOwqB,QAAQ,CAAC5Y,aAAT,CAAuBnN,IAAvB,CAAP;;KAHJ;IAMA,OAAOhF,MAAM,CAACiG,MAAP,CAAc,IAAd,EAAoBtC,KAApB,CAAP;GA9KU;;;AAkLd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEsoB,UAAU,EAAEZ,QA7NA;;;AAgOd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEa,aAAa,EAAEb,QA5QH;;;AA+Qd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEc,SA3TY,qBA2TDnnB,IA3TC,EA2TKuJ,IA3TL,EA2TW2F,EA3TX,EA2TejS,IA3Tf,EA2TqB;IAAA;;IAC/B,KAAKupB,iBAAL,CAAuBxmB,IAAvB,EAA6BkP,EAA7B,IAAmC,UAAClP,IAAD,EAAOkP,EAAP,EAAWjS,IAAX;MAAA,OAAoB,KAAI,CAACmI,GAAL,CAASpF,IAAT,EAAekP,EAAf,CAApB;KAAnC;GA5TU;;;AAgUd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEkY,YA7WY,wBA6WEpnB,IA7WF,EA6WQuJ,IA7WR,EA6Wc8d,IA7Wd,EA6WoBpqB,IA7WpB,EA6W0B;IAAA;;IACpC,KAAKupB,iBAAL,CAAuBxmB,IAAvB,EAA6BqnB,IAA7B,IAAqC,UAACrnB,IAAD,EAAOqnB,IAAP,EAAapqB,IAAb;MAAA,OAAsB,MAAI,CAAC6E,MAAL,CAAY9B,IAAZ,EAAkBzD,KAAK,CAACwI,QAAN,CAAesiB,IAAf,CAAlB,CAAtB;KAArC;GA9WU;;;AAkXd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACExQ,KA3XY,mBA2XH;IAAA;;IACP,IAAMnX,OAAO,GAAG,EAAhB;IACAnD,KAAK,CAACK,MAAN,CAAa,KAAK+T,YAAlB,EAAgC,UAACrH,UAAD,EAAatJ,IAAb,EAAsB;MACpDN,OAAO,CAACM,IAAD,CAAP,GAAgBsJ,UAAU,CAAC+O,SAAX,EAAhB;MACA,MAAI,CAACmO,iBAAL,CAAuBxmB,IAAvB,IAA+B,EAA/B;KAFF;IAIA,OAAON,OAAP;GAjYU;;;AAqYd;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEuB,MA1dY,kBA0dJjB,IA1dI,EA0dE0E,MA1dF,EA0dUzH,IA1dV,EA0dgB;IAAA;;IAC1BA,IAAI,KAAKA,IAAI,GAAG,EAAZ,CAAJ;IACA,OAAOwoB,SAAS,CAACxqB,SAAV,CAAoBgG,MAApB,CAA2BtF,IAA3B,CAAgC,IAAhC,EAAsCqE,IAAtC,EAA4C0E,MAA5C,EAAoDzH,IAApD,EACJ0S,IADI,CACC,UAACvO,MAAD;MAAA,OAAY,MAAI,CAACghB,IAAL,CAAUpiB,IAAV,EAAgBoB,MAAhB,EAAwBnE,IAAxB,CAAZ;KADD,CAAP;GA5dU;;;AAied;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEsT,UA3jBY,sBA2jBAvQ,IA3jBA,EA2jBM0O,OA3jBN,EA2jBezR,IA3jBf,EA2jBqB;IAAA;;IAC/BA,IAAI,KAAKA,IAAI,GAAG,EAAZ,CAAJ;IACA,OAAOwoB,SAAS,CAACxqB,SAAV,CAAoBsV,UAApB,CAA+B5U,IAA/B,CAAoC,IAApC,EAA0CqE,IAA1C,EAAgD0O,OAAhD,EAAyDzR,IAAzD,EACJ0S,IADI,CACC,UAACvO,MAAD;MAAA,OAAY,MAAI,CAACghB,IAAL,CAAUpiB,IAAV,EAAgBoB,MAAhB,EAAwBnE,IAAxB,CAAZ;KADD,CAAP;GA7jBU;EAikBZ+oB,YAjkBY,wBAikBEhmB,IAjkBF,EAikBQ/C,IAjkBR,EAikBc;IACxB,IAAMqqB,IAAI,GAAG,IAAb;IACA,IAAM1iB,MAAM,GAAG6gB,SAAS,CAACxqB,SAAV,CAAoB+qB,YAApB,CAAiCrqB,IAAjC,CAAsC2rB,IAAtC,EAA4CtnB,IAA5C,EAAkD/C,IAAlD,CAAf;IACAqqB,IAAI,CAACR,eAAL,CAAqB9mB,IAArB,IAA6B,EAA7B;IACAsnB,IAAI,CAACd,iBAAL,CAAuBxmB,IAAvB,IAA+B,EAA/B;IACA4E,MAAM,CAACC,YAAP,IAAuB7J,MAAM,CAACuJ,cAAP,CAAsBK,MAAtB,EAA8B,cAA9B,EAA8C;MAAErJ,KAAK,EAAE;KAAvD,CAAvB;IAEA,IAAMgsB,cAAc,GAAG;;MAErBC,MAAM,EAAE,EAFa;;MAIrBta,SAAS,EAAEoa,IAJU;;MAMrB1iB,MAAM,EAANA;KANF;;IASA,IAAI3H,IAAI,IAAK,gBAAgBA,IAA7B,EAAoC;MAClCsqB,cAAc,CAACjQ,UAAf,GAA4Bra,IAAI,CAACqa,UAAjC;KAjBsB;;;IAqBxB,IAAMhO,UAAU,GAAGge,IAAI,CAAC3W,YAAL,CAAkB3Q,IAAlB,IAA0B,IAAIsnB,IAAI,CAACT,eAAT,CAAyB,IAAzB,EAA+BU,cAA/B,CAA7C,CArBwB;;IAuBxB,IAAM3N,MAAM,GAAGhV,MAAM,CAACgV,MAAP,IAAiB,EAAhC;IACA,IAAM4B,UAAU,GAAG5B,MAAM,CAAC4B,UAAP,IAAqB,EAAxC,CAxBwB;;IA0BxBjf,KAAK,CAACK,MAAN,CAAa4e,UAAb,EAAyB,UAAUve,IAAV,EAAgBoI,IAAhB,EAAsB;MAC7C,IAAIpI,IAAI,CAACwqB,OAAT,EAAkB;QAChBne,UAAU,CAACuH,WAAX,CAAuBxL,IAAvB;;KAFJ,EA1BwB;;;IAkCxBiE,UAAU,CAACuH,WAAX,CAAuB,iBAAvB,EAA0C,CAAC,GAAD,CAA1C,EAAiD;MAC/C+E,WAD+C,uBAClCzR,GADkC,EAC7B;QAChB,OAAOmF,UAAU,CAACke,MAAX,CAAkBle,UAAU,CAAC2G,QAAX,CAAoB9L,GAApB,CAAlB,CAAP;;KAFJ;IAMAmF,UAAU,CAAC1F,EAAX,CAAc,KAAd,EAAqB,YAAmB;MAAA,mCAANV,IAAM;QAANA,IAAM;;;MACtCokB,IAAI,CAACN,kBAAL,OAAAM,IAAI,GAAoBtnB,IAApB,SAA6BkD,IAA7B,EAAJ;KADF;IAIA,OAAO0B,MAAP;GA7mBU;;;AAinBd;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEgP,OA3sBY,mBA2sBH5T,IA3sBG,EA2sBGkP,EA3sBH,EA2sBOjS,IA3sBP,EA2sBa;IAAA;;IACvBA,IAAI,KAAKA,IAAI,GAAG,EAAZ,CAAJ;IACA,OAAOwoB,SAAS,CAACxqB,SAAV,CAAoB2Y,OAApB,CAA4BjY,IAA5B,CAAiC,IAAjC,EAAuCqE,IAAvC,EAA6CkP,EAA7C,EAAiDjS,IAAjD,EAAuD0S,IAAvD,CAA4D,UAACvO,MAAD,EAAY;MAC7E,IAAMsD,MAAM,GAAG,MAAI,CAACyI,aAAL,CAAmBnN,IAAnB,EAAyBqH,MAAzB,CAAgC6H,EAAhC,EAAoCjS,IAApC,CAAf;;MAEA,IAAIA,IAAI,CAACuX,GAAT,EAAc;QACZpT,MAAM,CAACmI,IAAP,GAAc7E,MAAd;OADF,MAEO;QACLtD,MAAM,GAAGsD,MAAT;;;MAEF,OAAO,MAAI,CAACoiB,eAAL,CAAqB9mB,IAArB,EAA2BkP,EAA3B,CAAP;MACA,OAAO,MAAI,CAACsX,iBAAL,CAAuBxmB,IAAvB,EAA6BkP,EAA7B,CAAP;MACA,OAAO9N,MAAP;KAVK,CAAP;GA7sBU;;;AA4tBd;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEie,UApzBY,sBAozBArf,IApzBA,EAozBMsL,KApzBN,EAozBarO,IApzBb,EAozBmB;IAAA;;IAC7BA,IAAI,KAAKA,IAAI,GAAG,EAAZ,CAAJ;IACA,OAAOwoB,SAAS,CAACxqB,SAAV,CAAoBokB,UAApB,CAA+B1jB,IAA/B,CAAoC,IAApC,EAA0CqE,IAA1C,EAAgDsL,KAAhD,EAAuDrO,IAAvD,EAA6D0S,IAA7D,CAAkE,UAACvO,MAAD,EAAY;MACnF,IAAMsN,OAAO,GAAG,MAAI,CAACvB,aAAL,CAAmBnN,IAAnB,EAAyBqY,SAAzB,CAAmC/M,KAAnC,EAA0CrO,IAA1C,CAAhB;;MAEA,IAAIA,IAAI,CAACuX,GAAT,EAAc;QACZpT,MAAM,CAACmI,IAAP,GAAcmF,OAAd;OADF,MAEO;QACLtN,MAAM,GAAGsN,OAAT;;;MAEF,IAAM2Y,IAAI,GAAG,MAAI,CAACK,SAAL,CAAe1nB,IAAf,EAAqBsL,KAArB,EAA4BrO,IAA5B,CAAb;;MACA,OAAO,MAAI,CAAC6pB,eAAL,CAAqB9mB,IAArB,EAA2B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CAAZ;KADD,CAAP;GAl0CU;;;AAu0Cd;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE2iB,SA55CY,qBA45CD5f,IA55CC,EA45CKrB,KA55CL,EA45CY2M,KA55CZ,EA45CmBrO,IA55CnB,EA45CyB;IAAA;;IACnCA,IAAI,KAAKA,IAAI,GAAG,EAAZ,CAAJ;IACA,OAAOwoB,SAAS,CAACxqB,SAAV,CAAoB2kB,SAApB,CAA8BjkB,IAA9B,CAAmC,IAAnC,EAAyCqE,IAAzC,EAA+CrB,KAA/C,EAAsD2M,KAAtD,EAA6DrO,IAA7D,EACJ0S,IADI,CACC,UAACvO,MAAD;MAAA,OAAY,OAAI,CAACghB,IAAL,CAAUpiB,IAAV,EAAgBoB,MAAhB,EAAwBnE,IAAxB,CAAZ;KADD,CAAP;GA95CU;;;AAm6Cd;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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,UAArB,EAAiC,IAAjC;;IAEA,IAAIxjB,MAAM,CAACC,YAAP,CAAoBzG,MAApB,IAA8BsQ,OAAO,CAACtQ,MAA1C,EAAkD;MAChDwG,MAAM,CAACC,YAAP,CAAoB1I,OAApB,CAA4B,UAAUe,GAAV,EAAe;QACzCA,GAAG,CAAC4R,mBAAJ,CAAwBlK,MAAxB,EAAgC8J,OAAhC;OADF;;;IAKF,OAAOA,OAAP;;AA/E6B,CAAlB,CAAf;AAmFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzKA,IAAM4Z,kBAAkB,GAAG;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,eAAe,EAAE;AAVQ,CAA3B;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,CAAoBvrB,IAApB,EAA0B;EACxBV,KAAK,CAACqD,cAAN,CAAqB,IAArB,EAA2B4oB,SAA3B;EAEAvrB,IAAI,KAAKA,IAAI,GAAG,EAAZ,CAAJ,CAHwB;;EAKxBV,KAAK,CAACuB,MAAN,CAAab,IAAb,EAAmBqrB,kBAAnB;EACArrB,IAAI,CAAC4pB,eAAL,KAAyB5pB,IAAI,CAAC4pB,eAAL,GAAuBqB,kBAAhD;EAEA,KAAKzH,iBAAL,KAA2B,KAAKA,iBAAL,GAAyB,EAApD;EACA,KAAKgI,wBAAL,CAA8B3W,aAA9B,EAA6CC,iBAA7C,E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AtB,EAAkCd,SAAlC;WADF;SADF;;;MAMF,OAAOuE,MAAP;KAjBK,CAAP;GA1EU;EA+FZqnB,wBA/FY,oCA+FctlB,IA/Fd,EA+FoBylB,iBA/FpB,EA+FuC7pB,UA/FvC,EA+FmD;IAC7D,KAAK0hB,iBAAL,CAAuBtd,IAAvB,IAA+B;MAAE8c,iBAAiB,EAAE2I,iBAArB;MAAwCpY,gBAAgB,EAAEzR;KAAzF;;AAhGU,CAAd;AAoGA,kBAAe6nB,aAAW,CAAC/iB,MAAZ,CAAmBlF,OAAnB,CAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAoOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAakqB,OAAO,GAAG,gBAAhB;;;;"}